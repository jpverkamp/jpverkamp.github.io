<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fish on jverkamp.com</title><link>https://blog.jverkamp.com/programming/languages/fish/</link><description>Recent content in Fish on jverkamp.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 11 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/programming/languages/fish/atom.xml" rel="self" type="application/rss+xml"/><item><title>Extending my EC2 script</title><link>https://blog.jverkamp.com/2020/08/11/extending-my-ec2-script/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2020/08/11/extending-my-ec2-script/</guid><description>&lt;p>Another quick post.&lt;/p>
&lt;p>What feels like a lifetime ago, I &lt;a href="https://blog.jverkamp.com/2015/10/30/finding-ec2-instances-by-tag/">wrote a post&lt;/a> about finding &lt;code>ec2&lt;/code> instances by name. I honestly use that script just about every day, mostly for automatically finding instances to SSH to (a la &lt;a href="https://blog.jverkamp.com/2017/12/18/ssh-config-proxycommand-tricks/">SSH config tricks&lt;/a>). But there are a few other quick things I&amp;rsquo;ve done with it:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ec2-script&lt;/code> - Run a script on all instances of a given name&lt;/li>
&lt;li>&lt;code>ec2-disk&lt;/code> - A specialization of &lt;code>ec2-script&lt;/code> to check main disk usage&lt;/li>
&lt;li>&lt;code>terminate&lt;/code> - A script that I use with &lt;code>ec2&lt;/code> to terminate instances from the command line&lt;/li>
&lt;li>&lt;code>ec2-cycle&lt;/code> - Slow cycle a given set of &lt;code>ec2&lt;/code> instances by terminating so many per minute&lt;/li>
&lt;/ul>
&lt;p>All of which are included in my &lt;a href="https://github.com/jpverkamp/dotfiles/tree/master/bin" target="_blank" rel="noopener">dotfiles&lt;/a>.&lt;/p></description></item><item><title>Docker Magic - Arbitrary docker runtimes in place</title><link>https://blog.jverkamp.com/2020/08/01/docker-magic-arbitrary-docker-runtimes-in-place/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2020/08/01/docker-magic-arbitrary-docker-runtimes-in-place/</guid><description>&lt;p>A quick post today.&lt;/p>
&lt;p>I find myself working with a surprising number of different languages/environments day to day. In the last week, I&amp;rsquo;ve worked with PHP, Python, Go, Ruby, and Javascript. And different versions of several of those. While I could install something like &lt;a href="https://virtualenv.pypa.io/en/latest/" target="_blank" rel="noopener">virtualenv&lt;/a> for Python / &lt;a href="https://github.com/rbenv/rbenv" target="_blank" rel="noopener">rbenv&lt;/a> for Ruby / etc, I already have a tool exactly designed for this sort of thing: Docker!&lt;/p></description></item><item><title>Deep Dreams with Fish and Docker</title><link>https://blog.jverkamp.com/2018/04/01/deep-dreams-with-fish-and-docker/</link><pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2018/04/01/deep-dreams-with-fish-and-docker/</guid><description>&lt;p>&lt;a href="https://github.com/google/deepdream" target="_blank" rel="noopener">DeepDream&lt;/a> is a &lt;a href="https://research.googleblog.com/2015/06/inceptionism-going-deeper-into-neural.html" target="_blank" rel="noopener">research project&lt;/a> originally from Google that gives you a look into how &lt;a href="https://en.wikipedia.org/wiki/neural%20networks">neural networks&lt;/a> see the world. They&amp;rsquo;re fascinating, bizarre, and a lot of fun to play with. A bit of work getting them to work on your own machine though.&lt;/p>
&lt;p>Luckily, GitHub user &lt;a href="https://github.com/saturnism/deepdream-cli-docker" target="_blank" rel="noopener">saturnism&lt;/a> has put together a lovely Docker-based tool that will do just that for us: &lt;a href="https://github.com/saturnism/deepdream-cli-docker" target="_blank" rel="noopener">deepdream-cli-docker&lt;/a>. Unfortunately, the commands are still a bit long. Let&amp;rsquo;s clean it up a bit and add the ability to dream about non-JPGs (animated GIFs especially!).&lt;/p>
&lt;figure>&lt;img src="https://blog.jverkamp.com/embeds/2018/dream-sorcery.gif">
&lt;/figure></description></item><item><title>Making Fish Shell Smile</title><link>https://blog.jverkamp.com/2018/01/12/making-fish-shell-smile/</link><pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2018/01/12/making-fish-shell-smile/</guid><description>&lt;p>When working in a shell, from time to time, I need to know if a command succeeded or failed. Sometimes, it&amp;rsquo;s easy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fish" data-lang="fish">&lt;span style="display:flex;">&lt;span>$ make noise
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">make&lt;/span>: *** No rule to make target `noise&amp;#39;. Stop.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sometimes, less so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fish" data-lang="fish">&lt;span style="display:flex;">&lt;span>$ grep frog podcasts.json &lt;span style="color:#f92672">&amp;gt;&lt;/span> podcasts-about-frogs.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since, alas, I don&amp;rsquo;t have any podcasts about frogs, that command would fail silently. But that&amp;rsquo;s fixable!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fish" data-lang="fish">&lt;span style="display:flex;">&lt;span>$ grep frog podcasts.json &lt;span style="color:#f92672">&amp;gt;&lt;/span> podcasts-about-frogs.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#75715e"># Bash/Zsh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>$ echo $?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#75715e"># Fish
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>$ echo $status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>