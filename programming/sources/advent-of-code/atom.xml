<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advent of Code on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/sources/advent-of-code/</link>
    <description>Recent content in Advent of Code on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Dec 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/sources/advent-of-code/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advent of Code: Day 25</title>
      <link>https://blog.jverkamp.com/2015/12/25/advent-of-code-day-25/</link>
      <pubDate>Fri, 25 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/25/advent-of-code-day-25/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/25&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Take the relation:&lt;/p&gt;

&lt;div class=&#34;latex-block&#34;&gt;
    F(n) = \left\{\begin{matrix}
20151225 &amp; \textrm{if}\ n = 1 \\
252533F(n-1) \mod 33554393 &amp; \textrm{otherwise}
\end{matrix}\right.
&lt;/div&gt;


&lt;p&gt;Arrange the values according to &lt;a href=&#34;https://en.wikipedia.org/wiki/Cantor%27s%20diagonal%20argument&#34;&gt;Cantor&amp;#39;s diagonal argument&lt;/a&gt;. Find the value at a specific cell.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 24</title>
      <link>https://blog.jverkamp.com/2015/12/24/advent-of-code-day-24/</link>
      <pubDate>Thu, 24 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/24/advent-of-code-day-24/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/24&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Split a list of integers into three groups of equal sum. Find the grouping such that the smallest group has the least items, breaking ties by the smallest product for that group.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 23</title>
      <link>https://blog.jverkamp.com/2015/12/23/advent-of-code-day-23/</link>
      <pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/23/advent-of-code-day-23/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/23&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Create a simple virtual machine with two registers (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, non-negative integers) and six instructions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hlf (a|b)&lt;/code&gt; - divide the given register by half, round down&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tpl (a|b)&lt;/code&gt; - triple the given register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inc (a|b)&lt;/code&gt; - add 1 to the given register&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jmp [+-]\d+&lt;/code&gt; - jump forward/backwards by the given number of instructions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jie (a|b), [+-]\d+&lt;/code&gt; - if the given register is even, jump&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jio (a|b), [+-]\d+&lt;/code&gt; - if the given register equals one, jump&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 22</title>
      <link>https://blog.jverkamp.com/2015/12/22/advent-of-code-day-22/</link>
      <pubDate>Tue, 22 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/22/advent-of-code-day-22/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/22&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Simulate an RPG mage battle; finding the winning solution using the least mana. See the &lt;a href=&#34;http://adventofcode.com/day/22&#34;&gt;original writeup&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 21</title>
      <link>https://blog.jverkamp.com/2015/12/21/advent-of-code-day-21/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/21/advent-of-code-day-21/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/21&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Given a shop full of weapons (buy exactly one), armor (buy zero or one), and rings (buy 0, 1, or 2), determine the set of items that will defeat a given enemy for the minimum cost (see the &lt;a href=&#34;http://adventofcode.com/day/21&#34;&gt;original writeup&lt;/a&gt; for more details).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 20</title>
      <link>https://blog.jverkamp.com/2015/12/20/advent-of-code-day-20/</link>
      <pubDate>Sun, 20 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/20/advent-of-code-day-20/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/20&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; &lt;em&gt;P(n)&lt;/em&gt; is defined such that for each number &lt;em&gt;i&lt;/em&gt;, add &lt;em&gt;10i&lt;/em&gt; to any number divisible by &lt;em&gt;i&lt;/em&gt;. Find the first value &lt;em&gt;n&lt;/em&gt; such that &lt;em&gt;P(n)&lt;/em&gt; is at least a given target number.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 19</title>
      <link>https://blog.jverkamp.com/2015/12/19/advent-of-code-day-19/</link>
      <pubDate>Sat, 19 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/19/advent-of-code-day-19/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/19&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Given a list of list of string replacements and an input string, determine how many unique output strings are possible after one step.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 18</title>
      <link>https://blog.jverkamp.com/2015/12/18/advent-of-code-day-18/</link>
      <pubDate>Fri, 18 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/18/advent-of-code-day-18/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/18&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Simulate &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s%20Game%20of%20Life&#34;&gt;Conway&amp;#39;s Game of Life&lt;/a&gt;. Count how many lights are on after 100 iterations.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 17</title>
      <link>https://blog.jverkamp.com/2015/12/17/advent-of-code-day-17/</link>
      <pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/17/advent-of-code-day-17/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/17&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Given a list of containers of varying sizes and a total volume to contain, determine how many different combinations of containers match exactly the given volume.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advent of Code: Day 16</title>
      <link>https://blog.jverkamp.com/2015/12/16/advent-of-code-day-16/</link>
      <pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/16/advent-of-code-day-16/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://adventofcode.com/day/16&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Given a list of target values of the form:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;children: 3
cats: 7
samoyeds: 2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And a list of &amp;lsquo;Aunt Sues&amp;rsquo;, each with known values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Sue 1: children: 1, cars: 8, vizslas: 7
Sue 2: akitas: 10, perfumes: 10, children: 5
Sue 3: cars: 5, pomeranians: 4, vizslas: 1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Determine which Sue has no unset but matching values.&lt;/p&gt;

&lt;p&gt;For example, Sue 1 is invalid because &lt;code&gt;children&lt;/code&gt; is 1 versus 3 and Sue 2 because &lt;code&gt;children&lt;/code&gt; is 5 versus 3. Given only the values above, Sue 3 would be valid since there are no contradictions.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>