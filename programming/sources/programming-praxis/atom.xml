<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Praxis on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/sources/programming-praxis/</link>
    <description>Recent content in Programming Praxis on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Aug 2014 17:00:55 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/sources/programming-praxis/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Minimal palindromic base</title>
      <link>https://blog.jverkamp.com/2014/08/13/minimal-palindromic-base/</link>
      <pubDate>Wed, 13 Aug 2014 17:00:55 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/08/13/minimal-palindromic-base/</guid>
      <description>&lt;p&gt;What&amp;rsquo;s this? Two posts in one day? Well, &lt;a href=&#34;https://blog.jverkamp.com/2014/08/08/onwards-and-upwards/&#34;&gt;writing a static blog generator&lt;/a&gt; can do that. ðŸ˜„&lt;/p&gt;

&lt;p&gt;Another easily phrased challenge:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We have a simple little problem today: Given an integer n &amp;gt; 2, find the minimum b &amp;gt; 1 for which n base b is a palindrome.&lt;/p&gt;

&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://programmingpraxis.com/2014/08/05/minimal-palindromic-base/&#34;&gt;Minimal Palindromic Base&lt;/a&gt; via Programming Praxis&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Number words</title>
      <link>https://blog.jverkamp.com/2014/08/13/number-words/</link>
      <pubDate>Wed, 13 Aug 2014 14:00:55 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/08/13/number-words/</guid>
      <description>&lt;p&gt;Today&amp;rsquo;s five minute post brought to you via &lt;a href=&#34;http://programmingpraxis.com/2014/07/25/number-words/&#34;&gt;Programming Praxis&lt;/a&gt; / &lt;a href=&#34;http://www.careercup.com/question?id=5120347909128192&#34;&gt;Career Cup&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a positive integer, return all the ways that the integer can be represented by letters using the mapping 1 -&amp;gt; A, 2 -&amp;gt; B, â€¦, 26 -&amp;gt; Z. For instance, the number 1234 can be represented by the words ABCD, AWD and LCD.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Call stack bracket matcher</title>
      <link>https://blog.jverkamp.com/2014/06/11/call-stack-bracket-matcher/</link>
      <pubDate>Wed, 11 Jun 2014 14:00:55 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/06/11/call-stack-bracket-matcher/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://programmingpraxis.com/2014/06/10/balanced-delimiters-2/&#34;&gt;Five minute post&lt;/a&gt; from Programming Praxis:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write a function to return true/false after looking at a string. Examples of strings that pass:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{}, [], (), a(b)c, abc[d], a(b)c{d[e]}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Examples of strings that donâ€™t pass:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{], (], a(b]c, abc[d}, a(b)c{d[e}]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Caesar cipher</title>
      <link>https://blog.jverkamp.com/2014/03/12/caesar-cipher/</link>
      <pubDate>Wed, 12 Mar 2014 14:00:10 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/03/12/caesar-cipher/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://programmingpraxis.com/2014/03/11/caesar-cipher/&#34;&gt;Here&amp;rsquo;s&lt;/a&gt; a 5 minute&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; coding challenge from Programming Praxis:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Caesar%20cipher&#34;&gt;caeser cipher&lt;/a&gt;, named after Julius Caesar, who either invented the cipher or was an early user of it, is a simple substitution cipher in which letters are substituted at a fixed distance along the alphabet, which cycles; childrenâ€™s magic decoder rings implement a caesar cipher. Non-alphabetic characters are passed unchanged. For instance, the plaintext PROGRAMMINGPRAXIS is rendered as the ciphertext SURJUDPPLQJSUDALV with a shift of 3 positions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;https://blog.jverkamp.com/embeds/2014/caesar-shift.png&#34; /&gt;
    
    
&lt;/figure&gt;

&amp;ndash; Source: &lt;a href=&#34;https://en.wikipedia.org/wiki/File:Caesar%20cipher%20left%20shift%20of%203.svg&#34;&gt;Wikipedia&lt;/a&gt;, public domain&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Smallest consecutive four-factor composites</title>
      <link>https://blog.jverkamp.com/2013/09/19/smallest-consecutive-four-factor-composites/</link>
      <pubDate>Thu, 19 Sep 2013 14:00:23 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/09/19/smallest-consecutive-four-factor-composites/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://programmingpraxis.com/2013/09/17/smallest-consecutive-four-factor-composites/&#34;&gt;Another post&lt;/a&gt; from Programming Praxis, from this past Tuesday:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The smallest pair of consecutive natural numbers that each have two distinct prime factors are 14 = 2 * 7 and 15 = 3 * 5. The smallest triplet of consecutive natural numbers that each have three distinct prime factors are 644 = 2^2 * 7 * 23, 645 = 3 * 5 * 43 and 646 = 2 * 17 * 19. What is the smallest set of four consecutive natural numbers that each have four distinct prime factors?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visualizing the Monkey Grid</title>
      <link>https://blog.jverkamp.com/2013/08/30/visualizing-the-monkey-grid/</link>
      <pubDate>Fri, 30 Aug 2013 14:00:37 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/08/30/visualizing-the-monkey-grid/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a bit behind the times, but &lt;a href=&#34;http://programmingpraxis.com/2013/08/16/monkey-grid-puzzle/&#34;&gt;this post&lt;/a&gt; from Programming Praxis intrigued me enough that I kept it in my todo list for rather a while. So let&amp;rsquo;s get around to it.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll just copy the description straight from the Programming Praxis website (although there are at least two previous version:&lt;a href=&#34;http://stackoverflow.com/questions/9762953/planar-grid-puzzle&#34;&gt;[1]&lt;/a&gt;&lt;a href=&#34;http://stackoverflow.com/questions/18133918/improve-the-solution-to-monkey-grid-puzzle&#34;&gt;[2]&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is a monkey which can walk around on a planar grid. The monkey can move one space at a time left, right, up or down. That is, from (x, y) the monkey can go to (x+1, y), (x-1, y), (x, y+1), and (x, y-1). Points where the sum of the digits of the absolute value of the x coordinate plus the sum of the digits of the absolute value of the y coordinate are lesser than or equal to 19 are accessible to the monkey. For example, the point (59, 79) is inaccessible because 5 + 9 + 7 + 9 = 30, which is greater than 19. Another example: the point (-5, -7) is accessible because abs(-5) + abs(-7) = 5 + 7 = 12, which is less than 19. How many points can the monkey access if it starts at (0, 0), including (0, 0) itself?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swap list nodes</title>
      <link>https://blog.jverkamp.com/2013/06/26/swap-list-nodes/</link>
      <pubDate>Wed, 26 Jun 2013 14:00:42 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/06/26/swap-list-nodes/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been rather a while since I&amp;rsquo;ve worked out a &lt;a title=&#34;Programming Praxis&#34; href=&#34;http://programmingpraxis.com/&#34;&gt;Programming Praxis&lt;/a&gt; problem, but they posted a &lt;a title=&#34;Swap list nodes&#34; href=&#34;http://programmingpraxis.com/2013/06/25/swap-list-nodes/&#34;&gt;new one yesterday&lt;/a&gt;, so now seems as good a time as any. The problem is relatively simple:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a linked list, swap the kth node from the head of the list with the kth node from the end of the list.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since all lists in Scheme are linked lists, that part seems easy enough. To make the problem a little more interesting however, I&amp;rsquo;m going to work it out in a purely functional manner: no mutation.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cyclic equality</title>
      <link>https://blog.jverkamp.com/2013/04/09/cyclic-equality/</link>
      <pubDate>Tue, 09 Apr 2013 14:00:15 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/04/09/cyclic-equality/</guid>
      <description>&lt;p&gt;In &lt;a title=&#34;Cyclic equality on Programming Praxis&#34; href=&#34;http://programmingpraxis.com/2013/04/09/cyclic-equality/&#34;&gt;today&amp;rsquo;s post&lt;/a&gt; from Programming Praxis, the goal is to check if two cyclic lists are equal. So if you have the cycles &lt;code&gt;â†»(1 2 3 4 5)&lt;/code&gt; and &lt;code&gt;â†»(3 4 5 1 2)&lt;/code&gt;, they&amp;rsquo;re equal. Likewise, &lt;code&gt;â†»(1 2 2 1)&lt;/code&gt;Â and &lt;code&gt;â†»(2 1 1 2)&lt;/code&gt; are equal. But &lt;code&gt;â†»(1 2 3 4)&lt;/code&gt;Â and &lt;code&gt;â†»(1 2 3 5)&lt;/code&gt; are not since they have different elements whileÂ &lt;code&gt;â†»(1 1 1)&lt;/code&gt; andÂ &lt;code&gt;â†»(1 1 1 1)&lt;/code&gt; aren&amp;rsquo;t since they have different elements.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Approximating Pi with Buffon&#39;s Needle</title>
      <link>https://blog.jverkamp.com/2013/03/18/approximating-pi-with-buffons-needle/</link>
      <pubDate>Mon, 18 Mar 2013 14:00:14 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/03/18/approximating-pi-with-buffons-needle/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a bit late for Pi Day, but Programming Praxis had &lt;a href=&#34;http://programmingpraxis.com/2013/03/15/buffons-needle/&#34; title=&#34;Buffon&#39;s Needle&#34;&gt;a neat problem on Friday&lt;/a&gt; that I wanted to check out:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Suppose we have a floor made of parallel strips of wood, each the same width, and we drop a needle onto the floor. What is the probability that the needle will lie across a line between two strips?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Knight moves</title>
      <link>https://blog.jverkamp.com/2013/03/11/knight-moves/</link>
      <pubDate>Mon, 11 Mar 2013 22:00:20 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/03/11/knight-moves/</guid>
      <description>&lt;p&gt;How many ways are there for a knight in chess from the top left to the bottom right of a chess board in exactlyÂ *n=6*Â moves?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>