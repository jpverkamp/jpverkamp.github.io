---
title: "Genuary 2023.09: Plants"
date: 2023-02-09
draft: True
programming/languages:
- JavaScript
programming/topics:
- Generative Art
- Procedural Content
- p5js
series:
- Genuary 2023
cover: /embeds/2023/genuary-09.png
---
[Genuary](https://genuary.art/)! 

Spend a month making one beautiful thing per day, given a bunch of prompts. A month late, but as they say, 'the second best time is now'.  

Let's do it!

## 9) Plants

<!--more-->

Straight forward this time, let's do a recursive splitting pattern. Basically: 

1) draw a line
2) if we haven't hit a limit:
   * split into n children 
   * for each child:
       * repeat from (1)

{{<p5js width="600" height="420">}}
let gui;
let params = {
  branches: 3, branchesMin: 1, branchesMax: 10,
  multiplier: 0.8, multiplierMin: 0.05, multiplierMax: 0.95, multiplierStep: 0.05,
  
  sway: true,
  swayPerLevel: true,
  swayPerBranch: true,
  
  maxSplits: 4, maxSplitsMin: 1, maxSplitsMax: 10,
  minLength: 10, minLengthMin: 1, minLengthMax: 100,
  
  maxSplit: 3.1415/4, maxSplitMin: 0, maxSplitMax: 3.1415, maxSplitStep: 0.01
}

function setup() {
  createCanvas(400, 400);
  
  gui = createGuiPanel('params');
  gui.addObject(params);
  gui.setPosition(420, 0);
}

function draw() {
  background(255);
  
  function step(length, count, index) {
    let left = params.maxSplit;
    let right = params.maxSplit;
    
    if (params.sway) {
      let a = frameCount / 100.0;
      let b = params.swayPerLevel ? count : 0;
      let c = params.swayPerBranch ? index : 0;

      left = noise(a, 0, b + c) * params.maxSplit;
      right = noise(a, 1, b + c) * params.maxSplit;
    }

    let each = (left + right) / (params.branches - 1);
    
    push();
    
    stroke(0);
    fill(0);
    line(0, 0, 0, length);
    
    translate(0, length);
    
    if (count <= params.maxSplits && length > params.minLength) {
      // Branches if we have more splits and enough length left
      rotate(-left);
      step(length * params.multiplier, count + 1, 0);
      
      for (let i = 0; i < params.branches - 1; i++) {
        rotate(each);
        step(length * params.multiplier, count + 1, i + 1);
      }
    } else {
      // Otherwise, leaves
      fill(0, 255, 0);
      circle(0, 0, 20);
    }
    
    pop();
  }
  
  translate(200, 400);
  rotate(PI);
  step(100, 1);
}
{{</p5js>}}

A few interesting settings:

* <a target="_blank" href="#eyJicmFuY2hlcyI6MywiYnJhbmNoZXNNaW4iOjEsImJyYW5jaGVzTWF4IjoxMCwibXVsdGlwbGllciI6MC44LCJtdWx0aXBsaWVyTWluIjowLjA1LCJtdWx0aXBsaWVyTWF4IjowLjk1LCJtdWx0aXBsaWVyU3RlcCI6MC4wNSwic3dheSI6dHJ1ZSwic3dheVBlckxldmVsIjp0cnVlLCJzd2F5UGVyQnJhbmNoIjp0cnVlLCJtYXhTcGxpdHMiOjQsIm1heFNwbGl0c01pbiI6MSwibWF4U3BsaXRzTWF4IjoxMCwibWluTGVuZ3RoIjoxMCwibWluTGVuZ3RoTWluIjoxLCJtaW5MZW5ndGhNYXgiOjEwMCwibWF4U3BsaXQiOjAuNzg1Mzc1LCJtYXhTcGxpdE1pbiI6MCwibWF4U3BsaXRNYXgiOjMuMTQxNSwibWF4U3BsaXRTdGVwIjowLjAxfQ==">Default</a>
* <a target="_blank" href="#eyJicmFuY2hlcyI6MTAsImJyYW5jaGVzTWluIjoxLCJicmFuY2hlc01heCI6MTAsIm11bHRpcGxpZXIiOjAuOCwibXVsdGlwbGllck1pbiI6MC4wNSwibXVsdGlwbGllck1heCI6MC45NSwibXVsdGlwbGllclN0ZXAiOjAuMDUsInN3YXkiOnRydWUsInN3YXlQZXJMZXZlbCI6ZmFsc2UsInN3YXlQZXJCcmFuY2giOmZhbHNlLCJtYXhTcGxpdHMiOjMsIm1heFNwbGl0c01pbiI6MSwibWF4U3BsaXRzTWF4IjoxMCwibWluTGVuZ3RoIjoxMywibWluTGVuZ3RoTWluIjoxLCJtaW5MZW5ndGhNYXgiOjEwMCwibWF4U3BsaXQiOjIuMTcsIm1heFNwbGl0TWluIjowLCJtYXhTcGxpdE1heCI6My4xNDE1LCJtYXhTcGxpdFN0ZXAiOjAuMDF9">A solid shell</a>
* <a target="_blank" href="#eyJicmFuY2hlcyI6MiwiYnJhbmNoZXNNaW4iOjEsImJyYW5jaGVzTWF4IjoxMCwibXVsdGlwbGllciI6MC44NSwibXVsdGlwbGllck1pbiI6MC4wNSwibXVsdGlwbGllck1heCI6MC45NSwibXVsdGlwbGllclN0ZXAiOjAuMDUsInN3YXkiOnRydWUsInN3YXlQZXJMZXZlbCI6dHJ1ZSwic3dheVBlckJyYW5jaCI6dHJ1ZSwibWF4U3BsaXRzIjo4LCJtYXhTcGxpdHNNaW4iOjEsIm1heFNwbGl0c01heCI6MTAsIm1pbkxlbmd0aCI6MTMsIm1pbkxlbmd0aE1pbiI6MSwibWluTGVuZ3RoTWF4IjoxMDAsIm1heFNwbGl0IjoyLjIyLCJtYXhTcGxpdE1pbiI6MCwibWF4U3BsaXRNYXgiOjMuMTQxNSwibWF4U3BsaXRTdGVwIjowLjAxfQ==">Brownian motion</a>
* <a target="_blank" href="#eyJicmFuY2hlcyI6MiwiYnJhbmNoZXNNaW4iOjEsImJyYW5jaGVzTWF4IjoxMCwibXVsdGlwbGllciI6MC43LCJtdWx0aXBsaWVyTWluIjowLjA1LCJtdWx0aXBsaWVyTWF4IjowLjk1LCJtdWx0aXBsaWVyU3RlcCI6MC4wNSwic3dheSI6ZmFsc2UsInN3YXlQZXJMZXZlbCI6dHJ1ZSwic3dheVBlckJyYW5jaCI6dHJ1ZSwibWF4U3BsaXRzIjo0LCJtYXhTcGxpdHNNaW4iOjEsIm1heFNwbGl0c01heCI6MTAsIm1pbkxlbmd0aCI6MTAsIm1pbkxlbmd0aE1pbiI6MSwibWluTGVuZ3RoTWF4IjoxMDAsIm1heFNwbGl0IjoxLjU4LCJtYXhTcGxpdE1pbiI6MCwibWF4U3BsaXRNYXgiOjMuMTQxNSwibWF4U3BsaXRTdGVwIjowLjAxfQ==">Square</a>
* <a target="_blank" href="#eyJicmFuY2hlcyI6MywiYnJhbmNoZXNNaW4iOjEsImJyYW5jaGVzTWF4IjoxMCwibXVsdGlwbGllciI6MC41LCJtdWx0aXBsaWVyTWluIjowLjA1LCJtdWx0aXBsaWVyTWF4IjowLjk1LCJtdWx0aXBsaWVyU3RlcCI6MC4wNSwic3dheSI6ZmFsc2UsInN3YXlQZXJMZXZlbCI6dHJ1ZSwic3dheVBlckJyYW5jaCI6dHJ1ZSwibWF4U3BsaXRzIjo0LCJtYXhTcGxpdHNNaW4iOjEsIm1heFNwbGl0c01heCI6MTAsIm1pbkxlbmd0aCI6MSwibWluTGVuZ3RoTWluIjoxLCJtaW5MZW5ndGhNYXgiOjEwMCwibWF4U3BsaXQiOjIuMDksIm1heFNwbGl0TWluIjowLCJtYXhTcGxpdE1heCI6My4xNDE1LCJtYXhTcGxpdFN0ZXAiOjAuMDF9">Sierpi≈Ñski triangle</a>

{{< taxonomy-list "series" "Genuary 2023" >}}
