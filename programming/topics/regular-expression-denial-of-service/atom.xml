<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Regular Expression Denial of Service on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/regular-expression-denial-of-service/</link><description>Recent content in Regular Expression Denial of Service on jverkamp.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 19 Dec 2024 00:00:03 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/programming/topics/regular-expression-denial-of-service/atom.xml" rel="self" type="application/rss+xml"/><item><title>AoC 2024 Day 19: Regexinator</title><link>https://blog.jverkamp.com/2024/12/19/aoc-2024-day-19-regexinator/</link><pubDate>Thu, 19 Dec 2024 00:00:03 +0000</pubDate><guid>https://blog.jverkamp.com/2024/12/19/aoc-2024-day-19-regexinator/</guid><description>&lt;h2 id="source-day-19-linen-layout">Source: &lt;a href="https://adventofcode.com/2024/day/19" target="_blank" rel="noopener">Day 19: Linen Layout&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/jpverkamp/advent-of-code/blob/master/2024/src/day19.rs" target="_blank" rel="noopener">Full solution&lt;/a> for today (spoilers!).&lt;/p>
&lt;nav id="TableOfContents">
 &lt;ul>
 &lt;li>&lt;a href="#source-day-19-linen-layout">Source: &lt;a href="https://adventofcode.com/2024/day/19">Day 19: Linen Layout&lt;/a>&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#part-1">Part 1&lt;/a>
 &lt;ul>
 &lt;li>&lt;a href="#lets-write-it-ourselves-backtracking">Let&amp;rsquo;s write it ourselves: Backtracking&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#optimization-1-simplified-backtracking">Optimization 1: Simplified backtracking&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#optimization-2-memoization">Optimization 2: Memoization&lt;/a>&lt;/li>
 &lt;/ul>
 &lt;/li>
 &lt;li>&lt;a href="#part-2">Part 2&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#benchmarks">Benchmarks&lt;/a>&lt;/li>
 &lt;/ul>
&lt;/nav>

&lt;h2 id="part-1">Part 1&lt;/h2>
&lt;blockquote>
&lt;p>Given a comma delimited list of substrings and a list of strings, count how many of the latter strings can be made up of any (repeating) combination of the former.&lt;/p>&lt;/blockquote></description></item></channel></rss>