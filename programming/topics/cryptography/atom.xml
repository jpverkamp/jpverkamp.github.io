<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptography on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/cryptography/</link>
    <description>Recent content in Cryptography on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/cryptography/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up Postfix and OpenDKIM</title>
      <link>https://blog.jverkamp.com/2015/08/10/setting-up-postfix-and-opendkim/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/08/10/setting-up-postfix-and-opendkim/</guid>
      <description>&lt;p&gt;Last week, I was presented with a fairly interesting challenge: add DKIM (via &lt;a href=&#34;http://www.opendkim.org/&#34;&gt;OpenDKIM&lt;/a&gt;) support to our mail servers (running &lt;a href=&#34;http://www.postfix.org/&#34;&gt;Postfix&lt;/a&gt;). Given that I&amp;rsquo;ve never actually worked on a mail server before, it sounded fun. ðŸ˜„&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Caesar cipher</title>
      <link>https://blog.jverkamp.com/2014/03/12/caesar-cipher/</link>
      <pubDate>Wed, 12 Mar 2014 14:00:10 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/03/12/caesar-cipher/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://programmingpraxis.com/2014/03/11/caesar-cipher/&#34;&gt;Here&amp;rsquo;s&lt;/a&gt; a 5 minute&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; coding challenge from Programming Praxis:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Caesar%20cipher&#34;&gt;caeser cipher&lt;/a&gt;, named after Julius Caesar, who either invented the cipher or was an early user of it, is a simple substitution cipher in which letters are substituted at a fixed distance along the alphabet, which cycles; childrenâ€™s magic decoder rings implement a caesar cipher. Non-alphabetic characters are passed unchanged. For instance, the plaintext PROGRAMMINGPRAXIS is rendered as the ciphertext SURJUDPPLQJSUDALV with a shift of 3 positions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;https://blog.jverkamp.com/embeds/2014/caesar-shift.png&#34;/&gt; 
&lt;/figure&gt;

&amp;ndash; Source: &lt;a href=&#34;https://en.wikipedia.org/wiki/File:Caesar%20cipher%20left%20shift%20of%203.svg&#34;&gt;Wikipedia&lt;/a&gt;, public domain&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An optimal alphabetizing cipher</title>
      <link>https://blog.jverkamp.com/2013/01/25/an-optimal-alphabetizing-cipher/</link>
      <pubDate>Fri, 25 Jan 2013 19:45:37 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/01/25/an-optimal-alphabetizing-cipher/</guid>
      <description>&lt;p&gt;Here is &lt;a href=&#34;http://www.reddit.com/r/dailyprogrammer/comments/178vsz/012513_challenge_118_hard_alphabetizing_cipher/&#34; title=&#34;Challenge #118 [Hard] Alphabetizing cipher&#34;&gt;today&amp;rsquo;s /r/dailyprogramming challenge&lt;/a&gt;: Generate a simple substitution cipher such that the maximum number of words in a given dictionary of six letter words (there are 7,260 of them) are encoded as strings in alphabetical order.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>