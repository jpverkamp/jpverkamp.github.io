<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graphs on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/graphs/</link><description>Recent content in Graphs on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/graphs/atom.xml" rel="self" type="application/rss+xml"/><item><title>AoC 2022 Day 18: Lavinator</title><link>https://blog.jverkamp.com/2022/12/18/aoc-2022-day-18-lavinator/</link><pubDate>Sun, 18 Dec 2022 00:00:03 +0000</pubDate><guid>https://blog.jverkamp.com/2022/12/18/aoc-2022-day-18-lavinator/</guid><description>&lt;h2 id="source-boiling-bouldershttpsadventofcodecom2022day18">Source: &lt;a href="https://adventofcode.com/2022/day/18">Boiling Boulders&lt;/a>&lt;/h2>
&lt;h2 id="part-1">Part 1&lt;/h2>
&lt;blockquote>
&lt;p>Given a list of 1x1x1 cubes, determine the total surface area of the cubes.&lt;/p>
&lt;/blockquote></description></item><item><title>AoC 2022 Day 16: Pressurinator</title><link>https://blog.jverkamp.com/2022/12/16/aoc-2022-day-16-pressurinator/</link><pubDate>Fri, 16 Dec 2022 00:00:03 +0000</pubDate><guid>https://blog.jverkamp.com/2022/12/16/aoc-2022-day-16-pressurinator/</guid><description>&lt;h2 id="source-proboscidea-volcaniumhttpsadventofcodecom2022day16">Source: &lt;a href="https://adventofcode.com/2022/day/16">Proboscidea Volcanium&lt;/a>&lt;/h2>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#source-proboscidea-volcaniumhttpsadventofcodecom2022day16">Source: &lt;a href="https://adventofcode.com/2022/day/16">Proboscidea Volcanium&lt;/a>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#part-1">Part 1&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#optimized-version-with-multiple-steps-and-no-repeats">Optimized version with multiple steps and no-repeats&lt;/a>&lt;/li>
&lt;li>&lt;a href="#the-actual-code">The actual code&lt;/a>&lt;/li>
&lt;li>&lt;a href="#attempted-to-solve-via-30-steps-of-all-possibilities">Attempted to solve via 30 steps of all possibilities&lt;/a>&lt;/li>
&lt;li>&lt;a href="#a-priority-queue-edit-2-dec-20">A Priority Queue (Edit 2, Dec 20)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#part-2">Part 2&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#simulating-n-agents">Simulating &lt;em>n&lt;/em> agents&lt;/a>&lt;/li>
&lt;li>&lt;a href="#new-multi-agent-code-with-one-agent">New multi-agent code with one agent&lt;/a>&lt;/li>
&lt;li>&lt;a href="#checking-with-multiple-agents">Checking with multiple agents&lt;/a>&lt;/li>
&lt;li>&lt;a href="#problems-with-memory-">Problems with memory (?)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#improving-memory-usage">Improving memory usage&lt;/a>&lt;/li>
&lt;li>&lt;a href="#improving-runtime">Improving runtime&lt;/a>&lt;/li>
&lt;li>&lt;a href="#to-be-continued">To be continued&amp;hellip;&lt;/a>&lt;/li>
&lt;li>&lt;a href="#let-it-run-edit-dec-20">Let it run! (Edit, Dec 20)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#queues-to-the-rescue-edit-3-dec-20">Queues to the rescue (Edit 3, Dec 20)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#optimization-remaining_best_case-edit-4-dec-21">Optimization: &lt;code>remaining_best_case&lt;/code> (Edit 4, Dec 21)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#optimization-seen_skip-edit-4-dec-21">Optimization: &lt;code>seen_skip&lt;/code> (Edit 4, Dec 21)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#threading">Threading&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#graphviz-visualizations">Graphviz visualizations&lt;/a>&lt;/li>
&lt;li>&lt;a href="#performance">Performance&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;h2 id="part-1">Part 1&lt;/h2>
&lt;blockquote>
&lt;p>Given a graph of nodes, some of which have a &lt;code>pressure&lt;/code> (per tick output value) and an agent that can move through the graph and activate specific nodes (so that they output their per tick value every future tick), what is the maximum total output possible in 30 steps?&lt;/p>
&lt;/blockquote></description></item><item><title>AoC 2017 Day 12: Gridlock</title><link>https://blog.jverkamp.com/2017/12/12/aoc-2017-day-12-gridlock/</link><pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2017/12/12/aoc-2017-day-12-gridlock/</guid><description>&lt;h3 id="source-digital-plumberhttpadventofcodecom2017day12">Source: &lt;a href="http://adventofcode.com/2017/day/12">Digital Plumber&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>Part 1:&lt;/strong> A network of nodes is defined by a list of lines formatted as such:&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;pre tabindex="0">&lt;code>&lt;/code>&lt;/pre>&lt;/blockquote>
&lt;p>2 &amp;lt;-&amp;gt; 0, 3, 4&lt;/p></description></item><item><title>Takuzu solver</title><link>https://blog.jverkamp.com/2015/10/29/takuzu-solver/</link><pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2015/10/29/takuzu-solver/</guid><description>&lt;p>Based on a &lt;a href="">/r/dailyprogrammer&lt;/a> puzzle: &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3pwf17/20151023_challenge_237_hard_takuzu_solver/">Takuzu solver&lt;/a>.&lt;/p>
&lt;p>Basically, Takuzu is a logic puzzle similar to Sudoku. You are given a grid partially filled with 0s and 1s. You have to fill in the rest of the grid according to three simple rules:&lt;/p>
&lt;ul>
&lt;li>You cannot have more than three of the same number in a line&lt;/li>
&lt;li>Each column must have an equal number of 0s and 1s&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>No two rows or no two columns can be identical&lt;/li>
&lt;/ul>
&lt;p>Thus, if you have a puzzle like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>0.01.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0....1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>..00..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>..00..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1....0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>One valid solution (most puzzles should have only a single valid answer, but that doesn&amp;rsquo;t always seem to be the case):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>010101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>001101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>110010
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>010011
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>101100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>101010
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s do it!&lt;/p></description></item><item><title>Adjacency Matrix Generator</title><link>https://blog.jverkamp.com/2015/08/24/adjacency-matrix-generator/</link><pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2015/08/24/adjacency-matrix-generator/</guid><description>&lt;p>Been a while since I&amp;rsquo;ve actually tackled one of the &lt;a href="https://blog.jverkamp.com/programming/sources/daily-programmer/">Daily Programmer&lt;/a> challenges, so let&amp;rsquo;s try one out. From &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3h0uki/20150814_challenge_227_hard_adjacency_matrix/)">a week and a half ago&lt;/a>, we are challeneged to make an adjacency matrix generator, turning a graphical representation of a graph into an &lt;a href="https://en.wikipedia.org/wiki/adjacency%20matrix">adjacency matrix&lt;/a>.&lt;/p>
&lt;p>Input:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>a-----b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|\ / \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| \ / \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| / e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| / \ /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|/ \ /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c-----d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>01110
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11010
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>01010
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Amicable chains</title><link>https://blog.jverkamp.com/2014/05/23/amicable-chains/</link><pubDate>Fri, 23 May 2014 14:00:37 +0000</pubDate><guid>https://blog.jverkamp.com/2014/05/23/amicable-chains/</guid><description>&lt;p>Mathematicians are an odd bunch. Names for just about everyhing. There are &lt;a href="https://en.wikipedia.org/wiki/Amicable%20number">amicable numbers&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/perfect%20number">perfect number&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/sociable%20number">sociable number&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/Betrothed%20number">betrothed numbers&lt;/a>. There are &lt;a href="https://en.wikipedia.org/wiki/sublime%20number">sublime number&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/frugal%20number">frugal number&lt;/a>, and &lt;a href="https://en.wikipedia.org/wiki/quasiperfect%20number">quasiperfect number&lt;/a>. Heck, there are &lt;a href="https://en.wikipedia.org/wiki/powerful%20number">powerful number&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/smooth%20number">smooth number&lt;/a>, and even &lt;a href="https://en.wikipedia.org/wiki/Sphenic%20number">sphenic numbers&lt;/a>. Rather a lot to deal with all told&amp;hellip; So let&amp;rsquo;s just focus on two of them: &lt;a href="https://en.wikipedia.org/wiki/Perfect%20number">perfect numbers&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/Amicable%20number">amicable numbers&lt;/a>.&lt;/p></description></item><item><title>Phone networks</title><link>https://blog.jverkamp.com/2014/05/21/phone-networks/</link><pubDate>Wed, 21 May 2014 14:00:47 +0000</pubDate><guid>https://blog.jverkamp.com/2014/05/21/phone-networks/</guid><description>&lt;p>Another day, &lt;a href="http://www.reddit.com/r/dailyprogrammer/comments/25576s/592014_challenge_161_hard_phone_network/">another challenge from /r/dailyprogrammer&lt;/a>. It&amp;rsquo;s almost two weeks old now, but I&amp;rsquo;ve just now had a chance to get around it.&lt;/p>
&lt;blockquote>
&lt;p>Your company has built its own telephone network. This allows all your remote locations to talk to each other. It is your job to implement the program to establish calls between locations.&lt;/p>
&lt;/blockquote></description></item><item><title>Graph coloring</title><link>https://blog.jverkamp.com/2014/01/15/graph-coloring/</link><pubDate>Wed, 15 Jan 2014 14:00:14 +0000</pubDate><guid>https://blog.jverkamp.com/2014/01/15/graph-coloring/</guid><description>&lt;p>Here&amp;rsquo;s &lt;a href="http://www.reddit.com/r/dailyprogrammer/comments/1tj0kl/122313_challenge_130_hard_coloring_frances/">another one&lt;/a> from /r/dailyprogrammer:&lt;/p>
&lt;blockquote>
&lt;p>&amp;hellip; Your goal is to color a map of these regions with two requirements: 1) make sure that each adjacent department do not share a color, so you can clearly distinguish each department, and 2) minimize these numbers of colors.&lt;/p>
&lt;/blockquote>
&lt;p>Essentially, &lt;a href="https://en.wikipedia.org/wiki/graph%20coloring">graph coloring&lt;/a>.&lt;/p></description></item><item><title>Graph radius</title><link>https://blog.jverkamp.com/2014/01/14/graph-radius/</link><pubDate>Tue, 14 Jan 2014 14:00:41 +0000</pubDate><guid>https://blog.jverkamp.com/2014/01/14/graph-radius/</guid><description>&lt;p>&lt;a href="http://www.reddit.com/r/dailyprogrammer/comments/1tiz4z/122313_challenge_140_intermediate_graph_radius/">Here&amp;rsquo;s&lt;/a> a quick problem from the DailyProgrammer subreddit. Basically, we want to calculate the radius of a graph:&lt;/p>
&lt;blockquote>
&lt;span class="latex-inline">radius(g) = \min\limits_{n_0 \in g} \max\limits_{n_1 \in g} d_g(n_0, n_1)&lt;/span>
&lt;/blockquote></description></item><item><title>Edges to adjacency</title><link>https://blog.jverkamp.com/2013/12/23/edges-to-adjacency/</link><pubDate>Mon, 23 Dec 2013 14:00:02 +0000</pubDate><guid>https://blog.jverkamp.com/2013/12/23/edges-to-adjacency/</guid><description>&lt;p>Another quick one, this time &lt;a href="http://www.reddit.com/r/dailyprogrammer/comments/1t6dlf/121813_challenge_140_intermediate_adjacency_matrix/">from /r/dailyprogrammer&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Your goal is to write a program that takes in a list of edge-node relationships, and print a directed adjacency matrix for it. Our convention will follow that rows point to columns. Follow the examples for clarification of this convention.&lt;/p>
&lt;/blockquote></description></item><item><title>Path to philosophy</title><link>https://blog.jverkamp.com/2013/03/28/path-to-philosophy/</link><pubDate>Thu, 28 Mar 2013 14:00:05 +0000</pubDate><guid>https://blog.jverkamp.com/2013/03/28/path-to-philosophy/</guid><description>&lt;p>Yesterday, &lt;a title="Daily programmer sub-reddit" href="http://www.reddit.com/r/dailyprogrammer/">the daily programmer Subreddit&lt;/a> had &lt;a title="[03/27/13] Challenge #121 [Intermediate] Path to Philosophy" href="http://www.reddit.com/r/dailyprogrammer/comments/1b3ka1/032713_challenge_121_intermediate_path_to/">a post that&lt;/a> mirrored a problem I&amp;rsquo;ve often seen before: the idea that if you follow first links ((With some caveats)) on &lt;a href="https://en.wikipedia.org/wiki/Main%20Page">Wikipedia&lt;/a>, you eventually end with &lt;a href="https://en.wikipedia.org/wiki/Philosophy">Philosophy&lt;/a>. For example, if you follow the first links from &lt;a href="https://en.wikipedia.org/wiki/Molecule">Molecule&lt;/a>, you get the following path:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Molecule">Molecule&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Atom">Atom&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Matter">Matter&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Rest%20Mass">Rest Mass&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Invariant%20Mass">Invariant Mass&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Energy">Energy&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Kinetic%20Energy">Kinetic Energy&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Physics">Physics&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Natural%20Philosophy">Natural Philosophy&lt;/a> → &lt;a href="https://en.wikipedia.org/wiki/Philosophy">Philosophy&lt;/a>&lt;/p>
&lt;/blockquote></description></item></channel></rss>