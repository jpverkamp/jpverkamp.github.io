<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CORS on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/cors/</link>
    <description>Recent content in CORS on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/cors/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rack::Cors Configuration Tricks</title>
      <link>https://blog.jverkamp.com/2020/01/16/rackcors-configuration-tricks/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2020/01/16/rackcors-configuration-tricks/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/cyu/rack-cors&#34;&gt;cyu&amp;rsquo;s Rack::Cors middleware&lt;/a&gt; is rather handy if want to control your &lt;a href=&#34;https://en.wikipedia.org/wiki/CORS&#34;&gt;CORS&lt;/a&gt; (Cross-Origin Resource Sharing) settings in a Ruby-on-Rails project. Previously, there was a fairly major issue where &lt;code&gt;:credentials =&amp;gt; true&lt;/code&gt; was the default (which you generally do not want), but there were also some more complicated tweaks that I wanted to make.&lt;/p&gt;
&lt;p&gt;One problem I recently had to deal with was wanting to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow CORS connections from arbitrary domains (this site functions as an API)&lt;/li&gt;
&lt;li&gt;Do not allow CORS from http domains at all&lt;/li&gt;
&lt;li&gt;Only allow cookies (&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;) to be sent for sibling subdomains&lt;/li&gt;
&lt;li&gt;Prevent cookies from being sent from specific sibling subdomains (that are actually run by a third party)&lt;/li&gt;
&lt;li&gt;On development (non-production) versions of the site, allow credentials from localhost&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
