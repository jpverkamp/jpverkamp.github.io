<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Small Scripts on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/small-scripts/</link>
    <description>Recent content in Small Scripts on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/small-scripts/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Partitioning a Linked List</title>
      <link>https://blog.jverkamp.com/2021/04/20/partitioning-a-linked-list/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2021/04/20/partitioning-a-linked-list/</guid>
      <description>&lt;p&gt;One more fairly standard tech interview problem (for better or for worse, you&amp;rsquo;re likely to see one of these if you go for a programming job):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a &lt;a href=&#34;https://en.wikipedia.org/wiki/linked%20list&#34;&gt;linked list&lt;/a&gt; and an element &lt;code&gt;x&lt;/code&gt;. Partition the list so that all elements less than &lt;code&gt;x&lt;/code&gt; are before elements greater than or equal to &lt;code&gt;x&lt;/code&gt;, but do not otherwise change the order of the elements.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Dynamic Programming over a Matrix</title>
      <link>https://blog.jverkamp.com/2021/04/13/dynamic-programming-over-a-matrix/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2021/04/13/dynamic-programming-over-a-matrix/</guid>
      <description>Another LeetCode problem.
 Given an MxN matrix of numbers, find the longest path of strictly increasing numbers.
 So for example in this matrix:
 994 668 211  You can start with the 1 in the bottom center, go left to the two, then up to the 6, and 9. That&amp;rsquo;s the longest path, so return a 4.
In this 3x3 case, it&amp;rsquo;s really easy to just brute force.</description>
    </item>
    
    <item>
      <title>Phone Words--In English!</title>
      <link>https://blog.jverkamp.com/2021/04/09/phone-words-in-english/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2021/04/09/phone-words-in-english/</guid>
      <description>Okay, let&amp;rsquo;s take this one step further. Rather than generating just phone words, let&amp;rsquo;s actually generate phone words. Someone has provided a list of words in English as a package, so we&amp;rsquo;ll add a filter to add that to our comprehension:
from english_words import english_words_set def letterCombinations(self, digits: str) -&amp;gt; List[str]: if not digits: return [] letters = { &amp;#39;1&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;2&amp;#39;: &amp;#39;abc&amp;#39;, &amp;#39;3&amp;#39;: &amp;#39;def&amp;#39;, &amp;#39;4&amp;#39;: &amp;#39;ghi&amp;#39;, &amp;#39;5&amp;#39;: &amp;#39;jkl&amp;#39;, &amp;#39;6&amp;#39;: &amp;#39;mno&amp;#39;, &amp;#39;7&amp;#39;: &amp;#39;pqrs&amp;#39;, &amp;#39;8&amp;#39;: &amp;#39;tuv&amp;#39;, &amp;#39;9&amp;#39;: &amp;#39;wxyz&amp;#39;, &amp;#39;0&amp;#39;: &amp;#39; &amp;#39;, } return [ word for product in itertools.</description>
    </item>
    
    <item>
      <title>Phone Words</title>
      <link>https://blog.jverkamp.com/2021/04/06/phone-words/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2021/04/06/phone-words/</guid>
      <description>&lt;p&gt;Working through a few problems on &lt;a href=&#34;https://leetcode.com/&#34;&gt;LeetCode&lt;/a&gt;. I haven&amp;rsquo;t quite decided what I think of the site, but it&amp;rsquo;s a fun way to play with simple algorithms. Figured I might as well write up any I find interesting.&lt;/p&gt;
&lt;p&gt;First interesting problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Given a standard lettered keypad, generate all words from a given phone number.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://blog.jverkamp.com/embeds/2021/keypad.png&#34;/&gt; 
&lt;/figure&gt;</description>
    </item>
    
  </channel>
</rss>
