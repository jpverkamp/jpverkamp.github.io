<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Small Scripts on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/small-scripts/</link><description>Recent content in Small Scripts on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/small-scripts/atom.xml" rel="self" type="application/rss+xml"/><item><title>Go is faster than Python? (an example parsing huge JSON logs)</title><link>https://blog.jverkamp.com/2022/02/11/go-is-faster-than-python-an-example-parsing-huge-json-logs/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2022/02/11/go-is-faster-than-python-an-example-parsing-huge-json-logs/</guid><description>&lt;p>Recently at work I came across a problem where I had to go through a year&amp;rsquo;s worth of logs and corelate two different fields across all of our requests. On the good side, we have the logs stored as JSON objects (archived from Datadog which collects them). On the down side&amp;hellip; it&amp;rsquo;s kind of a huge amount of data. Not as much as I&amp;rsquo;ve dealt with at previous jobs/in some academic problems, but we&amp;rsquo;re still talking on the order of terabytes.&lt;/p>
&lt;p>On one hand, write up a quick Python script, fire and forget. It takes maybe ten minutes to write the code and (for this specific example) half an hour to run it on the specific cloud instance the logs lived on. So we&amp;rsquo;ll start with that. But then I got thinking&amp;hellip; Python is supposed to be super slow right? Can I do better?&lt;/p>
&lt;p>(Note: This problem is mostly disk bound. So Python actually for the most part does just fine.)&lt;/p></description></item><item><title>A CLI Tool for Bulk Processing Github Dependabot Alerts (with GraphQL!)</title><link>https://blog.jverkamp.com/2022/02/03/a-cli-tool-for-bulk-processing-github-dependabot-alerts-with-graphql/</link><pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2022/02/03/a-cli-tool-for-bulk-processing-github-dependabot-alerts-with-graphql/</guid><description>&lt;p>Dependabot is &amp;hellip; &lt;em>somewhat useful&lt;/em>. When it comes to letting you know that there are critical issues in your dependencies that can be fixed simply by upgrading the package (they did all the work for you*). The biggest problem is that it can just be &lt;em>insanely&lt;/em> noisy. In a busy repo with multiple Node.JS codebases (especially), you can get dozens to even hundreds of reports a week. And for each one, you optimally would update the code&amp;hellip; but sometimes it&amp;rsquo;s just not practical. So you have to decide which updates you actually apply.&lt;/p>
&lt;p>So. How do we do it?&lt;/p>
&lt;p>Well the traditional rest based Github APIs don&amp;rsquo;t expose the dependabot data, &lt;em>but&lt;/em> the newer GraphQL one does! I&amp;rsquo;ll admit, I haven&amp;rsquo;t used as much GraphQL as I probably should, it&amp;rsquo;s&amp;hellip; a bit more complicated than REST. But it does expose what I need.&lt;/p></description></item><item><title>A simple Flask Logging/Echo Server</title><link>https://blog.jverkamp.com/2022/02/01/a-simple-flask-logging/echo-server/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2022/02/01/a-simple-flask-logging/echo-server/</guid><description>&lt;p>A very simple server that can be used to catch all incoming HTTP requests and just echo them back + log their contents. I needed it to test what a webhook actually returned to me, but I&amp;rsquo;m sure that there are a number of other things it could be dropped in for.&lt;/p>
&lt;p>It will take in any GET/POST/PATCH/DELETE HTTP request with any path/params/data (optionally JSON), pack that data into a JSON object, and both log that to a file (with a UUID1 based name) plus return this object to the request.&lt;/p>
&lt;p>Warning: Off hand, there is already a potential security problem in this regarding DoS. It will happily try to log anything you throw at it, no matter how big and will store those in memory first. So long running requests / large requests / many requests will quickly eat up your RAM/disk. So&amp;hellip; don&amp;rsquo;t leave this running unattended? At least not without additional configuration.&lt;/p>
&lt;p>That&amp;rsquo;s it! Hope it&amp;rsquo;s helpful.&lt;/p></description></item><item><title>Pulling more than 5000 logs from datadog</title><link>https://blog.jverkamp.com/2022/01/25/pulling-more-than-5000-logs-from-datadog/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2022/01/25/pulling-more-than-5000-logs-from-datadog/</guid><description>&lt;p>&lt;a href="https://www.datadoghq.com/">Datadog&lt;/a> is pretty awesome. I wish I had it at my previous job, but better late than never. In particular, I&amp;rsquo;ve used it a lot for digging through recent logs to try to construct various events for various (security related) reasons.&lt;/p>
&lt;p>One of the problems I&amp;rsquo;ve come into though is that eventually you&amp;rsquo;re going to hit the limits of what datadog can do. In particular, I was trying to reconstruct user&amp;rsquo;s sessions and then check if they made one specific sequence of calls or another one. So far as I know, that isn&amp;rsquo;t directly possible, so instead, I wanted to download a subset of the datadog logs and process them locally.&lt;/p>
&lt;p>Easy enough, yes? Well: &lt;a href="https://stackoverflow.com/questions/67281698/datadog-export-logs-more-than-5-000">https://stackoverflow.com/questions/67281698/datadog-export-logs-more-than-5-000&lt;/a>&lt;/p>
&lt;p>Turns out, you just can&amp;rsquo;t export more than 5000 logs directly. &lt;em>But&lt;/em>&amp;hellip; they have an API with pagination!&lt;/p></description></item><item><title>Solving Snakebird</title><link>https://blog.jverkamp.com/2021/08/18/solving-snakebird/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/08/18/solving-snakebird/</guid><description>&lt;p>&lt;a href="https://store.steampowered.com/app/357300/Snakebird/">Snakebird!&lt;/a>&lt;/p>
&lt;figure>&lt;img src="https://blog.jverkamp.com/embeds/2021/snakebird-0.png"/>
&lt;/figure>
&lt;p>A cute little puzzle game, where you move around snake(birds). Move any number of snakes around the level, eating fruit, and getting to the exit. The main gotchas are that you have gravity to content with&amp;ndash;your snake will easily fall off the edge of the world&amp;ndash;and each time you eat a fruit, your snake gets bigger. This can help get longer to get into hard to reach places or it can cause trouble when you trap yourself in corners.&lt;/p>
&lt;p>Let&amp;rsquo;s use the new &lt;a href="2021-08-17-immutable.js-solvers">immutable.js solver&lt;/a> to solve these problems!&lt;/p></description></item><item><title>Immutable.js Solvers</title><link>https://blog.jverkamp.com/2021/08/17/immutable.js-solvers/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/08/17/immutable.js-solvers/</guid><description>&lt;p>A bit ago I wrote about writing a &lt;a href="https://blog.jverkamp.com/2021/06/25/a-generic-brute-force-backtracking-solver/">generic brute force solver&lt;/a> (wow, was that really two months ago?). It got &amp;hellip; complicate. Mostly, because every time I wrote a &lt;code>step&lt;/code> function, I had to be careful to undo the same. Wouldn&amp;rsquo;t it be nice if we could just write a step function and get backtracking for &amp;lsquo;free&amp;rsquo;?&lt;/p>
&lt;p>Well, with immutability you can!&lt;/p></description></item><item><title>Ordering Board Game Geek GeekLists by Rank</title><link>https://blog.jverkamp.com/2021/06/28/ordering-board-game-geek-geeklists-by-rank/</link><pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/06/28/ordering-board-game-geek-geeklists-by-rank/</guid><description>&lt;p>A quick script.&lt;/p>
&lt;p>I play a lot of board games. With the whole COVID-19 mess, I&amp;rsquo;ve been playing a lot on &lt;a href="https://boardgamearena.com/">Board Game Arena&lt;/a>, which is a wonderful site. But one thing that&amp;rsquo;s a bit lacking is having ratings / metadata about games to great games I&amp;rsquo;ve just not heard about before. Where can you get lots of that data? &lt;a href="https://boardgamegeek.com/">Board Game Geek&lt;/a>!&lt;/p>
&lt;p>The problem though, is merging the two. So, how do we do it? Well, this time around, I&amp;rsquo;m going to start with &lt;a href="https://boardgamegeek.com/geeklist/252354/list-games-board-game-arena">this GeekList&lt;/a> that someone else maintains of BGA games on BGG. Which has the games, but no ranks. And apparently there are no ways to rank those by BGG (for some reason). But that&amp;rsquo;s easy when you know a bit of scripting!&lt;/p></description></item><item><title>A Generic Brute Force Backtracking Solver</title><link>https://blog.jverkamp.com/2021/06/25/a-generic-brute-force-backtracking-solver/</link><pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/06/25/a-generic-brute-force-backtracking-solver/</guid><description>&lt;p>One of the projects I&amp;rsquo;ve had vaguely in the back of my head is a sort of generic puzzle solver. I really love puzzles, but of the pencil and paper and video game varieties. So I think it would be awesome to write out a definition of a puzzle (say how to play Sudoku), give it input, and have it give me an answer back.&lt;/p>
&lt;p>Well, I finally got around to trying it!&lt;/p></description></item><item><title>Categorizing r/Fantasy Book Bingo Books</title><link>https://blog.jverkamp.com/2021/06/24/categorizing-r/fantasy-book-bingo-books/</link><pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/06/24/categorizing-r/fantasy-book-bingo-books/</guid><description>&lt;p>I&amp;rsquo;ve been working through the &lt;a href="https://blog.jverkamp.com/2021/04/01/2021-book-bingo/">r/Fantasy 2021 Book Bingo&lt;/a> this year:&lt;/p>
&lt;h1>2021 Book Bingo&lt;/h1>
&lt;table class="bingo">&lt;tr>&lt;td>
&lt;p>SFF anthology or collection&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/03/26/attack-on-titan-vol.-1/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/attack-on-titan-vol-1.jpg">
&lt;figcaption>Attack on Titan, Vol. 1&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;/td>&lt;td>
&lt;p>Set in Asia (Hard: by an Asian author)&lt;/p>&lt;/td>&lt;td>
&lt;p>&lt;a href="https://www.reddit.com/r/Fantasy/wiki/index/a-to-z-genre-guide">r/Fantasy A to Z Genre Guide&lt;/a> (Hard: by a BIPOC author)&lt;/p>&lt;/td>&lt;td>
&lt;p>Found Family (Hard: featuring an LGBTQ+ character)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/07/18/the-house-in-the-cerulean-sea/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/the-house-in-the-cerulean-sea.jpg">
&lt;figcaption>The House in the Cerulean Sea&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>First person POV (Hard: Multiple)&lt;/p>&lt;/td>&lt;/tr>&lt;tr>&lt;td>
&lt;p>r/Fantasy Book Club (Hard: with participation)&lt;/p>&lt;/td>&lt;td>
&lt;p>New to you author (Hard: haven&amp;rsquo;t heard much about)&lt;/p>&lt;/td>&lt;td>
&lt;p>Gothic Fantasy (Hard: not in the &lt;a href="https://bookriot.com/gothic-fantasy/">Book Riot article&lt;/a>)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/06/09/mexican-gothic/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/mexican-gothic.jpg">
&lt;figcaption>Mexican Gothic&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Backlist book (Hard: published before 2000)&lt;/p>&lt;/td>&lt;td>
&lt;p>Revenge-seeking character (Hard: revenge as the major book plot)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/10/01/red-sister/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/red-sister.jpg">
&lt;figcaption>Red Sister&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;/tr>&lt;tr>&lt;td>
&lt;p>Mystery plot (Hard: not primary world urban fantasy)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/06/19/six-wakes/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/six-wakes.jpg">
&lt;figcaption>Six Wakes&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Comfort read (Hard: that isn&amp;rsquo;t a reread)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/04/13/wild-sign/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/wild-sign.jpg">
&lt;figcaption>Wild Sign&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Debut novel (Hard: published in 2021)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/04/26/tales-of-nezura-book-1-the-zevolra/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/tales-of-nezura-book-1-the-zevolra.jpg">
&lt;figcaption>Tales of Nezura: Book 1: The Zevolra&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Cat squasher (500+ pages; Hard: 800+ pages)&lt;/p>&lt;/td>&lt;td>
&lt;p>SFF-related nonfiction (Hard: published in the last 5 years)&lt;/p>&lt;/td>&lt;/tr>&lt;tr>&lt;td>
&lt;p>Latinx or Latin American author (Hard: with fewer than 1000 Goodreads ratings)&lt;/p>&lt;/td>&lt;td>
&lt;p>Self published (Hard: with fewer than 50 Goodreads ratings)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/04/26/tales-of-nezura-book-1-the-zevolra/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/tales-of-nezura-book-1-the-zevolra.jpg">
&lt;figcaption>Tales of Nezura: Book 1: The Zevolra&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Forest setting (Hard: for the entire book)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/07/01/annihilation/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/annihilation.jpg">
&lt;figcaption>Annihilation&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Genre mashup (Hard: of three or more genres)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/07/13/gideon-the-ninth/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/gideon-the-ninth.jpg">
&lt;figcaption>Gideon the Ninth&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Has chapter titles of more than one word (Hard: for every chapter)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/04/21/the-midnight-library/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/the-midnight-library.jpg">
&lt;figcaption>The Midnight Library&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;/tr>&lt;tr>&lt;td>
&lt;p>___ of ___ (Hard: and ___)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/12/08/an-alchemy-of-masques-and-mirrors/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/an-alchemy-of-masques-and-mirrors.jpg">
&lt;figcaption>An Alchemy of Masques and Mirrors&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>First contact (Hard: that doesn&amp;rsquo;t lead to war)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/06/15/project-hail-mary/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/project-hail-mary.jpg">
&lt;figcaption>Project Hail Mary&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;td>
&lt;p>Trans or Nonbinary (Hard: protagonist)&lt;/p>&lt;/td>&lt;td>
&lt;p>Debut author (Hard: with an AMA)&lt;/p>&lt;/td>&lt;td>
&lt;p>Witches (Hard: as the main protagonist)&lt;/p>&lt;a href="https://blog.jverkamp.com/2021/04/11/a-great-and-terrible-beauty/">
&lt;figure>
&lt;img src="https://blog.jverkamp.com/embeds/books/a-great-and-terrible-beauty.jpg">
&lt;figcaption>A Great and Terrible Beauty&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;p>(Hard Mode)&lt;/p>&lt;/td>&lt;/tr>&lt;/table></description></item><item><title>Partitioning a Linked List</title><link>https://blog.jverkamp.com/2021/04/20/partitioning-a-linked-list/</link><pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/04/20/partitioning-a-linked-list/</guid><description>&lt;p>One more fairly standard tech interview problem (for better or for worse, you&amp;rsquo;re likely to see one of these if you go for a programming job):&lt;/p>
&lt;blockquote>
&lt;p>Given a &lt;a href="https://en.wikipedia.org/wiki/linked%20list">linked list&lt;/a> and an element &lt;code>x&lt;/code>. Partition the list so that all elements less than &lt;code>x&lt;/code> are before elements greater than or equal to &lt;code>x&lt;/code>, but do not otherwise change the order of the elements.&lt;/p>
&lt;/blockquote></description></item><item><title>Dynamic Programming over a Matrix</title><link>https://blog.jverkamp.com/2021/04/13/dynamic-programming-over-a-matrix/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/04/13/dynamic-programming-over-a-matrix/</guid><description>Another LeetCode problem.
Given an MxN matrix of numbers, find the longest path of strictly increasing numbers.
So for example in this matrix:
994 668 211 You can start with the 1 in the bottom center, go left to the two, then up to the 6, and 9. That&amp;rsquo;s the longest path, so return a 4.
In this 3x3 case, it&amp;rsquo;s really easy to just brute force.</description></item><item><title>Phone Words--In English!</title><link>https://blog.jverkamp.com/2021/04/09/phone-words-in-english/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/04/09/phone-words-in-english/</guid><description>Okay, let&amp;rsquo;s take this one step further. Rather than generating just phone words, let&amp;rsquo;s actually generate phone words. Someone has provided a list of words in English as a package, so we&amp;rsquo;ll add a filter to add that to our comprehension:
from english_words import english_words_set def letterCombinations(self, digits: str) -&amp;gt; List[str]: if not digits: return [] letters = { &amp;#39;1&amp;#39;: &amp;#39;&amp;#39;, &amp;#39;2&amp;#39;: &amp;#39;abc&amp;#39;, &amp;#39;3&amp;#39;: &amp;#39;def&amp;#39;, &amp;#39;4&amp;#39;: &amp;#39;ghi&amp;#39;, &amp;#39;5&amp;#39;: &amp;#39;jkl&amp;#39;, &amp;#39;6&amp;#39;: &amp;#39;mno&amp;#39;, &amp;#39;7&amp;#39;: &amp;#39;pqrs&amp;#39;, &amp;#39;8&amp;#39;: &amp;#39;tuv&amp;#39;, &amp;#39;9&amp;#39;: &amp;#39;wxyz&amp;#39;, &amp;#39;0&amp;#39;: &amp;#39; &amp;#39;, } return [ word for product in itertools.</description></item><item><title>Phone Words</title><link>https://blog.jverkamp.com/2021/04/06/phone-words/</link><pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/04/06/phone-words/</guid><description>&lt;p>Working through a few problems on &lt;a href="https://leetcode.com/">LeetCode&lt;/a>. I haven&amp;rsquo;t quite decided what I think of the site, but it&amp;rsquo;s a fun way to play with simple algorithms. Figured I might as well write up any I find interesting.&lt;/p>
&lt;p>First interesting problem:&lt;/p>
&lt;blockquote>
&lt;p>Given a standard lettered keypad, generate all words from a given phone number.&lt;/p>
&lt;/blockquote>
&lt;figure>&lt;img src="https://blog.jverkamp.com/embeds/2021/keypad.png"/>
&lt;/figure></description></item></channel></rss>