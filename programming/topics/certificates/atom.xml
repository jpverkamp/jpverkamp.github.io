<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Certificates on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/certificates/</link><description>Recent content in Certificates on jverkamp.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 29 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/programming/topics/certificates/atom.xml" rel="self" type="application/rss+xml"/><item><title>Parsing PEM Certificates &amp; ASN.1 in Javascript</title><link>https://blog.jverkamp.com/2025/05/29/parsing-pem-certificates-asn.1-in-javascript/</link><pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2025/05/29/parsing-pem-certificates-asn.1-in-javascript/</guid><description>&lt;p>I recently had a conversation about parsing HTTPS/TLS/etc certificates client side (so that various values could be compared). There are, of course, &lt;a href="https://asn1js.org/" target="_blank" rel="noopener">libraries&lt;/a> for that, but where&amp;rsquo;s the fun in that? Let&amp;rsquo;s dig in ourselves!&lt;/p>
&lt;p>I thought of course it would be a well specified format and it wouldn&amp;rsquo;t take more than a few minutes to parse&amp;hellip; right?&lt;/p>
&lt;p>Right?&lt;/p>
&lt;nav id="TableOfContents">
 &lt;ul>
 &lt;li>&lt;a href="#parsing">Parsing&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#decoding-some-datatypes">Decoding some datatypes&lt;/a>
 &lt;ul>
 &lt;li>&lt;a href="#object-identifiers--oids">Object Identifiers &amp;ndash; OIDs&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#numbers">Numbers&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#dates">Dates&lt;/a>&lt;/li>
 &lt;/ul>
 &lt;/li>
 &lt;li>&lt;a href="#printing-results">Printing results&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#an-example">An example&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#constants">Constants&lt;/a>&lt;/li>
 &lt;/ul>
&lt;/nav></description></item></channel></rss>