<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unicode on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/unicode/</link>
    <description>Recent content in Unicode on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/unicode/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Command line unicode search</title>
      <link>https://blog.jverkamp.com/2016/01/06/command-line-unicode-search/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/01/06/command-line-unicode-search/</guid>
      <description>&lt;p&gt;Similar to Monday&amp;rsquo;s post about &lt;a href=&#34;https://blog.jverkamp.com/2016/01/04/command-line-emoji-search/&#34;&gt;command line emoji search&lt;/a&gt;, I often find myself wanting to look up Unicode characters. I have a custom search engine / bookmark set up in Chrome / Firefox (&lt;code&gt;uni %s&lt;/code&gt; maps to &lt;code&gt;http://unicode-search.net/unicode-namesearch.pl?term=%s&amp;amp;.submit=Submit&amp;amp;subs=1&lt;/code&gt;). That actually works great, but given how relatively much of my day I spend on the command line, I thought it would be interesting to do something there:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ uni delta
‚çã	apl functional symbol delta stile
‚çô	apl functional symbol delta underbar
‚çç	apl functional symbol quad delta
‚âú	delta equal to
Œî	greek capital letter delta
Œ¥	greek small letter delta
·∫ü	latin small letter delta
∆ç	latin small letter turned delta
ùö´	mathematical bold capital delta
ùúü	mathematical bold italic capital delta
ùúπ	mathematical bold italic small delta
ùõÖ	mathematical bold small delta
ùõ•	mathematical italic capital delta
ùõø	mathematical italic small delta
ùùô	mathematical sans-serif bold capital delta
ùûì	mathematical sans-serif bold italic capital delta
ùû≠	mathematical sans-serif bold italic small delta
ùù≥	mathematical sans-serif bold small delta
·µü	modifier letter small delta
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Braille unicode pixelation</title>
      <link>https://blog.jverkamp.com/2014/05/30/braille-unicode-pixelation/</link>
      <pubDate>Fri, 30 May 2014 14:00:11 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/05/30/braille-unicode-pixelation/</guid>
      <description>&lt;p&gt;What would you do if you were on a machine that had no higher level graphics, but you still wanted to display images?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Decoding escaped Unicode strings</title>
      <link>https://blog.jverkamp.com/2013/01/17/decoding-escaped-unicode-strings/</link>
      <pubDate>Thu, 17 Jan 2013 14:00:56 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/01/17/decoding-escaped-unicode-strings/</guid>
      <description>&lt;p&gt;In one of my current research projects involving large amounts of &lt;a href=&#34;https://twitter.com/&#34; title=&#34;Twitter&#34;&gt;Twitter&lt;/a&gt; data from a variety of countries, I came across an interesting problem. The Twitter stream is encoded as a series of &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON&lt;/a&gt; objects&amp;ndash;each of which has been written out using &lt;a href=&#34;https://en.wikipedia.org/wiki/ASCII&#34;&gt;ASCII&lt;/a&gt; characters. But not all of the Tweets (or even a majority in this case) can be represented with only ASCII. So what happens?&lt;/p&gt;
&lt;p&gt;Well, it turns out that they encode the data as JSON strings with &lt;a href=&#34;https://en.wikipedia.org/wiki/Unicode&#34;&gt;Unicode&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/escape%20characters&#34;&gt;escape characters&lt;/a&gt;. So if we had the Russian hashtag #–ø–æ–±–µ–¥–∞–∑–∞–Ω–∞–º–∏ (victory is ours), that would be encoded as such:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\u043f\u043e\u0431\u0435\u0434\u0430\u0437\u0430\u043d\u0430\u043c\u0438&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
