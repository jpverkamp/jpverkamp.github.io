<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Networks on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/networks/</link><description>Recent content in Networks on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/networks/atom.xml" rel="self" type="application/rss+xml"/><item><title>Configuring Websockets behind an AWS ELB</title><link>https://blog.jverkamp.com/2015/07/20/configuring-websockets-behind-an-aws-elb/</link><pubDate>Mon, 20 Jul 2015 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2015/07/20/configuring-websockets-behind-an-aws-elb/</guid><description>&lt;p>Recently at work, we were trying to get an application that uses &lt;a href="https://en.wikipedia.org/wiki/websockets">websockets&lt;/a> working on an &lt;a href="https://aws.amazon.com/">AWS&lt;/a> instance behind an &lt;a href="https://aws.amazon.com/elasticloadbalancing/">ELB (load balancer)&lt;/a> and &lt;a href="http://nginx.org/">nginx&lt;/a> on the instance.&lt;/p>
&lt;p>If you&amp;rsquo;re either not using a secure connection or handling the cryptography on the instance (either in nginx or Flask), it works right out of the box. But if you want the ELB to handle TLS termination it doesn&amp;rsquo;t work nearly as well&amp;hellip; Luckily, after a bit of fiddling, I got it working.&lt;/p>
&lt;p>&lt;strong>Update 2018-05-31:&lt;/strong> A much easier solution, [https://aws.amazon.com/blogs/aws/new-aws-application-load-balancer/](just use an ALB):&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>WebSocket&lt;/strong> allows you to set up long-standing TCP connections between your client and your server. This is a more efficient alternative to the old-school method which involved HTTP connections that were held open with a “heartbeat” for very long periods of time. WebSocket is great for mobile devices and can be used to deliver stock quotes, sports scores, and other dynamic data while minimizing power consumption. ALB provides native support for WebSocket via the &lt;code>ws://&lt;/code> and &lt;code>wss://&lt;/code> protocols.&lt;/p>
&lt;/blockquote></description></item><item><title>Performance problems with Flask and Docker</title><link>https://blog.jverkamp.com/2015/04/03/performance-problems-with-flask-and-docker/</link><pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2015/04/03/performance-problems-with-flask-and-docker/</guid><description>&lt;p>I had an interesting problem recently on a project I was working on. It&amp;rsquo;s a simple &lt;a href="http://flask.pocoo.org/">Flask&lt;/a>-based webapp, designed to be deployed to &lt;a href="https://aws.amazon.com/">AWS&lt;/a> using &lt;a href="https://www.docker.com/">Docker&lt;/a>. The application worked just fine when I was running it locally, but as soon as I pushed the docker container&amp;hellip;&lt;/p>
&lt;p>Latency spikes. Bad enough that the application was failing AWS&amp;rsquo;s healthy host checks, cycling in and out of existence&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;figure>&lt;img src="https://blog.jverkamp.com/embeds/2015/health-check.png"/>
&lt;/figure></description></item><item><title>A "one" line echo server using let in Racket</title><link>https://blog.jverkamp.com/2014/11/13/a-one-line-echo-server-using-let-in-racket/</link><pubDate>Thu, 13 Nov 2014 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2014/11/13/a-one-line-echo-server-using-let-in-racket/</guid><description>&lt;p>A recent post on Reddit caught my attention: &lt;a href="https://www.reddit.com/r/Python/comments/2m6d4z/a_one_line_echo_server_using_let_in_python/">A “One” Line Echo Server Using “let” in Python&lt;/a> (&lt;a href="http://sigusr2.net/one-line-echo-server-using-let-python.html">original article&lt;/a>). The basic idea is that you can use Python&amp;rsquo;s &lt;code>lambda&lt;/code> with default arguments as a &lt;code>let&lt;/code>, which in turn allows you to write a simple &lt;a href="https://en.wikipedia.org/wiki/echo%20server">echo server&lt;/a> in &lt;del>one line&lt;/del> a nicely functional style.&lt;/p></description></item><item><title>Large scale asynchronous DNS scans</title><link>https://blog.jverkamp.com/2013/09/27/large-scale-asynchronous-dns-scans/</link><pubDate>Fri, 27 Sep 2013 14:00:11 +0000</pubDate><guid>https://blog.jverkamp.com/2013/09/27/large-scale-asynchronous-dns-scans/</guid><description>&lt;p>On Monday we &lt;a href="https://blog.jverkamp.com/2013/09/23/extending-racket-structs-to-bitfields/">laid out a framework&lt;/a> for converting structures into bytes. On Wednesday, we used that to &lt;a href="https://blog.jverkamp.com/2013/09/25/extending-rackets-dns-capabilities/">enhance Racket&amp;amp;rsquo;s UDP and DNS capabilities&lt;/a>. Today, we&amp;rsquo;re going to take that all one step further and scan large portions of the Internet. The end goal will be to look for &lt;a href="https://blog.jverkamp.com/2013/02/09/isma-2013-aims-5-dns-based-censorship/">DNS-based&lt;/a> on a worldwide scale.&lt;/p></description></item><item><title>Extending Racket's DNS capabilities</title><link>https://blog.jverkamp.com/2013/09/25/extending-rackets-dns-capabilities/</link><pubDate>Wed, 25 Sep 2013 14:00:35 +0000</pubDate><guid>https://blog.jverkamp.com/2013/09/25/extending-rackets-dns-capabilities/</guid><description>&lt;p>As I &lt;a href="https://blog.jverkamp.com/2013/09/23/extending-racket-structs-to-bitfields/">mentioned&lt;/a> on Monday, I wrote my &lt;a href="https://blog.jverkamp.com/2013/02/09/isma-2013-aims-5-dns-based-censorship/">DNS-based censorship&lt;/a> around the world&amp;ndash;and to do that, I need a fair bit of control over the DNS packets that I&amp;rsquo;m sending back and over parsing the ones that I get back.&lt;/p></description></item><item><title>ISMA 2013 AIMS-5 - DNS Based Censorship</title><link>https://blog.jverkamp.com/2013/02/09/isma-2013-aims-5-dns-based-censorship/</link><pubDate>Sat, 09 Feb 2013 15:00:06 +0000</pubDate><guid>https://blog.jverkamp.com/2013/02/09/isma-2013-aims-5-dns-based-censorship/</guid><description>I gave a presentation about research that I&amp;rsquo;m just starting out studying DNS-based censorship in specific around the world. In particularly, preliminary findings in China have confirmed that the Great Firewall is responding via packet injection to many queries for either Facebook or Twitter (among others). Interestingly, the pool of IPs that they return is consistent yet none of the IPs seem to resolve to anything interesting. In addition, there is fallout in South Korea where some percentage of packets go through China and thus have the same behaviors.</description></item><item><title>AIMS-5 - Day 3</title><link>https://blog.jverkamp.com/2013/02/09/aims-5-day-3/</link><pubDate>Sat, 09 Feb 2013 14:00:02 +0000</pubDate><guid>https://blog.jverkamp.com/2013/02/09/aims-5-day-3/</guid><description>&lt;p>Yesterday was the third and final day of AIMS-5. With the main topic being &lt;em>Detection of Censorship, Filtering, and Outages&lt;/em>, many of these talks were much more in line with what I know and what I&amp;rsquo;m working on. I gave my presentation as well, you can see it (along with a link to my slides) down below.&lt;/p></description></item><item><title>AIMS-5 - Day 2</title><link>https://blog.jverkamp.com/2013/02/08/aims-5-day-2/</link><pubDate>Fri, 08 Feb 2013 14:00:06 +0000</pubDate><guid>https://blog.jverkamp.com/2013/02/08/aims-5-day-2/</guid><description>&lt;p>Today&amp;rsquo;s agenda had discussions on Mobile Measurements and IPv6 Annotations, none of which are areas that I find myself particularly interested in. Still, I did learn a few things.&lt;/p></description></item><item><title>AIMS-5 - Workshop on Active Internet Measurements</title><link>https://blog.jverkamp.com/2013/02/07/aims-5-workshop-on-active-internet-measurements/</link><pubDate>Thu, 07 Feb 2013 14:00:41 +0000</pubDate><guid>https://blog.jverkamp.com/2013/02/07/aims-5-workshop-on-active-internet-measurements/</guid><description>&lt;p>Yesterday was the first of three days for the fifth annual &lt;a href="https://blog.jverkamp.com/2012/10/22/isc/caida-workshop/">ISC/CAIDA Workshop&lt;/a> I went to in Baltimore back in October at least, but even the ones that weren&amp;rsquo;t have still been interesting.&lt;/p>
&lt;p>I&amp;rsquo;ll be presenting on Friday and I&amp;rsquo;ll share my slides when I get that far (they aren&amp;rsquo;t actually finished yet). I&amp;rsquo;ll be talking about new work that I&amp;rsquo;m just getting off the ground focusing specifically on DNS-based censorship. There is a lot of interesting ground to cover there and this should be only the first in a series of updates about that work (I hope).&lt;/p></description></item><item><title>Scanning for DNS resolvers</title><link>https://blog.jverkamp.com/2013/01/31/scanning-for-dns-resolvers/</link><pubDate>Thu, 31 Jan 2013 14:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2013/01/31/scanning-for-dns-resolvers/</guid><description>&lt;p>For a research project I&amp;rsquo;m working on, it has become necessary to scan potentially large &lt;a href="https://en.wikipedia.org/wiki/Cidr">IPv4 prefixes&lt;/a> in order to find any &lt;a href="https://en.wikipedia.org/wiki/DNS%20resolver">DNS revolvers&lt;/a> that I can and classify them as either open (accepting queries from anyone) or closed.&lt;/p>
&lt;p>Disclaimer: This is a form of &lt;a href="https://en.wikipedia.org/wiki/port%20scanning">port scanning&lt;/a> and thus has associated ethical and legal considerations. Use it at your own risk. &lt;/p>
&lt;p>This project is available on GitHub: &lt;a href="https://github.com/jpverkamp/dnsscan" title="GitHub: jpverkamp: dnsscan">jpverkamp/dnsscan&lt;/a>&lt;/p></description></item></channel></rss>