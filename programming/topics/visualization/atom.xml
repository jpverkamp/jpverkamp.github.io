<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/visualization/</link>
    <description>Recent content in Visualization on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/visualization/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AoC 2017 Day 21: Fractal Expander</title>
      <link>https://blog.jverkamp.com/2017/12/21/aoc-2017-day-21-fractal-expander/</link>
      <pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/21/aoc-2017-day-21-fractal-expander/</guid>
      <description>&lt;h3 id=&#34;source-fractal-arthttpadventofcodecom2017day21&#34;&gt;Source: &lt;a href=&#34;http://adventofcode.com/2017/day/21&#34;&gt;Fractal Art&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Start with an input image made of &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; pixels. For &lt;code&gt;n&lt;/code&gt; iterations, break the image into blocks:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;If the current size is even, break the image into 2x2 chunks and replace each with a 3x3 chunk&lt;/li&gt;
&lt;li&gt;If the current size is odd, break the image into 3x3 chunks and replace each with a 4x4 chunk&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The replacement rules will be specified in the following format (example is a 3x3 -&amp;gt; 4x4 rule):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;.#./..#/### =&amp;gt; #..#/&amp;hellip;./&amp;hellip;./#..#&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
&amp;gt; In that example, replace this:

&amp;gt; ```
.#.
..#
###
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;With this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;#..#
&amp;hellip;.
&amp;hellip;.
#..#&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AoC 2017 Day 20: Miniature Universe Simulator</title>
      <link>https://blog.jverkamp.com/2017/12/20/aoc-2017-day-20-miniature-universe-simulator/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/20/aoc-2017-day-20-miniature-universe-simulator/</guid>
      <description>&lt;h3 id=&#34;source-particle-swarmhttpadventofcodecom2017day20&#34;&gt;Source: &lt;a href=&#34;http://adventofcode.com/2017/day/20&#34;&gt;Particle Swarm&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Given the initial position, velocity, and acceleration of a large number of particles, which particle will stay the closet to the origin as the simulation runs to infinity?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>AoC 2017 Day 18: Duetvm</title>
      <link>https://blog.jverkamp.com/2017/12/18/aoc-2017-day-18-duetvm/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/18/aoc-2017-day-18-duetvm/</guid>
      <description>&lt;h3 id=&#34;source-duethttpadventofcodecom2017day18&#34;&gt;Source: &lt;a href=&#34;http://adventofcode.com/2017/day/18&#34;&gt;Duet&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Create a virtual machine with the following instruction set:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;snd X&lt;/code&gt; plays a sound with a frequency equal to the value of &lt;code&gt;X&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set X Y&lt;/code&gt; sets register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add X Y&lt;/code&gt; set register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;X + Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mul X Y&lt;/code&gt; sets register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;X * Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mod X Y&lt;/code&gt; sets register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;X mod Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rcv X&lt;/code&gt; recovers the frequency of the last sound played, if &lt;code&gt;X&lt;/code&gt; is not zero&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jgz X Y&lt;/code&gt; jumps with an offset of the value of &lt;code&gt;Y&lt;/code&gt;, iff &lt;code&gt;X&lt;/code&gt; is greater than zero&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In most cases, &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; can be either an integer value or a register.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the value recovered by &lt;code&gt;rcv&lt;/code&gt; the first time &lt;code&gt;X&lt;/code&gt; is non-zero?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>AoC 2017 Day 14: Knot Hash Gridinator</title>
      <link>https://blog.jverkamp.com/2017/12/14/aoc-2017-day-14-knot-hash-gridinator/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/14/aoc-2017-day-14-knot-hash-gridinator/</guid>
      <description>&lt;h3 id=&#34;source-disk-defragmentationhttpadventofcodecom2017day14&#34;&gt;Source: &lt;a href=&#34;http://adventofcode.com/2017/day/14&#34;&gt;Disk Defragmentation&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Create a 128x128 grid. Generate each row by taking the &lt;a href=&#34;https://blog.jverkamp.com/2017/12/10/aoc-2017-day-10-knot-cool/&#34;&gt;knot hash&lt;/a&gt; of &lt;code&gt;salt-{index}&lt;/code&gt;. The bits of the hash represent if a tile in the grid is &lt;code&gt;free&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt;) or &lt;code&gt;used&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Given your salt as input, how many squares are &lt;code&gt;used&lt;/code&gt;?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>AoC 2017 Day 12: Gridlock</title>
      <link>https://blog.jverkamp.com/2017/12/12/aoc-2017-day-12-gridlock/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/12/aoc-2017-day-12-gridlock/</guid>
      <description>&lt;h3 id=&#34;source-digital-plumberhttpadventofcodecom2017day12&#34;&gt;Source: &lt;a href=&#34;http://adventofcode.com/2017/day/12&#34;&gt;Digital Plumber&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; A network of nodes is defined by a list of lines formatted as such:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;2 &amp;lt;-&amp;gt; 0, 3, 4&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
