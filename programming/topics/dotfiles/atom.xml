<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotfiles on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/dotfiles/</link>
    <description>Recent content in Dotfiles on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/dotfiles/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deterministic Shuffling Using Hashes</title>
      <link>https://blog.jverkamp.com/2017/12/11/deterministic-shuffling-using-hashes/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/11/deterministic-shuffling-using-hashes/</guid>
      <description>&lt;p&gt;Whenever I create my &lt;a href=&#34;https://blog.jverkamp.com/2017/01/01/2017-reading-list/&#34;&gt;yearly reading list&lt;/a&gt;, I need a way to order the books. Sure, I could just shuffle them normally, but that leads me to the temptation of cheating and re-shuffling them so that the books I want to read most are first. What I really need is a shuffle that will shuffle the same way every time.&lt;/p&gt;

&lt;p&gt;Enter: hashsort&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gif shrinkage with ImageMagick</title>
      <link>https://blog.jverkamp.com/2015/03/05/gif-shrinkage-with-imagemagick/</link>
      <pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/03/05/gif-shrinkage-with-imagemagick/</guid>
      <description>&lt;p&gt;I have a gif collection now. :)&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://blog.jverkamp.com/embeds/2015/dun-dun-dunnnnn.gif&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ts: Timestamping stdout</title>
      <link>https://blog.jverkamp.com/2015/02/26/ts-timestamping-stdout/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/26/ts-timestamping-stdout/</guid>
      <description>&lt;p&gt;Loving data as much as I do, I like to &lt;a href=&#34;https://blog.jverkamp.com/2013/04/16/adventures-in-optimization-re-typed-racket/&#34;&gt;optimize&lt;/a&gt; things. To make sure I&amp;rsquo;m actually going the right way, it&amp;rsquo;s useful to time things. While it&amp;rsquo;s trivial in most languages to add timing, it&amp;rsquo;s even easier if you don&amp;rsquo;t have to.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>update-dotfiles encryption</title>
      <link>https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/</link>
      <pubDate>Wed, 11 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/</guid>
      <description>&lt;p&gt;I do like having my &lt;a href=&#34;https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/&#34;&gt;dotfiles&lt;/a&gt; on GitHub. For one, it means that they&amp;rsquo;re always available when I set up a new machine. For two, others can see them and take whatever is interesting for their own dotfiles. But all that has a disadvantage: what if I want to store my SSH configs?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker-bash and docker-stop-all</title>
      <link>https://blog.jverkamp.com/2015/02/04/docker-bash-and-docker-stop-all/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/04/docker-bash-and-docker-stop-all/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; a fair bit at work, so I&amp;rsquo;ve added a few quick aliases to my dotfiles make that a little bit easier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker-bash&lt;/code&gt; - attach a &lt;code&gt;bash&lt;/code&gt; shell to the first available docker instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker-stop-all&lt;/code&gt; - stop all running docker instances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Removing large files from git history</title>
      <link>https://blog.jverkamp.com/2014/09/03/removing-large-files-from-git-history/</link>
      <pubDate>Wed, 03 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/09/03/removing-large-files-from-git-history/</guid>
      <description>&lt;p&gt;A couple of quick additions to my &lt;a href=&#34;https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/&#34;&gt;dotfiles&lt;/a&gt; today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git find-fat&lt;/code&gt; - find large files that no longer exist&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git trim-fat&lt;/code&gt; - remove files entirely from git history&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Updating dotfiles</title>
      <link>https://blog.jverkamp.com/2014/08/04/updating-dotfiles/</link>
      <pubDate>Mon, 04 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/08/04/updating-dotfiles/</guid>
      <description>&lt;p&gt;After all of these updates to my &lt;a href=&#34;https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/&#34;&gt;dotfiles&lt;/a&gt;, I finally want something that I can use to keep them up to date. For that, let&amp;rsquo;s write a quick script that can do just that.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>slowcat</title>
      <link>https://blog.jverkamp.com/2014/08/01/slowcat/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/08/01/slowcat/</guid>
      <description>&lt;p&gt;Sometimes &lt;code&gt;cat&lt;/code&gt; just prints too quickly.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Regex search and replace</title>
      <link>https://blog.jverkamp.com/2014/07/31/regex-search-and-replace/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/07/31/regex-search-and-replace/</guid>
      <description>&lt;p&gt;Another random task that I find myself doing distressingly often: performing a regular expression search and replace recursively across a bunch of files. You can do this relatively directly with tools like &lt;code&gt;sed&lt;/code&gt;, but I can never quite remember the particularly flavor of regular expression syntax &lt;code&gt;sed&lt;/code&gt; uses.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git aliases: undo, ud, and wipe</title>
      <link>https://blog.jverkamp.com/2014/07/28/git-aliases-undo-ud-and-wipe/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2014/07/28/git-aliases-undo-ud-and-wipe/</guid>
      <description>&lt;p&gt;A few new git aliases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git undo&lt;/code&gt; - Undo the most recent commit, unstaging all new files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git up&lt;/code&gt; - Update remote branches and submodules, delete merged branches&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git wipe&lt;/code&gt; - Remove all current changes, saving as a seperate branch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>