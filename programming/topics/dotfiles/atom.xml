<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotfiles on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/dotfiles/</link>
    <description>Recent content in Dotfiles on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/dotfiles/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deep Dreams with Fish and Docker</title>
      <link>https://blog.jverkamp.com/2018/04/01/deep-dreams-with-fish-and-docker/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2018/04/01/deep-dreams-with-fish-and-docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/google/deepdream&#34;&gt;DeepDream&lt;/a&gt; is a &lt;a href=&#34;https://research.googleblog.com/2015/06/inceptionism-going-deeper-into-neural.html&#34;&gt;research project&lt;/a&gt; originally from Google that gives you a look into how &lt;a href=&#34;https://en.wikipedia.org/wiki/neural%20networks&#34;&gt;neural networks&lt;/a&gt; see the world. They&amp;rsquo;re fascinating, bizarre, and a lot of fun to play with. A bit of work getting them to work on your own machine though.&lt;/p&gt;

&lt;p&gt;Luckily, GitHub user &lt;a href=&#34;https://github.com/saturnism/deepdream-cli-docker&#34;&gt;saturnism&lt;/a&gt; has put together a lovely Docker-based tool that will do just that for us: &lt;a href=&#34;https://github.com/saturnism/deepdream-cli-docker&#34;&gt;deepdream-cli-docker&lt;/a&gt;. Unfortunately, the commands are still a bit long. Let&amp;rsquo;s clean it up a bit and add the ability to dream about non-JPGs (animated GIFs especially!).&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://blog.jverkamp.com/embeds/2018/dream-sorcery.gif&#34;/&gt; 
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Making Fish Shell Smile</title>
      <link>https://blog.jverkamp.com/2018/01/12/making-fish-shell-smile/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2018/01/12/making-fish-shell-smile/</guid>
      <description>&lt;p&gt;When working in a shell, from time to time, I need to know if a command succeeded or failed. Sometimes, it&amp;rsquo;s easy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;$ make noise

make: *** No rule to make target &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;noise&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;.  Stop.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes, less so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;$ grep frog podcasts.json &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; podcasts-about-frogs.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since, alas, I don&amp;rsquo;t have any podcasts about frogs, that command would fail silently. But that&amp;rsquo;s fixable!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;$ grep frog podcasts.json &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; podcasts-about-frogs.txt

$ &lt;span style=&#34;color:#75715e&#34;&gt;# Bash/Zsh
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$ &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $?
1

$ &lt;span style=&#34;color:#75715e&#34;&gt;# Fish
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$ &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $status
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>SSH Config ProxyCommand Tricks</title>
      <link>https://blog.jverkamp.com/2017/12/18/ssh-config-proxycommand-tricks/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/18/ssh-config-proxycommand-tricks/</guid>
      <description>&lt;p&gt;Working in security/operations in the tech industry, I use &lt;a href=&#34;https://en.wikipedia.org/wiki/SSH&#34;&gt;SSH&lt;/a&gt; a lot. To various different machines (some with hostnames, some without), using various different users and keys, and often (as was the case in my &lt;a href=&#34;https://blog.jverkamp.com/2017/12/13/dynamic-automatic-proxies/&#34;&gt;previous post&lt;/a&gt;) via a &lt;a href=&#34;https://en.wikipedia.org/wiki/bastion%20host&#34;&gt;bastion host&lt;/a&gt;. Over the years, I&amp;rsquo;ve collected a number of SSH tricks that make my life easier.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dynamic Automatic Proxies</title>
      <link>https://blog.jverkamp.com/2017/12/13/dynamic-automatic-proxies/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/13/dynamic-automatic-proxies/</guid>
      <description>&lt;p&gt;On of the advantages of working in computer programming is that I can work from anywhere I have a computer and an internet connection. One of the disadvantages is that many of the resources that I need to do my job are locked to only be accessible within a specific network (albeit with a &lt;a href=&#34;https://en.wikipedia.org/wiki/bastion%20host&#34;&gt;bastion host&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I long ago set up my SSH config to create an SSH tunnel and I can proxy many applications through that just by setting the &lt;code&gt;HTTP_PROXY&lt;/code&gt; and/or &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variables. The downside of this though is that if I&amp;rsquo;m actually on a &amp;lsquo;safe&amp;rsquo; network, there&amp;rsquo;s no reason to use the bastion host and I would actually be putting extra load on it.&lt;/p&gt;

&lt;p&gt;My goal: write something that would let me automatically proxy applications when I need to but not when I don&amp;rsquo;t.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deterministic Shuffling Using Hashes</title>
      <link>https://blog.jverkamp.com/2017/12/11/deterministic-shuffling-using-hashes/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/11/deterministic-shuffling-using-hashes/</guid>
      <description>&lt;p&gt;Whenever I create my &lt;a href=&#34;https://blog.jverkamp.com/2017/01/01/2017-reading-list/&#34;&gt;yearly reading list&lt;/a&gt;, I need a way to order the books. Sure, I could just shuffle them normally, but that leads me to the temptation of cheating and re-shuffling them so that the books I want to read most are first. What I really need is a shuffle that will shuffle the same way every time.&lt;/p&gt;

&lt;p&gt;Enter: hashsort&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Duplicating AeroSnap on OSX with Hammerspoon</title>
      <link>https://blog.jverkamp.com/2016/02/08/duplicating-aerosnap-on-osx-with-hammerspoon/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/02/08/duplicating-aerosnap-on-osx-with-hammerspoon/</guid>
      <description>&lt;p&gt;Relatively recently, I switched my last Windows machine over to OSX. For the most part, it&amp;rsquo;s been great. One bit of functionality that I&amp;rsquo;ve been missing though is AeroSnap. Specifically the ability to use a keyboard shortcut to move windows to the left/right half of a monitor.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gif shrinkage with ImageMagick</title>
      <link>https://blog.jverkamp.com/2015/03/05/gif-shrinkage-with-imagemagick/</link>
      <pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/03/05/gif-shrinkage-with-imagemagick/</guid>
      <description>&lt;p&gt;I have a gif collection now. :)&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://blog.jverkamp.com/embeds/2015/dun-dun-dunnnnn.gif&#34;/&gt; 
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>ts: Timestamping stdout</title>
      <link>https://blog.jverkamp.com/2015/02/26/ts-timestamping-stdout/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/26/ts-timestamping-stdout/</guid>
      <description>&lt;p&gt;Loving data as much as I do, I like to &lt;a href=&#34;https://blog.jverkamp.com/2013/04/16/adventures-in-optimization-re-typed-racket/&#34;&gt;optimize&lt;/a&gt; things. To make sure I&amp;rsquo;m actually going the right way, it&amp;rsquo;s useful to time things. While it&amp;rsquo;s trivial in most languages to add timing, it&amp;rsquo;s even easier if you don&amp;rsquo;t have to.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>update-dotfiles encryption</title>
      <link>https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/</link>
      <pubDate>Wed, 11 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/</guid>
      <description>&lt;p&gt;I do like having my &lt;a href=&#34;https://blog.jverkamp.com/2015/02/11/update-dotfiles-encryption/&#34;&gt;dotfiles&lt;/a&gt; on GitHub. For one, it means that they&amp;rsquo;re always available when I set up a new machine. For two, others can see them and take whatever is interesting for their own dotfiles. But all that has a disadvantage: what if I want to store my SSH configs?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker-bash and docker-stop-all</title>
      <link>https://blog.jverkamp.com/2015/02/04/docker-bash-and-docker-stop-all/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/04/docker-bash-and-docker-stop-all/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; a fair bit at work, so I&amp;rsquo;ve added a few quick aliases to my dotfiles make that a little bit easier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker-bash&lt;/code&gt; - attach a &lt;code&gt;bash&lt;/code&gt; shell to the first available docker instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker-stop-all&lt;/code&gt; - stop all running docker instances&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>