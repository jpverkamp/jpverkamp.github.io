<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lists on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/lists/</link>
    <description>Recent content in Lists on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Oct 2013 14:00:15 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/lists/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functions as lists</title>
      <link>https://blog.jverkamp.com/2013/10/09/functions-as-lists/</link>
      <pubDate>Wed, 09 Oct 2013 14:00:15 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/10/09/functions-as-lists/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://programmingpraxis.com/2013/10/08/functional-style-linked-lists/&#34;&gt;Yesterday&amp;rsquo;s challenge&lt;/a&gt; from Programming Praxis challenges us to rebuild a data structure near and dear to any Lisper&amp;rsquo;s/Schemer&amp;rsquo;s/Racketer&amp;rsquo;s&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;/functional programmer&amp;rsquo;s heart: lists. The idea presented in &lt;a href=&#34;http://programmingpraxis.com/2013/10/08/functional-style-linked-lists/2/&#34;&gt;their sample solution&lt;/a&gt;Â uses two element vectors, directly mimicking the general internal structure of Scheme&amp;rsquo;s lists. How about we do something a bit stranger? ðŸ˜„&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swap list nodes</title>
      <link>https://blog.jverkamp.com/2013/06/26/swap-list-nodes/</link>
      <pubDate>Wed, 26 Jun 2013 14:00:42 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/06/26/swap-list-nodes/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been rather a while since I&amp;rsquo;ve worked out a &lt;a title=&#34;Programming Praxis&#34; href=&#34;http://programmingpraxis.com/&#34;&gt;Programming Praxis&lt;/a&gt; problem, but they posted a &lt;a title=&#34;Swap list nodes&#34; href=&#34;http://programmingpraxis.com/2013/06/25/swap-list-nodes/&#34;&gt;new one yesterday&lt;/a&gt;, so now seems as good a time as any. The problem is relatively simple:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a linked list, swap the kth node from the head of the list with the kth node from the end of the list.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since all lists in Scheme are linked lists, that part seems easy enough. To make the problem a little more interesting however, I&amp;rsquo;m going to work it out in a purely functional manner: no mutation.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>