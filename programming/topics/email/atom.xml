<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Email on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/email/</link>
    <description>Recent content in Email on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/email/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a temporary SMTP server to &#39;catch&#39; domain validation emails</title>
      <link>https://blog.jverkamp.com/2018/07/09/creating-a-temporary-smtp-server-to-catch-domain-validation-emails/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2018/07/09/creating-a-temporary-smtp-server-to-catch-domain-validation-emails/</guid>
      <description>&lt;p&gt;One problem that has come up a time or two is dealing with email-based domain validation (specifically in this case for the issuance of TLS certificates) on domains that aren&amp;rsquo;t actually configured to receive email. Yes, in a perfect world, it would be easier to switch to DNS-based validation (since we have to have control of the DNS for the domain, we need it later), but let&amp;rsquo;s just assume that&amp;rsquo;s not an option. So, how do we &amp;lsquo;catch&amp;rsquo; the activation email so we can prove we can receive email on that domain?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inlining plaintext attachments in Gmail</title>
      <link>https://blog.jverkamp.com/2016/01/02/inlining-plaintext-attachments-in-gmail/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/01/02/inlining-plaintext-attachments-in-gmail/</guid>
      <description>&lt;p&gt;When you send a text message to a Gmail email address (at least from an iPhone using AT&amp;amp;T), you get something like this:&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://blog.jverkamp.com/embeds/2016/gpti-before.png&#34;/&gt; 
&lt;/figure&gt;


&lt;p&gt;It&amp;rsquo;s vaguely annoying to have to click through every single time just to see what the message is, especially when various extensions (such as &lt;a href=&#34;https://github.com/gorhill/uMatrix&#34;&gt;uMatrix&lt;/a&gt;) break overlay rendering or when you have multiple attachments.&lt;/p&gt;

&lt;p&gt;Much better would be to just display the plaintext attachments inline:&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://blog.jverkamp.com/embeds/2016/gpti-after.png&#34;/&gt; 
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>Setting up Postfix and OpenDKIM</title>
      <link>https://blog.jverkamp.com/2015/08/10/setting-up-postfix-and-opendkim/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/08/10/setting-up-postfix-and-opendkim/</guid>
      <description>&lt;p&gt;Last week, I was presented with a fairly interesting challenge: add DKIM (via &lt;a href=&#34;http://www.opendkim.org/&#34;&gt;OpenDKIM&lt;/a&gt;) support to our mail servers (running &lt;a href=&#34;http://www.postfix.org/&#34;&gt;Postfix&lt;/a&gt;). Given that I&amp;rsquo;ve never actually worked on a mail server before, it sounded fun. ðŸ˜„&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Backing up Gmail</title>
      <link>https://blog.jverkamp.com/2012/09/03/backing-up-gmail/</link>
      <pubDate>Mon, 03 Sep 2012 14:00:03 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2012/09/03/backing-up-gmail/</guid>
      <description>A little while ago, I decided to finally get around to backing up everything. I&amp;rsquo;m pulling all of my files from both my website and the servers on campus to my desktop at home, backing my desktop up to an external hard drive, and pushing those backups to an offsite location.
The former two steps are using here.
First, some basic setup. Of course, I&amp;rsquo;ve blanked out my own username and password.</description>
    </item>
    
  </channel>
</rss>