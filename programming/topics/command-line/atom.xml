<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Command line on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/command-line/</link>
    <description>Recent content in Command line on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/command-line/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making Fish Shell Smile</title>
      <link>https://blog.jverkamp.com/2018/01/12/making-fish-shell-smile/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2018/01/12/making-fish-shell-smile/</guid>
      <description>&lt;p&gt;When working in a shell, from time to time, I need to know if a command succeeded or failed. Sometimes, it&amp;rsquo;s easy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;$ make noise

make: *** No rule to make target &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;noise&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;.  Stop.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes, less so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;$ grep frog podcasts.json &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; podcasts-about-frogs.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since, alas, I don&amp;rsquo;t have any podcasts about frogs, that command would fail silently. But that&amp;rsquo;s fixable!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;$ grep frog podcasts.json &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; podcasts-about-frogs.txt

$ &lt;span style=&#34;color:#75715e&#34;&gt;# Bash/Zsh
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$ &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $?
1

$ &lt;span style=&#34;color:#75715e&#34;&gt;# Fish
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$ &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $status
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSH Config ProxyCommand Tricks</title>
      <link>https://blog.jverkamp.com/2017/12/18/ssh-config-proxycommand-tricks/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/18/ssh-config-proxycommand-tricks/</guid>
      <description>&lt;p&gt;Working in security/operations in the tech industry, I use &lt;a href=&#34;https://en.wikipedia.org/wiki/SSH&#34;&gt;SSH&lt;/a&gt; a lot. To various different machines (some with hostnames, some without), using various different users and keys, and often (as was the case in my &lt;a href=&#34;https://blog.jverkamp.com/2017/12/13/dynamic-automatic-proxies/&#34;&gt;previous post&lt;/a&gt;) via a &lt;a href=&#34;https://en.wikipedia.org/wiki/bastion%20host&#34;&gt;bastion host&lt;/a&gt;. Over the years, I&amp;rsquo;ve collected a number of SSH tricks that make my life easier.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dynamic Automatic Proxies</title>
      <link>https://blog.jverkamp.com/2017/12/13/dynamic-automatic-proxies/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/13/dynamic-automatic-proxies/</guid>
      <description>&lt;p&gt;On of the advantages of working in computer programming is that I can work from anywhere I have a computer and an internet connection. One of the disadvantages is that many of the resources that I need to do my job are locked to only be accessible within a specific network (albeit with a &lt;a href=&#34;https://en.wikipedia.org/wiki/bastion%20host&#34;&gt;bastion host&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I long ago set up my SSH config to create an SSH tunnel and I can proxy many applications through that just by setting the &lt;code&gt;HTTP_PROXY&lt;/code&gt; and/or &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variables. The downside of this though is that if I&amp;rsquo;m actually on a &amp;lsquo;safe&amp;rsquo; network, there&amp;rsquo;s no reason to use the bastion host and I would actually be putting extra load on it.&lt;/p&gt;

&lt;p&gt;My goal: write something that would let me automatically proxy applications when I need to but not when I don&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AoC 2017: Library Functions</title>
      <link>https://blog.jverkamp.com/2017/12/01/aoc-2017-library-functions/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:02 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/01/aoc-2017-library-functions/</guid>
      <description>&lt;p&gt;As mentioned in the &lt;a href=&#34;https://blog.jverkamp.com/2018/01/08/advent-of-code-2017/&#34;&gt;main post&lt;/a&gt;, I&amp;rsquo;m structuring my solutions a bit differently this year. Rather than repeating the same relatively lengthy header in each function, we&amp;rsquo;re going to have a few shared files that can be imported or used for every problem.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Command line unicode search</title>
      <link>https://blog.jverkamp.com/2016/01/06/command-line-unicode-search/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/01/06/command-line-unicode-search/</guid>
      <description>&lt;p&gt;Similar to Monday&amp;rsquo;s post about &lt;a href=&#34;https://blog.jverkamp.com/2016/01/04/command-line-emoji-search/&#34;&gt;command line emoji search&lt;/a&gt;, I often find myself wanting to look up Unicode characters. I have a custom search engine / bookmark set up in Chrome / Firefox (&lt;code&gt;uni %s&lt;/code&gt; maps to &lt;code&gt;http://unicode-search.net/unicode-namesearch.pl?term=%s&amp;amp;.submit=Submit&amp;amp;subs=1&lt;/code&gt;). That actually works great, but given how relatively much of my day I spend on the command line, I thought it would be interesting to do something there:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ uni delta
‚çã	apl functional symbol delta stile
‚çô	apl functional symbol delta underbar
‚çç	apl functional symbol quad delta
‚âú	delta equal to
Œî	greek capital letter delta
Œ¥	greek small letter delta
·∫ü	latin small letter delta
∆ç	latin small letter turned delta
ùö´	mathematical bold capital delta
ùúü	mathematical bold italic capital delta
ùúπ	mathematical bold italic small delta
ùõÖ	mathematical bold small delta
ùõ•	mathematical italic capital delta
ùõø	mathematical italic small delta
ùùô	mathematical sans-serif bold capital delta
ùûì	mathematical sans-serif bold italic capital delta
ùû≠	mathematical sans-serif bold italic small delta
ùù≥	mathematical sans-serif bold small delta
·µü	modifier letter small delta&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Command line emoji search</title>
      <link>https://blog.jverkamp.com/2016/01/04/command-line-emoji-search/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/01/04/command-line-emoji-search/</guid>
      <description>&lt;p&gt;Sometimes, I find myself wanting to communicate in &lt;a href=&#34;https://en.wikipedia.org/wiki/emoji&#34;&gt;emoji&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;üêî&lt;/p&gt;

&lt;p&gt;How about this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ emoji chicken
üêî

$ emoji &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;which came first, the üêî or the ü•ö&amp;#34;&lt;/span&gt;
which came first, the üêî or the üç≥&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>