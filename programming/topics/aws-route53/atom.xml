<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS Route53 on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/aws-route53/</link><description>Recent content in AWS Route53 on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/aws-route53/atom.xml" rel="self" type="application/rss+xml"/><item><title>Generating zone files from Route53</title><link>https://blog.jverkamp.com/2018/03/12/generating-zone-files-from-route53/</link><pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2018/03/12/generating-zone-files-from-route53/</guid><description>&lt;p>Recently I found myself wanting to do some analysis on all of our DNS entires stored in AWS&amp;rsquo;s Route53 for security reasons (specifically to prevent subdomain takeover attacks, I&amp;rsquo;ll probably write that up soon). In doing so, I realized that while Route53 has the ability to import a &lt;a href="https://en.wikipedia.org/wiki/zone%20file">zone file&lt;/a>, it&amp;rsquo;s not possible to export one.&lt;/p>
&lt;p>To some extent, this makes sense. Since Route53 supports ALIAS records (which can automatically determine their values based on other AWS products, such as an ELB changing its public IP) and those aren&amp;rsquo;t actually &amp;lsquo;real&amp;rsquo; DNS entries, things will get confused. But I don&amp;rsquo;t currently intend to re-import these zone files, just use them. So let&amp;rsquo;s see what we can do.&lt;/p></description></item></channel></rss>