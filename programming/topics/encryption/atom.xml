<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Encryption on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/encryption/</link>
    <description>Recent content in Encryption on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/encryption/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Command line AES with openssl (and tar)</title>
      <link>https://blog.jverkamp.com/2020/04/09/command-line-aes-with-openssl-and-tar/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2020/04/09/command-line-aes-with-openssl-and-tar/</guid>
      <description>&lt;p&gt;I had &lt;a href=&#34;https://github.com/jpverkamp/dotfiles/blob/b708190/bin/aes&#34;&gt;a script&lt;/a&gt; that would take a file and a passphrase and either encrypt it or, if already encrypted, decrypt it. It worked well enough and I got to play with the &lt;code&gt;&lt;a href=&#34;https://docs.python.org/3/search.html?q=struct&#34;&gt;struct&lt;/a&gt;&lt;/code&gt;
 library. But it was home grown&amp;ndash;so not compatible with anything&amp;ndash;and didn&amp;rsquo;t properly validate anything. It worked well enough, but perhaps I could do something better.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
