<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backups on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/backups/</link>
    <description>Recent content in Backups on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Jun 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/backups/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mirror iTunes playlists to Spotify</title>
      <link>https://blog.jverkamp.com/2016/06/22/mirror-itunes-playlists-to-spotify/</link>
      <pubDate>Wed, 22 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/06/22/mirror-itunes-playlists-to-spotify/</guid>
      <description>&lt;p&gt;At the moment, I have an Apple Music subscription. It&amp;rsquo;s great to be able to listen to more or less whatever music I want to. I switched from Spotify because they were missing a few artists that I actually did want to listen to. Unfortunately, there are a few things that Apple Music doesn&amp;rsquo;t do that I would like to have&amp;ndash;chief among them the ability to play on a Roku.&lt;/p&gt;

&lt;p&gt;One nice thing that Spotify does have though is a fairly powerful API: &lt;a href=&#34;https://developer.spotify.com/web-api/&#34;&gt;Spotify Web API&lt;/a&gt;. Inspired by a post on &lt;a href=&#34;http://aguo.us/writings/spotify-billboard.html&#34;&gt;Spotify and billboard.py&lt;/a&gt; which automatically creates Spotify playlists from the Billboard music ranking charts, I decided to write up a script that can sync my playlists from iTunes to Spotify.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Backing up GitHub repositories</title>
      <link>https://blog.jverkamp.com/2015/09/08/backing-up-github-repositories/</link>
      <pubDate>Tue, 08 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/09/08/backing-up-github-repositories/</guid>
      <description>&lt;p&gt;The newest chapter in my quest to collect entirely too much data / back up All The Things!: GitHub.&lt;/p&gt;

&lt;p&gt;Basically, I want to back up all of my own personal GitHub repositories along with any from organizations that I am involved with. Strictly speaking, this is a little strange, since it&amp;rsquo;s unlikely that GitHub is going anywhere soon and, if it does, we are likely to have fair warning. But still, it&amp;rsquo;s nice to have a local copy just in case GitHub is down.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Backing up Moves Data</title>
      <link>https://blog.jverkamp.com/2015/07/10/backing-up-moves-data/</link>
      <pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/07/10/backing-up-moves-data/</guid>
      <description>&lt;p&gt;Another &lt;a href=&#34;https://blog.jverkamp.com/2015/01/29/ios-backups-in-racket-apps/&#34;&gt;backup post&lt;/a&gt;, this time I&amp;rsquo;m going to back up my data from the &lt;a href=&#34;https://www.moves-app.com/&#34;&gt;Moves App&lt;/a&gt; (step counter + GPS tracker). Theoretically, it should be possible to get this same data from the app as part of my &lt;a href=&#34;https://blog.jverkamp.com/2015/01/29/ios-backups-in-racket-apps/&#34;&gt;iOS Backup&lt;/a&gt; series, but the data there is in a strange binary format. Much easier to use their API.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scraping Kindle Highlights</title>
      <link>https://blog.jverkamp.com/2015/07/02/scraping-kindle-highlights/</link>
      <pubDate>Thu, 02 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/07/02/scraping-kindle-highlights/</guid>
      <description>&lt;p&gt;&lt;b&gt;Edit March 2020: It seems the page &amp;lsquo;your highlights&amp;rsquo; page on Amazon no longer exists, so this script no longer works. I&amp;rsquo;ll probably see if I can pull them from Goodreads instead now that the integration is there or directly from my Kindle, but for the moment, this script does not work.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;As part of an ongoing effort to &lt;a href=&#34;https://blog.jverkamp.com/2015/01/29/ios-backups-in-racket-apps/&#34;&gt;backup all the things&lt;/a&gt;, combined with a rather agressive &lt;a href=&#34;https://blog.jverkamp.com/2015/12/31/2015-reading-list-retrospective/&#34;&gt;2015 Reading List&lt;/a&gt;, I wanted to the ability to back up any sections that I&amp;rsquo;ve highlighted on my Kindle. Unfortunately, Amazon doesn&amp;rsquo;t seem to have an API to do that, but why should that stop me?&lt;/p&gt;

&lt;p&gt;Using a combination of &lt;a href=&#34;https://blog.jverkamp.com/2007/10/20/pymint-a-python-multi-interpreter/&#34;&gt;Python&lt;/a&gt; and the Python libraries &lt;a href=&#34;http://docs.python-requests.org/en/latest/&#34;&gt;Requests&lt;/a&gt; and &lt;a href=&#34;http://www.crummy.com/software/BeautifulSoup/&#34;&gt;BeautifulSoup&lt;/a&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, it&amp;rsquo;s entirely possible to write a Python script that will log into Amazon, get a list of all of the books on your account, and download the highlights for each.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s do it!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS Backups in Racket: Apps</title>
      <link>https://blog.jverkamp.com/2015/01/29/ios-backups-in-racket-apps/</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/01/29/ios-backups-in-racket-apps/</guid>
      <description>&lt;p&gt;So far we&amp;rsquo;ve read &lt;a href=&#34;https://blog.jverkamp.com/2015/01/22/ios-backups-in-racket-groundwork/&#34;&gt;backup files&lt;/a&gt;, parsed &lt;a href=&#34;https://blog.jverkamp.com/2015/01/23/ios-backups-in-racket-contacts/&#34;&gt;contacts&lt;/a&gt;, and parsed &lt;a href=&#34;https://blog.jverkamp.com/2015/01/27/ios-backups-in-racket-messages/&#34;&gt;messages&lt;/a&gt;. Today we&amp;rsquo;re going to dig a little deeper and start parsing apps specifically.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS Backups in Racket: Messages</title>
      <link>https://blog.jverkamp.com/2015/01/27/ios-backups-in-racket-messages/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/01/27/ios-backups-in-racket-messages/</guid>
      <description>&lt;p&gt;So far we&amp;rsquo;ve &lt;a href=&#34;https://blog.jverkamp.com/2015/01/22/ios-backups-in-racket-groundwork/&#34;&gt;laid the groundwork&lt;/a&gt;, loading local iOS backups and parsed out &lt;a href=&#34;https://blog.jverkamp.com/2015/01/23/ios-backups-in-racket-contacts/&#34;&gt;contacts&lt;/a&gt;. Today let&amp;rsquo;s take another step down the rabbit hole and figure out how messages are stored.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS Backups in Racket: Contacts</title>
      <link>https://blog.jverkamp.com/2015/01/23/ios-backups-in-racket-contacts/</link>
      <pubDate>Fri, 23 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/01/23/ios-backups-in-racket-contacts/</guid>
      <description>&lt;p&gt;After &lt;a href=&#34;https://blog.jverkamp.com/2015/01/22/ios-backups-in-racket-groundwork/&#34;&gt;yesterday&amp;rsquo;s post&lt;/a&gt; laying the groundwork for looking into &lt;a href=&#34;https://blog.jverkamp.com/2015/01/29/ios-backups-in-racket-apps/&#34;&gt;iOS Backups&lt;/a&gt;, today why don&amp;rsquo;t we actually start digging into one of the more interesting files: your list of contacts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS Backups in Racket: Groundwork</title>
      <link>https://blog.jverkamp.com/2015/01/22/ios-backups-in-racket-groundwork/</link>
      <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/01/22/ios-backups-in-racket-groundwork/</guid>
      <description>&lt;p&gt;For the last little while, I&amp;rsquo;ve been spending my spare programming time working on a slightly larger project than I normally do: a &lt;a href=&#34;https://blog.jverkamp.com/2014/06/11/call-stack-bracket-matcher/&#34;&gt;Racket&lt;/a&gt; library for reading iOS backups.&lt;/p&gt;

&lt;p&gt;Basically, I want to take the mess that is an iOS backup (not particularly designed to be easy to read by other programs) and extract some information from it, backing it up in a more easily readable format.&lt;/p&gt;

&lt;p&gt;Specifically, I would like to be able to backup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Contact information: Even thought they&amp;rsquo;re mostly from Facebook, it will be useful for the other parts&lt;/li&gt;
&lt;li&gt;Messages: These are taking up a large portion of my phone&amp;rsquo;s hard drive, mostly due to attachments. Back them up just in case&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Photos: I&amp;rsquo;m already backing these up, but it would be nice to have it in the same process&lt;/li&gt;
&lt;li&gt;Application data:&lt;/li&gt;
&lt;li&gt;List of applications over time&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.moves-app.com/&#34;&gt;Moves&lt;/a&gt;: GPS location&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.downcastapp.com/&#34;&gt;Downcast&lt;/a&gt;: List of current podcasts&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sleepcycle.com/&#34;&gt;Sleep Cycle&lt;/a&gt;: Sleep data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.boardgamescorer.com/&#34;&gt;Boardgame Scorer&lt;/a&gt;: High scores for board games&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Backing up Google Reader / Calendar</title>
      <link>https://blog.jverkamp.com/2012/09/05/backing-up-google-reader-/-calendar/</link>
      <pubDate>Wed, 05 Sep 2012 14:00:30 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2012/09/05/backing-up-google-reader-/-calendar/</guid>
      <description>Similar to my previous post about backing up Gmail, this time I want to back up my here, from there it should be easy enough to derive the one for Google Calendar.
First, we have the same setup as last time. Yes, I&amp;rsquo;m still storing the passwords in plaintext. Perhaps I&amp;rsquo;ll write up a way to avoid this in the future.
#!/usr/bin/env python import urllib, urllib2 username = &amp;#39;#####&amp;#39; password = &amp;#39;#####&amp;#39; For the next step, I&amp;rsquo;m going to fetch Google&amp;rsquo;s login page using urllib.</description>
    </item>
    
    <item>
      <title>Backing up Gmail</title>
      <link>https://blog.jverkamp.com/2012/09/03/backing-up-gmail/</link>
      <pubDate>Mon, 03 Sep 2012 14:00:03 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2012/09/03/backing-up-gmail/</guid>
      <description>A little while ago, I decided to finally get around to backing up everything. I&amp;rsquo;m pulling all of my files from both my website and the servers on campus to my desktop at home, backing my desktop up to an external hard drive, and pushing those backups to an offsite location.
The former two steps are using here.
First, some basic setup. Of course, I&amp;rsquo;ve blanked out my own username and password.</description>
    </item>
    
  </channel>
</rss>