<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSV on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/csv/</link><description>Recent content in CSV on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/csv/atom.xml" rel="self" type="application/rss+xml"/><item><title>Tiny Helper Scripts for Command Line MySQL</title><link>https://blog.jverkamp.com/2019/04/27/tiny-helper-scripts-for-command-line-mysql/</link><pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2019/04/27/tiny-helper-scripts-for-command-line-mysql/</guid><description>&lt;p>Quite often, I&amp;rsquo;ll find myself wanting to query and manipulate MySQL data entirely on the command line. I could be building up a pipeline or working on a task that I&amp;rsquo;m going to eventually automate but haven&amp;rsquo;t quite gotten to yet. Whenver I have to do something like that, I have a small pile of scripts I&amp;rsquo;ve written over time that help out:&lt;/p>
&lt;ul>
&lt;li>&lt;code>skiphead&lt;/code>: Skip the first line of output, used to skip over headers in a query response&lt;/li>
&lt;li>&lt;code>skipuntil&lt;/code>: Skip all lines until we see one matching a pattern, used to resume partial tasks&lt;/li>
&lt;li>&lt;code>commaify&lt;/code>: Take a list of single values on the command line and turn them into a comma separated list (for use in &lt;code>IN&lt;/code> clauses)&lt;/li>
&lt;li>&lt;code>csv2json&lt;/code>: a &lt;a href="https://blog.jverkamp.com/2015/12/11/csv-to-json/">previously posted&lt;/a> script for converting csv/tab delimited output to json&lt;/li>
&lt;li>&lt;code>jq&lt;/code>: not my script, but used to take the output of csv2json and query it further in ways that would be complicated to do with SQL&lt;/li>
&lt;/ul>
&lt;p>Admitedly, the first two of those are one liners and I could easily remember them, but the advantage of a single command that does it is tab completion. &lt;code>sk&amp;lt;tab&amp;gt;&lt;/code>, arrow to select which one I want, and off we go. I could put them as an alias, but I don&amp;rsquo;t always use the same shell (mostly &lt;a href="https://fishshell.com/">fish&lt;/a>, but sometimes Bash or Zsh).&lt;/p></description></item><item><title>CSV to JSON</title><link>https://blog.jverkamp.com/2015/12/11/csv-to-json/</link><pubDate>Fri, 11 Dec 2015 00:05:00 +0000</pubDate><guid>https://blog.jverkamp.com/2015/12/11/csv-to-json/</guid><description>&lt;p>Today at work, I had to process a bunch of CSV data. Realizing that I don&amp;rsquo;t have any particularly nice tools to work with streaming CSV data (although I did write about &lt;a href="https://blog.jverkamp.com/2012/10/04/querying-csv-files-with-sql/">querying CSV files with SQL&lt;/a>), I decided to write one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cat users.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;Luke Skywalker&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;luke@rebel-alliance.io&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$2&lt;span style="color:#e6db74">b&lt;/span>$12$XQ1zDvl5PLS6g&lt;span style="color:#e6db74">.K64H27xewPQMnkELa3LvzFSyay8p9kz0XXHVOFq&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;Han Solo&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;han@rebel-alliance.io&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$2&lt;span style="color:#e6db74">b&lt;/span>$12$eKJGP&lt;span style="color:#e6db74">.tt9u77PeXgMMFmlOyFWSuRZBUZLvmzuLlrum3vWPoRYgr92&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat users.csv | csv2json | jq &lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$2&lt;span style="color:#e6db74">b&lt;/span>$12$XQ1zDvl5PLS6g&lt;span style="color:#e6db74">.K64H27xewPQMnkELa3LvzFSyay8p9kz0XXHVOFq&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Luke Skywalker&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;luke@rebel-alliance.io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$2&lt;span style="color:#e6db74">b&lt;/span>$12$eKJGP&lt;span style="color:#e6db74">.tt9u77PeXgMMFmlOyFWSuRZBUZLvmzuLlrum3vWPoRYgr92&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Han Solo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;han@rebel-alliance.io&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Translate CSV to HTML</title><link>https://blog.jverkamp.com/2013/01/16/translate-csv-to-html/</link><pubDate>Wed, 16 Jan 2013 04:55:10 +0000</pubDate><guid>https://blog.jverkamp.com/2013/01/16/translate-csv-to-html/</guid><description>&lt;p>&lt;a href="http://programmingpraxis.com/2013/01/15/translate-csv-to-html/" title="Translate CSV to HTML">Yesterday&amp;rsquo;s post&lt;/a> from Programming Praxis asks us to write a function that will read content formatted as &lt;a href="https://en.wikipedia.org/wiki/comma-separated%20values">comma-separated values&lt;/a> and output the result as an HTML table. Their solution uses the &lt;a href="http://programmingpraxis.com/essays/#text-file-databases" title="Text file database">text file database library&lt;/a> that they posted about (which is a neat concept, you should check it out), but I think I&amp;rsquo;m going to work out the solution more directly.&lt;/p></description></item><item><title>Querying CSV files with SQL</title><link>https://blog.jverkamp.com/2012/10/04/querying-csv-files-with-sql/</link><pubDate>Thu, 04 Oct 2012 14:00:37 +0000</pubDate><guid>https://blog.jverkamp.com/2012/10/04/querying-csv-files-with-sql/</guid><description>&lt;p>Some time ago, I had a bunch of CSV files that I needed to extract some data from. They were all organized into tables with related columns between them all that made me think of a relational database&amp;ndash;and it&amp;rsquo;s really easy to query relational databases, just use SQL. So what did I do? I wrote a script that will let me query CSV files as if they were a relational database.&lt;/p></description></item></channel></rss>