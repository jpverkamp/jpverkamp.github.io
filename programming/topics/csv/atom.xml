<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSV on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/csv/</link>
    <description>Recent content in CSV on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/csv/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tiny Helper Scripts for Command Line MySQL</title>
      <link>https://blog.jverkamp.com/2019/04/27/tiny-helper-scripts-for-command-line-mysql/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2019/04/27/tiny-helper-scripts-for-command-line-mysql/</guid>
      <description>&lt;p&gt;Quite often, I&amp;rsquo;ll find myself wanting to query and manipulate MySQL data entirely on the command line. I could be building up a pipeline or working on a task that I&amp;rsquo;m going to eventually automate but haven&amp;rsquo;t quite gotten to yet. Whenver I have to do something like that, I have a small pile of scripts I&amp;rsquo;ve written over time that help out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;skiphead&lt;/code&gt;: Skip the first line of output, used to skip over headers in a query response&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skipuntil&lt;/code&gt;: Skip all lines until we see one matching a pattern, used to resume partial tasks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commaify&lt;/code&gt;: Take a list of single values on the command line and turn them into a comma separated list (for use in &lt;code&gt;IN&lt;/code&gt; clauses)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;csv2json&lt;/code&gt;: a &lt;a href=&#34;https://blog.jverkamp.com/2015/12/11/csv-to-json/&#34;&gt;previously posted&lt;/a&gt; script for converting csv/tab delimited output to json&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jq&lt;/code&gt;: not my script, but used to take the output of csv2json and query it further in ways that would be complicated to do with SQL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Admitedly, the first two of those are one liners and I could easily remember them, but the advantage of a single command that does it is tab completion. &lt;code&gt;sk&amp;lt;tab&amp;gt;&lt;/code&gt;, arrow to select which one I want, and off we go. I could put them as an alias, but I don&amp;rsquo;t always use the same shell (mostly &lt;a href=&#34;https://fishshell.com/&#34;&gt;fish&lt;/a&gt;, but sometimes Bash or Zsh).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSV to JSON</title>
      <link>https://blog.jverkamp.com/2015/12/11/csv-to-json/</link>
      <pubDate>Fri, 11 Dec 2015 00:05:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/12/11/csv-to-json/</guid>
      <description>&lt;p&gt;Today at work, I had to process a bunch of CSV data. Realizing that I don&amp;rsquo;t have any particularly nice tools to work with streaming CSV data (although I did write about &lt;a href=&#34;https://blog.jverkamp.com/2012/10/04/querying-csv-files-with-sql/&#34;&gt;querying CSV files with SQL&lt;/a&gt;), I decided to write one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat users.csv

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Luke Skywalker&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;luke@rebel-alliance.io&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$2&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;$12$XQ1zDvl5PLS6g&lt;span style=&#34;color:#e6db74&#34;&gt;.K64H27xewPQMnkELa3LvzFSyay8p9kz0XXHVOFq&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Han Solo&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;han@rebel-alliance.io&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$2&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;$12$eKJGP&lt;span style=&#34;color:#e6db74&#34;&gt;.tt9u77PeXgMMFmlOyFWSuRZBUZLvmzuLlrum3vWPoRYgr92&amp;#34;&lt;/span&gt;

$ cat users.csv | csv2json | jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$2&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;$12$XQ1zDvl5PLS6g&lt;span style=&#34;color:#e6db74&#34;&gt;.K64H27xewPQMnkELa3LvzFSyay8p9kz0XXHVOFq&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Luke Skywalker&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;luke@rebel-alliance.io&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$2&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;$12$eKJGP&lt;span style=&#34;color:#e6db74&#34;&gt;.tt9u77PeXgMMFmlOyFWSuRZBUZLvmzuLlrum3vWPoRYgr92&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Han Solo&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;han@rebel-alliance.io&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Translate CSV to HTML</title>
      <link>https://blog.jverkamp.com/2013/01/16/translate-csv-to-html/</link>
      <pubDate>Wed, 16 Jan 2013 04:55:10 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/01/16/translate-csv-to-html/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://programmingpraxis.com/2013/01/15/translate-csv-to-html/&#34; title=&#34;Translate CSV to HTML&#34;&gt;Yesterday&amp;rsquo;s post&lt;/a&gt; from Programming Praxis asks us to write a function that will read content formatted as &lt;a href=&#34;https://en.wikipedia.org/wiki/comma-separated%20values&#34;&gt;comma-separated values&lt;/a&gt; and output the result as an HTML table. Their solution uses the &lt;a href=&#34;http://programmingpraxis.com/essays/#text-file-databases&#34; title=&#34;Text file database&#34;&gt;text file database library&lt;/a&gt; that they posted about (which is a neat concept, you should check it out), but I think I&amp;rsquo;m going to work out the solution more directly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Querying CSV files with SQL</title>
      <link>https://blog.jverkamp.com/2012/10/04/querying-csv-files-with-sql/</link>
      <pubDate>Thu, 04 Oct 2012 14:00:37 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2012/10/04/querying-csv-files-with-sql/</guid>
      <description>&lt;p&gt;Some time ago, I had a bunch of CSV files that I needed to extract some data from. They were all organized into tables with related columns between them all that made me think of a relational database&amp;ndash;and it&amp;rsquo;s really easy to query relational databases, just use SQL. So what did I do? I wrote a script that will let me query CSV files as if they were a relational database.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>