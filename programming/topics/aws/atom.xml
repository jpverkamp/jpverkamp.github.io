<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/aws/</link>
    <description>Recent content in AWS on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/aws/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clock drift in Docker containers</title>
      <link>https://blog.jverkamp.com/2017/11/15/clock-drift-in-docker-containers/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/11/15/clock-drift-in-docker-containers/</guid>
      <description>&lt;p&gt;I was working on a docker container which uses the aws cli to mess around with some autoscaling groups when I got a somewhat strange error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;A client error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SignatureDoesNotMatch&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; occurred when calling the DescribeAutoScalingGroups operation: Signature not yet current: 20171115T012426Z is still later than 20171115T012420Z &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20171115T011920Z + &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; min.&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm.&lt;/p&gt;

&lt;p&gt;Are the clocks off?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding EC2 instances by tag</title>
      <link>https://blog.jverkamp.com/2015/10/30/finding-ec2-instances-by-tag/</link>
      <pubDate>Fri, 30 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/10/30/finding-ec2-instances-by-tag/</guid>
      <description>&lt;p&gt;Another script similar to my previous post about &lt;a href=&#34;https://blog.jverkamp.com/2015/07/22/finding-aws-iam-users-by-access-key/&#34;&gt;Finding AWS IAM users by access key&lt;/a&gt;. This time, we want to do much the same thing for EC2 instances by tag.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding AWS IAM users by access key</title>
      <link>https://blog.jverkamp.com/2015/07/22/finding-aws-iam-users-by-access-key/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/07/22/finding-aws-iam-users-by-access-key/</guid>
      <description>&lt;p&gt;Every once in a while&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, I find myself with an &lt;a href=&#34;https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSGettingStartedGuide/AWSCredentials.html&#34;&gt;AWS access key&lt;/a&gt; and need to figure out who in the world it belongs to. Unfortunately, so far as I&amp;rsquo;ve been able to find, there&amp;rsquo;s no way to directly do this in either the &lt;a href=&#34;https://aws.amazon.com/console/&#34;&gt;AWS console&lt;/a&gt; or with the &lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;AWS api&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring Websockets behind an AWS ELB</title>
      <link>https://blog.jverkamp.com/2015/07/20/configuring-websockets-behind-an-aws-elb/</link>
      <pubDate>Mon, 20 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/07/20/configuring-websockets-behind-an-aws-elb/</guid>
      <description>&lt;p&gt;Recently at work, we were trying to get an application that uses &lt;a href=&#34;https://en.wikipedia.org/wiki/websockets&#34;&gt;websockets&lt;/a&gt; working on an &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; instance behind an &lt;a href=&#34;https://aws.amazon.com/elasticloadbalancing/&#34;&gt;ELB (load balancer)&lt;/a&gt; and &lt;a href=&#34;http://nginx.org/&#34;&gt;nginx&lt;/a&gt; on the instance.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re either not using a secure connection or handling the cryptography on the instance (either in nginx or Flask), it works right out of the box. But if you want the ELB to handle TLS termination it doesn&amp;rsquo;t work nearly as well&amp;hellip; Luckily, after a bit of fiddling, I got it working.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Performance problems with Flask and Docker</title>
      <link>https://blog.jverkamp.com/2015/04/03/performance-problems-with-flask-and-docker/</link>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/04/03/performance-problems-with-flask-and-docker/</guid>
      <description>&lt;p&gt;I had an interesting problem recently on a project I was working on. It&amp;rsquo;s a simple &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt;-based webapp, designed to be deployed to &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. The application worked just fine when I was running it locally, but as soon as I pushed the docker container&amp;hellip;&lt;/p&gt;

&lt;p&gt;Latency spikes. Bad enough that the application was failing AWS&amp;rsquo;s healthy host checks, cycling in and out of existence&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://blog.jverkamp.com/embeds/2015/health-check.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Parsing AWS instance data with jq</title>
      <link>https://blog.jverkamp.com/2015/04/01/parsing-aws-instance-data-with-jq/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/04/01/parsing-aws-instance-data-with-jq/</guid>
      <description>&lt;p&gt;Semi-random amusing code snippet of the day:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;aws ec2 describe-instances | jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    .[][].Instances[]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    | select(.Tags[]?.Value == &amp;#34;production&amp;#34;)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    | .PrivateIpAddress
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>