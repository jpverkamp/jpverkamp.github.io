<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/docker/</link>
    <description>Recent content in Docker on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/docker/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clock drift in Docker containers</title>
      <link>https://blog.jverkamp.com/2017/11/15/clock-drift-in-docker-containers/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/11/15/clock-drift-in-docker-containers/</guid>
      <description>&lt;p&gt;I was working on a docker container which uses the aws cli to mess around with some autoscaling groups when I got a somewhat strange error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;A client error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SignatureDoesNotMatch&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; occurred when calling the DescribeAutoScalingGroups operation: Signature not yet current: 20171115T012426Z is still later than 20171115T012420Z &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20171115T011920Z + &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; min.&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm.&lt;/p&gt;

&lt;p&gt;Are the clocks off?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ensuring docker-machine is running</title>
      <link>https://blog.jverkamp.com/2016/04/19/ensuring-docker-machine-is-running/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/04/19/ensuring-docker-machine-is-running/</guid>
      <description>&lt;p&gt;When developing using &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; on OS X, you&amp;rsquo;ll currently&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; have to use &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;docker-machine&lt;/a&gt; to spin up a virtual machine that is actually running the docker containers. Running a virtual machine takes up a bit more in the way of resources than just the docker containers, so if you&amp;rsquo;re not actually developing at the moment, it&amp;rsquo;s helpful to be able to start up the virtual machine only when you need it.&lt;/p&gt;

&lt;p&gt;The current way I have to do that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker-machine start default
$ eval &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;docker-machine env default&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What&amp;rsquo;s worse, the latter command has to be run for every shell that you start up. It&amp;rsquo;s by no means a hard pair of commands and you could easily wrap them in an alias or put them in your &lt;code&gt;.profile&lt;/code&gt; equivalent (which is what I used to do). But unfortunately, I found a completely unrelated bug in &lt;a href=&#34;https://github.com/tony/tmuxp&#34;&gt;&lt;code&gt;tmuxp&lt;/code&gt;&lt;/a&gt;: if the shell takes too long to start up, &lt;code&gt;tmuxp&lt;/code&gt; essentially won&amp;rsquo;t work. The above &lt;code&gt;eval&lt;/code&gt; command took long enough to hit this limit.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring Websockets behind an AWS ELB</title>
      <link>https://blog.jverkamp.com/2015/07/20/configuring-websockets-behind-an-aws-elb/</link>
      <pubDate>Mon, 20 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/07/20/configuring-websockets-behind-an-aws-elb/</guid>
      <description>&lt;p&gt;Recently at work, we were trying to get an application that uses &lt;a href=&#34;https://en.wikipedia.org/wiki/websockets&#34;&gt;websockets&lt;/a&gt; working on an &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; instance behind an &lt;a href=&#34;https://aws.amazon.com/elasticloadbalancing/&#34;&gt;ELB (load balancer)&lt;/a&gt; and &lt;a href=&#34;http://nginx.org/&#34;&gt;nginx&lt;/a&gt; on the instance.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re either not using a secure connection or handling the cryptography on the instance (either in nginx or Flask), it works right out of the box. But if you want the ELB to handle TLS termination it doesn&amp;rsquo;t work nearly as well&amp;hellip; Luckily, after a bit of fiddling, I got it working.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Performance problems with Flask and Docker</title>
      <link>https://blog.jverkamp.com/2015/04/03/performance-problems-with-flask-and-docker/</link>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/04/03/performance-problems-with-flask-and-docker/</guid>
      <description>&lt;p&gt;I had an interesting problem recently on a project I was working on. It&amp;rsquo;s a simple &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt;-based webapp, designed to be deployed to &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. The application worked just fine when I was running it locally, but as soon as I pushed the docker container&amp;hellip;&lt;/p&gt;

&lt;p&gt;Latency spikes. Bad enough that the application was failing AWS&amp;rsquo;s healthy host checks, cycling in and out of existence&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://blog.jverkamp.com/embeds/2015/health-check.png&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker-bash and docker-stop-all</title>
      <link>https://blog.jverkamp.com/2015/02/04/docker-bash-and-docker-stop-all/</link>
      <pubDate>Wed, 04 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/02/04/docker-bash-and-docker-stop-all/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; a fair bit at work, so I&amp;rsquo;ve added a few quick aliases to my dotfiles make that a little bit easier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker-bash&lt;/code&gt; - attach a &lt;code&gt;bash&lt;/code&gt; shell to the first available docker instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker-stop-all&lt;/code&gt; - stop all running docker instances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>