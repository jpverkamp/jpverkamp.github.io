<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/redis/</link>
    <description>Recent content in Redis on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/redis/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automagically storing Python objects in Redis</title>
      <link>https://blog.jverkamp.com/2015/07/16/automagically-storing-python-objects-in-redis/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2015/07/16/automagically-storing-python-objects-in-redis/</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re starting out on a simple web application, eventually&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; you will reach the point where you need to store some form of persistant data. Basically, you have three options&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Store the information in flat files on the file system&lt;/li&gt;
&lt;li&gt;Store the information in a database (&lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;, &lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt; etc)&lt;/li&gt;
&lt;li&gt;Store the information in a key/value store (&lt;a href=&#34;https://www.mongodb.org/&#34;&gt;mongoDB&lt;/a&gt;, &lt;a href=&#34;http://redis.io/&#34;&gt;reddis&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are all manner of pros and cons to each, in particular how easy they are to get started in, how well they fit the data you are using, and how well they will scale horizontally (adding more machines rather than bigger ones).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>