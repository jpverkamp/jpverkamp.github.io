<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Audio on jverkamp.com</title>
    <link>https://blog.jverkamp.com/programming/topics/audio/</link>
    <description>Recent content in Audio on jverkamp.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.jverkamp.com/programming/topics/audio/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AoC 2017 Day 18: Duetvm</title>
      <link>https://blog.jverkamp.com/2017/12/18/aoc-2017-day-18-duetvm/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2017/12/18/aoc-2017-day-18-duetvm/</guid>
      <description>&lt;h3 id=&#34;source-duet-http-adventofcode-com-2017-day-18&#34;&gt;Source: &lt;a href=&#34;http://adventofcode.com/2017/day/18&#34;&gt;Duet&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Part 1:&lt;/strong&gt; Create a virtual machine with the following instruction set:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;snd X&lt;/code&gt; plays a sound with a frequency equal to the value of &lt;code&gt;X&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set X Y&lt;/code&gt; sets register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add X Y&lt;/code&gt; set register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;X + Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mul X Y&lt;/code&gt; sets register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;X * Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mod X Y&lt;/code&gt; sets register &lt;code&gt;X&lt;/code&gt; to &lt;code&gt;X mod Y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rcv X&lt;/code&gt; recovers the frequency of the last sound played, if &lt;code&gt;X&lt;/code&gt; is not zero&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jgz X Y&lt;/code&gt; jumps with an offset of the value of &lt;code&gt;Y&lt;/code&gt;, iff &lt;code&gt;X&lt;/code&gt; is greater than zero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In most cases, &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; can be either an integer value or a register.&lt;/p&gt;

&lt;p&gt;What is the value recovered by &lt;code&gt;rcv&lt;/code&gt; the first time &lt;code&gt;X&lt;/code&gt; is non-zero?&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Audiobooks to Podcasts</title>
      <link>https://blog.jverkamp.com/2016/02/26/audiobooks-to-podcasts/</link>
      <pubDate>Fri, 26 Feb 2016 00:05:00 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2016/02/26/audiobooks-to-podcasts/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently started to listen to audiobooks again (The Aeronaut&amp;rsquo;s Windlass). If you buy books through Audible or some other setup that has their own app, it&amp;rsquo;s a straight forward enough process. On the other hand, if you have them on CD and want to play them on a mobile device&amp;hellip; It&amp;rsquo;s a little more interesting.&lt;/p&gt;

&lt;p&gt;I tried a few different apps that purport to do exactly what I wanted: import an audiobook as a folder full of MP3s and play them, but none that quite meet what I wanted. Since I also listen to a lot of podcasts and have more than one podcast app that I really like (I&amp;rsquo;ve used and liked both &lt;a href=&#34;http://www.downcastapp.com/&#34;&gt;Downcast&lt;/a&gt; and &lt;a href=&#34;http://www.shiftyjelly.com/pocketcasts&#34;&gt;Pocket Casts&lt;/a&gt;), I decided to see if I couldn&amp;rsquo;t use one of those as an audiobook player.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Making music, part 3: Making noise</title>
      <link>https://blog.jverkamp.com/2013/11/12/making-music-part-3-making-noise/</link>
      <pubDate>Tue, 12 Nov 2013 14:00:25 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/11/12/making-music-part-3-making-noise/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.jverkamp.com/2013/11/07/making-music-part-2-taking-shape/&#34;&gt;Last week&lt;/a&gt; we parsed some music. That post was in a bit of a hurry, so we had to leave off a fair few important pieces (like ties and slurs for one; chords for a rather bigger one). We&amp;rsquo;ll get to them soon, but for now we want to actually get something playing back.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Making music, part 2: Taking shape</title>
      <link>https://blog.jverkamp.com/2013/11/07/making-music-part-2-taking-shape/</link>
      <pubDate>Thu, 07 Nov 2013 14:00:55 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/11/07/making-music-part-2-taking-shape/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a bit, but as you may have noticed life is a bit mad at the moment. But I&amp;rsquo;ve still made some progress.&lt;/p&gt;

&lt;p&gt;When we left off &lt;a href=&#34;https://blog.jverkamp.com/2013/10/29/making-music-part-1-reading-abc-notation/&#34;&gt;last time&lt;/a&gt;, we&amp;rsquo;d finished the first step towards making some lovely music with Racket: &lt;a href=&#34;https://en.wikipedia.org/wiki/tokenization&#34;&gt;tokenization&lt;/a&gt;. Now we want to take those songs and form them into something actually approaching music.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Making music, part 1: Reading ABC notation</title>
      <link>https://blog.jverkamp.com/2013/10/29/making-music-part-1-reading-abc-notation/</link>
      <pubDate>Tue, 29 Oct 2013 14:00:12 +0000</pubDate>
      
      <guid>https://blog.jverkamp.com/2013/10/29/making-music-part-1-reading-abc-notation/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a bit since I&amp;rsquo;ve had time to post&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, but I&amp;rsquo;ve got an interesting new project that I&amp;rsquo;ve been working on. It&amp;rsquo;s a bit more complicated, ergo spread out over a few posts, but those tend to be the more interesting posts anyway, eh?&lt;/p&gt;

&lt;p&gt;The basic idea is that I want to be able to write and play music in Racket. One end goal would be to make a library available for the C211 class to give them something else to work with (in addition to &lt;a href=&#34;//blog.jverkamp.com&#34;/wombat-ide/c211-image-api/&#34;&gt;images&lt;/a&gt; and &lt;a href=&#34;//blog.jverkamp.com&#34;/wombat-ide/c211-turtle-api/&#34;&gt;turtles&lt;/a&gt;). To that end, here&amp;rsquo;s my current plan of attack&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write a &lt;a href=&#34;https://en.wikipedia.org/wiki/Lexical%20analysis&#34;&gt;lexer&lt;/a&gt; for &lt;a href=&#34;https://en.wikipedia.org/wiki/ABC%20notation&#34;&gt;ABC notation&lt;/a&gt; to turn raw text into a list of tokens&lt;/li&gt;
&lt;li&gt;Write a parser to turn those tokens into a song (for example dealing with the interactions between key signature/accidentals and meter/note duration)&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;http://pkg.racket-lang.org/#[rsound]&#34;&gt;rsound&lt;/a&gt; library on &lt;a href=&#34;http://pkg.racket-lang.org/&#34;&gt;Planet2 / pkg&lt;/a&gt; to play back individuals notes and chords&lt;/li&gt;
&lt;li&gt;Tie it all together to play a parsed song in ABC notation using the rsound library&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(maybe)&lt;/em&gt;: Use the rsound library to save ABC files as WAV audio&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(maybe)&lt;/em&gt;: Figure out the format and save ABC files as MIDI&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(maybe)&lt;/em&gt;: Render songs as music sheets/li&amp;gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds like fun! Let&amp;rsquo;s get started.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>