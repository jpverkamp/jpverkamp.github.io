<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Music on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/music/</link><description>Recent content in Music on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://blog.jverkamp.com/programming/topics/music/atom.xml" rel="self" type="application/rss+xml"/><item><title>Genuary 2023.10: Generative Music</title><link>https://blog.jverkamp.com/2023/02/10/genuary-2023.10-generative-music/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/02/10/genuary-2023.10-generative-music/</guid><description>&lt;p>&lt;a href="https://genuary.art/" target="_blank" rel="noopener">Genuary&lt;/a>!&lt;/p>
&lt;p>Spend a month making one beautiful thing per day, given a bunch of prompts. A month late, but as they say, &amp;rsquo;the second best time is now'.&lt;/p>
&lt;p>Let&amp;rsquo;s do it!&lt;/p>
&lt;h2 id="10-generative-music">10) Generative music&lt;/h2>
&lt;p>Wikipedia: &lt;a href="https://en.wikipedia.org/wiki/Aleatoric%20music">Generative music&lt;/a>&lt;/p>
&lt;p>&lt;strong>NOTE: Because of limitations in JavaScript autoplaying sound, you must click to start.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>NOTE: This currently doesn&amp;rsquo;t work in Safari. Something funny with the p5.sound addon. I&amp;rsquo;m working on it.&lt;/strong>&lt;/p></description></item><item><title>AoC 2017 Day 18: Duetvm</title><link>https://blog.jverkamp.com/2017/12/18/aoc-2017-day-18-duetvm/</link><pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2017/12/18/aoc-2017-day-18-duetvm/</guid><description>&lt;h3 id="source-duethttpadventofcodecom2017day18">Source: &lt;a href="http://adventofcode.com/2017/day/18" target="_blank" rel="noopener">Duet&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>Part 1:&lt;/strong> Create a virtual machine with the following instruction set:&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>snd X&lt;/code> plays a sound with a frequency equal to the value of &lt;code>X&lt;/code>&lt;/li>
&lt;li>&lt;code>set X Y&lt;/code> sets register &lt;code>X&lt;/code> to &lt;code>Y&lt;/code>&lt;/li>
&lt;li>&lt;code>add X Y&lt;/code> set register &lt;code>X&lt;/code> to &lt;code>X + Y&lt;/code>&lt;/li>
&lt;li>&lt;code>mul X Y&lt;/code> sets register &lt;code>X&lt;/code> to &lt;code>X * Y&lt;/code>&lt;/li>
&lt;li>&lt;code>mod X Y&lt;/code> sets register &lt;code>X&lt;/code> to &lt;code>X mod Y&lt;/code>&lt;/li>
&lt;li>&lt;code>rcv X&lt;/code> recovers the frequency of the last sound played, if &lt;code>X&lt;/code> is not zero&lt;/li>
&lt;li>&lt;code>jgz X Y&lt;/code> jumps with an offset of the value of &lt;code>Y&lt;/code>, iff &lt;code>X&lt;/code> is greater than zero&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>In most cases, &lt;code>X&lt;/code> and &lt;code>Y&lt;/code> can be either an integer value or a register.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>What is the value recovered by &lt;code>rcv&lt;/code> the first time &lt;code>X&lt;/code> is non-zero?&lt;/p>
&lt;/blockquote></description></item><item><title>Making music, part 3: Making noise</title><link>https://blog.jverkamp.com/2013/11/12/making-music-part-3-making-noise/</link><pubDate>Tue, 12 Nov 2013 14:00:25 +0000</pubDate><guid>https://blog.jverkamp.com/2013/11/12/making-music-part-3-making-noise/</guid><description>&lt;p>&lt;a href="https://blog.jverkamp.com/2013/11/07/making-music-part-2-taking-shape/">Last week&lt;/a> we parsed some music. That post was in a bit of a hurry, so we had to leave off a fair few important pieces (like ties and slurs for one; chords for a rather bigger one). We&amp;rsquo;ll get to them soon, but for now we want to actually get something playing back.&lt;/p></description></item><item><title>Making music, part 2: Taking shape</title><link>https://blog.jverkamp.com/2013/11/07/making-music-part-2-taking-shape/</link><pubDate>Thu, 07 Nov 2013 14:00:55 +0000</pubDate><guid>https://blog.jverkamp.com/2013/11/07/making-music-part-2-taking-shape/</guid><description>&lt;p>It&amp;rsquo;s been a bit, but as you may have noticed life is a bit mad at the moment. But I&amp;rsquo;ve still made some progress.&lt;/p>
&lt;p>When we left off &lt;a href="https://blog.jverkamp.com/2013/10/29/making-music-part-1-reading-abc-notation/">last time&lt;/a>, we&amp;rsquo;d finished the first step towards making some lovely music with Racket: &lt;a href="https://en.wikipedia.org/wiki/tokenization">tokenization&lt;/a>. Now we want to take those songs and form them into something actually approaching music.&lt;/p></description></item><item><title>Making music, part 1: Reading ABC notation</title><link>https://blog.jverkamp.com/2013/10/29/making-music-part-1-reading-abc-notation/</link><pubDate>Tue, 29 Oct 2013 14:00:12 +0000</pubDate><guid>https://blog.jverkamp.com/2013/10/29/making-music-part-1-reading-abc-notation/</guid><description>&lt;p>It&amp;rsquo;s been a bit since I&amp;rsquo;ve had time to post&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, but I&amp;rsquo;ve got an interesting new project that I&amp;rsquo;ve been working on. It&amp;rsquo;s a bit more complicated, ergo spread out over a few posts, but those tend to be the more interesting posts anyway, eh?&lt;/p>
&lt;p>The basic idea is that I want to be able to write and play music in Racket. One end goal would be to make a library available for the C211 class to give them something else to work with (in addition to &amp;lt;a href=&amp;quot;//blog.jverkamp.com&amp;quot;/wombat-ide/c211-image-api/&amp;quot;&amp;gt;images&lt;/a> and &amp;lt;a href=&amp;quot;//blog.jverkamp.com&amp;quot;/wombat-ide/c211-turtle-api/&amp;quot;&amp;gt;turtles&lt;/a>). To that end, here&amp;rsquo;s my current plan of attack&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;ul>
&lt;li>Write a &lt;a href="https://en.wikipedia.org/wiki/Lexical%20analysis">lexer&lt;/a> for &lt;a href="https://en.wikipedia.org/wiki/ABC%20notation">ABC notation&lt;/a> to turn raw text into a list of tokens&lt;/li>
&lt;li>Write a parser to turn those tokens into a song (for example dealing with the interactions between key signature/accidentals and meter/note duration)&lt;/li>
&lt;li>Use the &lt;a href="http://pkg.racket-lang.org/#%5c[rsound%5c]" target="_blank" rel="noopener">rsound&lt;/a> library on &lt;a href="http://pkg.racket-lang.org/" target="_blank" rel="noopener">Planet2 / pkg&lt;/a> to play back individuals notes and chords&lt;/li>
&lt;li>Tie it all together to play a parsed song in ABC notation using the rsound library&lt;/li>
&lt;li>&lt;em>(maybe)&lt;/em>: Use the rsound library to save ABC files as WAV audio&lt;/li>
&lt;li>&lt;em>(maybe)&lt;/em>: Figure out the format and save ABC files as MIDI&lt;/li>
&lt;li>&lt;em>(maybe)&lt;/em>: Render songs as music sheets/li&amp;gt;&lt;/li>
&lt;/ul>
&lt;p>Sounds like fun! Let&amp;rsquo;s get started.&lt;/p></description></item></channel></rss>