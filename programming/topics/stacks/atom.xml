<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stacks on jverkamp.com</title><link>https://blog.jverkamp.com/programming/topics/stacks/</link><description>Recent content in Stacks on jverkamp.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 12 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/programming/topics/stacks/atom.xml" rel="self" type="application/rss+xml"/><item><title>StackLang Part IX: Better Testing</title><link>https://blog.jverkamp.com/2023/08/12/stacklang-part-ix-better-testing/</link><pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/08/12/stacklang-part-ix-better-testing/</guid><description>&lt;p>Two posts in two days? Madness!&lt;/p>
&lt;div class="ranking">
 &lt;h3 class="title">Posts in &lt;a href="https://blog.jverkamp.com/series/stacklang/">StackLang&lt;/a>:&lt;/h3>
 &lt;div class="content">
 &lt;ul>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/12/stacklang-part-ix-better-testing/">
 StackLang Part IX: Better Testing
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/11/stacklang-part-viii-compiler-stacks/">
 StackLang Part VIII: Compiler Stacks
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/">
 StackLang Part VII: New CLI and Datatypes
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/16/stacklang-part-vi-some-examples/">
 StackLang Part VI: Some Examples
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/12/stacklang-part-v-compiling-to-c/">
 StackLang Part V: Compiling to C
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/05/01/stacklang-part-iv-an-interpreter/">
 StackLang Part IV: An Interpreter
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/24/stacklang-part-iii-the-parser/">
 StackLang Part III: The Parser
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/16/stacklang-part-ii-the-lexer/">
 StackLang Part II: The Lexer
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/14/stacklang-part-i-the-idea/">
 StackLang Part I: The Idea
 &lt;/a>&lt;/li>&lt;/ul>
 &lt;/div>
&lt;/div>

&lt;p>But really, it got a bit late yesterday so I figured I&amp;rsquo;d split this into two different posts.&lt;/p></description></item><item><title>StackLang Part VIII: Compiler Stacks</title><link>https://blog.jverkamp.com/2023/08/11/stacklang-part-viii-compiler-stacks/</link><pubDate>Fri, 11 Aug 2023 23:59:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/08/11/stacklang-part-viii-compiler-stacks/</guid><description>&lt;p>Let&amp;rsquo;s continue &lt;a href="https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/">StackLang Part VII: New CLI and Datatypes&lt;/a> and implement &lt;del>lists&lt;/del> stacks in the compiler!&lt;/p>
&lt;div class="ranking">
 &lt;h3 class="title">Posts in &lt;a href="https://blog.jverkamp.com/series/stacklang/">StackLang&lt;/a>:&lt;/h3>
 &lt;div class="content">
 &lt;ul>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/12/stacklang-part-ix-better-testing/">
 StackLang Part IX: Better Testing
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/11/stacklang-part-viii-compiler-stacks/">
 StackLang Part VIII: Compiler Stacks
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/">
 StackLang Part VII: New CLI and Datatypes
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/16/stacklang-part-vi-some-examples/">
 StackLang Part VI: Some Examples
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/12/stacklang-part-v-compiling-to-c/">
 StackLang Part V: Compiling to C
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/05/01/stacklang-part-iv-an-interpreter/">
 StackLang Part IV: An Interpreter
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/24/stacklang-part-iii-the-parser/">
 StackLang Part III: The Parser
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/16/stacklang-part-ii-the-lexer/">
 StackLang Part II: The Lexer
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/14/stacklang-part-i-the-idea/">
 StackLang Part I: The Idea
 &lt;/a>&lt;/li>&lt;/ul>
 &lt;/div>
&lt;/div>

&lt;p>In this post:&lt;/p></description></item><item><title>StackLang Part VII: New CLI and Datatypes</title><link>https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/</link><pubDate>Sat, 05 Aug 2023 23:59:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/</guid><description>&lt;p>Another day, another Stacklang!&lt;/p>
&lt;div class="ranking">
 &lt;h3 class="title">Posts in &lt;a href="https://blog.jverkamp.com/series/stacklang/">StackLang&lt;/a>:&lt;/h3>
 &lt;div class="content">
 &lt;ul>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/12/stacklang-part-ix-better-testing/">
 StackLang Part IX: Better Testing
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/11/stacklang-part-viii-compiler-stacks/">
 StackLang Part VIII: Compiler Stacks
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/">
 StackLang Part VII: New CLI and Datatypes
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/16/stacklang-part-vi-some-examples/">
 StackLang Part VI: Some Examples
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/12/stacklang-part-v-compiling-to-c/">
 StackLang Part V: Compiling to C
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/05/01/stacklang-part-iv-an-interpreter/">
 StackLang Part IV: An Interpreter
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/24/stacklang-part-iii-the-parser/">
 StackLang Part III: The Parser
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/16/stacklang-part-ii-the-lexer/">
 StackLang Part II: The Lexer
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/14/stacklang-part-i-the-idea/">
 StackLang Part I: The Idea
 &lt;/a>&lt;/li>&lt;/ul>
 &lt;/div>
&lt;/div>

&lt;p>Today, we&amp;rsquo;ve got two main parts to work on:&lt;/p></description></item><item><title>StackLang Part VI: Some Examples</title><link>https://blog.jverkamp.com/2023/07/16/stacklang-part-vi-some-examples/</link><pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/07/16/stacklang-part-vi-some-examples/</guid><description>&lt;p>We&amp;rsquo;ve gone through all sorts of things building up the StackLang language so far:&lt;/p>
&lt;div class="ranking">
 &lt;h3 class="title">Posts in &lt;a href="https://blog.jverkamp.com/series/stacklang/">StackLang&lt;/a>:&lt;/h3>
 &lt;div class="content">
 &lt;ul>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/12/stacklang-part-ix-better-testing/">
 StackLang Part IX: Better Testing
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/11/stacklang-part-viii-compiler-stacks/">
 StackLang Part VIII: Compiler Stacks
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/08/05/stacklang-part-vii-new-cli-and-datatypes/">
 StackLang Part VII: New CLI and Datatypes
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/16/stacklang-part-vi-some-examples/">
 StackLang Part VI: Some Examples
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/07/12/stacklang-part-v-compiling-to-c/">
 StackLang Part V: Compiling to C
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/05/01/stacklang-part-iv-an-interpreter/">
 StackLang Part IV: An Interpreter
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/24/stacklang-part-iii-the-parser/">
 StackLang Part III: The Parser
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/16/stacklang-part-ii-the-lexer/">
 StackLang Part II: The Lexer
 &lt;/a>&lt;/li>&lt;li>
 &lt;a href="https://blog.jverkamp.com/2023/04/14/stacklang-part-i-the-idea/">
 StackLang Part I: The Idea
 &lt;/a>&lt;/li>&lt;/ul>
 &lt;/div>
&lt;/div>

&lt;p>But what can we actually &lt;em>do&lt;/em> with it?&lt;/p></description></item><item><title>StackLang Part V: Compiling to C</title><link>https://blog.jverkamp.com/2023/07/12/stacklang-part-v-compiling-to-c/</link><pubDate>Wed, 12 Jul 2023 12:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/07/12/stacklang-part-v-compiling-to-c/</guid><description>&lt;p>It&amp;rsquo;s been a bit, but I hope it&amp;rsquo;s worth it. StackLang, part 5: compiling to C!&lt;/p></description></item><item><title>StackLang Part IV: An Interpreter</title><link>https://blog.jverkamp.com/2023/05/01/stacklang-part-iv-an-interpreter/</link><pubDate>Mon, 01 May 2023 23:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/05/01/stacklang-part-iv-an-interpreter/</guid><description>&lt;p>StackLang, part 4: an interpreter. Here we go again!&lt;/p>
&lt;p>This time, the goal is to actually get code running&lt;/p></description></item><item><title>StackLang Part III: The Parser</title><link>https://blog.jverkamp.com/2023/04/24/stacklang-part-iii-the-parser/</link><pubDate>Mon, 24 Apr 2023 00:01:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/04/24/stacklang-part-iii-the-parser/</guid><description>&lt;p>StackLang, part 3: parsing. This is going to be the most complicated one thus far! Onward.&lt;/p></description></item><item><title>StackLang Part II: The Lexer</title><link>https://blog.jverkamp.com/2023/04/16/stacklang-part-ii-the-lexer/</link><pubDate>Sun, 16 Apr 2023 23:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/04/16/stacklang-part-ii-the-lexer/</guid><description>&lt;p>StackLang, part 2: lexing.&lt;/p>
&lt;p>It&amp;rsquo;s quite often the simplest part of implementing a programming language (although parsers for s-expression based languages come close), but it&amp;rsquo;s still something that needs done. So here we go!&lt;/p></description></item><item><title>StackLang Part I: The Idea</title><link>https://blog.jverkamp.com/2023/04/14/stacklang-part-i-the-idea/</link><pubDate>Fri, 14 Apr 2023 23:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/04/14/stacklang-part-i-the-idea/</guid><description>&lt;p>I enjoy writing programming languages. &lt;a href="https://blog.jverkamp.com/2013/08/21/a-tiny-virtual-machine-in-racket/">Example: Tiny&lt;/a>. Let’s do that again.&lt;/p>
&lt;p>This time, StackLang:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @[n fact]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { n 1 - $fact fact n * }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> N 1 &amp;lt;= if
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} @fact
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 $fact fact writeln
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bit of gibberish there, I suppose, but the goal is to write everything in a postfix/stack based model. So &lt;code>n 1 - $fact fact n *&lt;/code> is equivalent to &lt;code>fact(fact, n - 1) * n&lt;/code> in a more traditional language.&lt;/p>
&lt;p>Over the next few posts, I hope to write up where I am thus far and what’s next.&lt;/p></description></item><item><title>AoC 2022 Day 5: Stackinator</title><link>https://blog.jverkamp.com/2022/12/05/aoc-2022-day-5-stackinator/</link><pubDate>Mon, 05 Dec 2022 00:00:03 +0000</pubDate><guid>https://blog.jverkamp.com/2022/12/05/aoc-2022-day-5-stackinator/</guid><description>&lt;h2 id="source-supply-stacks">Source: &lt;a href="https://adventofcode.com/2022/day/5" target="_blank" rel="noopener">Supply Stacks&lt;/a>&lt;/h2>
&lt;h2 id="part-1">Part 1&lt;/h2>
&lt;blockquote>
&lt;p>Given a list of stacks of &lt;em>syntax 1&lt;/em> and instructions in the form &lt;em>syntax 2&lt;/em>, apply each instruction to pop &lt;code>qty&lt;/code> items from the stack &lt;code>src&lt;/code> and put them on &lt;code>dst&lt;/code> one at a time.&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Syntax 1: Stacks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [D] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[N] [C] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[Z] [M] [P]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1 2 3 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Syntax 2: Instructions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>move 1 from 2 to 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>move 3 from 1 to 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>move 2 from 2 to 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>move 1 from 1 to 2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>