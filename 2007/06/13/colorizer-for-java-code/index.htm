<!DOCTYPE html>
<html>
<head>
        
        

        <title>Colorizer for Java code | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" defer></script>
        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js" defer></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" defer />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" defer />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js" defer></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" defer />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js" defer></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js" defer></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" defer />
        <script src="/highlight/highlight.pack.js" defer></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" defer></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" defer />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js" defer ></script>

        <!-- Pretty pretty fonts -->
        <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Calligraffitti" defer />

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" defer />
        <script src="/custom.js" defer></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="//blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="//blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="//blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="//blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="//blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="//blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="//blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="//blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="//blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="//blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="//blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="//blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="//blog.jverkamp.com/category/archives/2014">2014</a></li><li><a href="//blog.jverkamp.com/category/archives/2015">2015</a></li><li><a href="//blog.jverkamp.com/category/archives/2016">2016</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="//blog.jverkamp.com/category/other/book-reviews">Book Reviews</a></li><li><a href="//blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="//blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="//blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="//blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="//blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="//blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="//blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="//blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="//blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="//blog.jverkamp.com/category/writing/ideas">Ideas</a></li><li><a href="//blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="//blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="//blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="//blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li><li><a href="//blog.jverkamp.com/category/writing/writing-excuses">Writing Excuses</a></li></ul></li></ul>

      <form action="//www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">Colorizer for Java code</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2007-06-13"><span class="year">2007</span> <span class="month">June</span> <span class="day">13</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="//blog.jverkamp.com/category/programming/by-language/java">Java</a></li><li><a href="//blog.jverkamp.com/category/programming">Programming</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p>Another project we had during my first Winter quarter at <a title="Rose-Hulman Institute of Technology" href="http://www.rose-hulman.edu/">Rose-Hulman</a> was to use a <a href="https://en.wikipedia.org/wiki/finite_state machine">finite state machine</a> to colorize / perform <a href="https://en.wikipedia.org/wiki/syntax_highlighting">syntax highlighting</a> on Java source code. It's easy enough as there are really 3 special cases that we are looking for (strings, comments, and keywords) and we only need 9 states to recognize them all (at least in my implementation).</p>
<!--more-->
<p>All together, we have the following states and transitions:</p>
<ul>
        <li>If State = <code>NORMAL</code>
<ul>
        <li>If you read " then output buffer (as <code>keyword</code> or <code>normal</code>) and State = <code>STRING</code></li>
        <li>If you read / then output buffer (as <code>keyword</code> or <code>normal</code>) and State = <code>NORMAL_SAW_SLASH</code></li>
        <li>If you read ' then output buffer (as <code>keyword</code> or <code>normal</code>) and State = <code>NORMAL_CHAR</code></li>
        <li>Otherwise, buffer characters until we see a non-letter; on a non-letter:
<ul>
        <li>If the buffer contains a keyword, output as a <code>keyword</code></li>
        <li>Otherwise, output as <code>normal</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>NORMAL_CHAR</code>
<ul>
        <li>If you read \ then State = <code>NORMAL_CHAR_ESCAPE</code></li>
        <li>If you read ' then output buffer as <code>normal</code> and State = <code>NORMAL</code> (yes, character literals can be more than one character long, we aren't validating the input)</li>
        <li>Otherwise, add the character to the buffer</li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>NORMAL_CHAR_ESCAPE</code>
<ul>
        <li>Add the character to the buffer and State = <code>NORMAL_CHAR</code></li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>STRING</code>
<ul>
        <li>If you read \ then State = <code>STRING_SAW_BACKSLASH</code></li>
        <li>If you read " then output buffer as <code>string</code> and State = <code>NORMAL</code></li>
        <li>Otherwise, add the character to the buffer</li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>STRING_SAW_BACKSLASH</code>
<ul>
        <li>Add the character to the buffer and State = <code>STRING</code></li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>NORMAL_SAW_SLASH</code>
<ul>
        <li>If you read / then State = <code>COMMENT_LINE</code></li>
        <li>If you read * then State = <code>COMMENT_BLOCK</code></li>
        <li>Otherwise, State = <code>NORMAL</code></li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>COMMENT_LINE</code>
<ul>
        <li>If you read \n then output buffer as <code>comment</code> and State = <code>NORMAL</code></li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>COMMENT_BLOCK</code>
<ul>
        <li>If you read * then State = <code>COMMENT_BLOCK_SAW_STAR</code></li>
        <li>Otherwise, add the character to the buffer</li>
</ul>
</li>
</ul>
<ul>
        <li>If State = <code>COMMENT_BLOCK_SAW_STAR</code>
<ul>
        <li>If you read / then output buffer as <code>comment</code> and State = <code>NORMAL</code></li>
        <li>If you read * then add the character to the buffer</li>
        <li>Otherwise, add the character to the buffer and State = <code>COMMENT_BLOCK</code></li>
</ul>
</li>
</ul>
<p>Perhaps it's not perfect and it can definitely do some strange things on non-valid Java code, but it seems to work well enough. Here's an example on a short HelloWorld program:</p>
<pre class=""><code>/**
 * This HelloWorld program simply prints "Hello World!"
 * to the console when it is run.
 */
class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello World!"); // Display the string.
    }
}</code></pre>
<pre class="html"><code>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;HelloWorld.java&lt;/title&gt;

  &lt;/head&gt;

  &lt;body&gt;
    &lt;style type="text/css"&gt;
        .string { color: red; }
        .comment { color: green; }
        .keyword { color: blue; }
    &lt;/style&gt;
    &lt;pre&gt;
&lt;span class="comment"&gt;/**
 * This HelloWorld program simply prints "Hello World!"
 * to the console when it is run.
 */&lt;/span&gt;&lt;span class="keyword"&gt;
class&lt;/span&gt; HelloWorld {
   &lt;span class="keyword"&gt; public&lt;/span&gt;&lt;span class="keyword"&gt; static&lt;/span&gt;&lt;span class="keyword"&gt; void&lt;/span&gt; main(String[] args) {
        System.out.println(&lt;span class="string"&gt;"Hello World!"&lt;/span&gt;); &lt;span class="comment"&gt;// Display the string.&lt;/span&gt;
    }
}
    &lt;/pre&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
<p>All nice and rendered, that looks something like this:</p>
<div>
<style type="text/css">
                .string { color: red; }
                .comment { color: green; }
                .keyword { color: blue; }
</style>
<pre>
<span class="comment">/**
* This HelloWorld program simply prints "Hello World!"
* to the console when it is run.
*/</span><span class="keyword">
class</span> HelloWorld {
<span class="keyword">&nbsp;&nbsp;public</span><span class="keyword"> static</span><span class="keyword"> void</span> main(String[] args) {
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string">"Hello World!"</span>); <span class="comment">// Display the string.</span>
&nbsp;&nbsp;}
}
</pre>
</div>
<p>Well, that's all I've got. If you want to take the code for a spin, you can download it below. To run it, just type <code>java -jar colorize.jar HelloWorld</code> (for example, note the lack of an extension on the parameter). The source code is included in the JAR, so if you feel like modifying it, go for it.</p>
<p><strong>Download:</strong> <a href="//blog.jverkamp.com/2007/06/13/colorizer-for-java-code/colorize.jar">colorize.jar</a></p>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "Colorizer for Java code";
var disqus_url = "http://blog.jverkamp.com/2007/06/13/colorizer-for-java-code/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="//blog.jverkamp.com/2006/12/14/markov-random-text">← Markov Random Text</a></li><li><a href="//blog.jverkamp.com/category/archives">Archives</a></li><li><a href="//blog.jverkamp.com/2007/09/21/name-that-artist-i">Name That Artist I →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="//blog.jverkamp.com/2006/12/14/markov-random-text">← Markov Random Text</a></li><li><a href="//blog.jverkamp.com/category/programming">Programming</a></li><li><a href="//blog.jverkamp.com/2007/09/26/pyballworlds">PyBallWorlds →</a></li></ul></nav>

                <div class="legal">
                        <a href="//blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="//blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="//creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="//i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="//directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.defer=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>