<!DOCTYPE html>
<html>
<head>
        
        

        <title>PyMint - A Python Multi-Interpreter | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js"></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/tomorrow-night.css" />
        <script src="/highlight/highlight.pack.js"></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js"></script>

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" />
        <script src="/custom.js"></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="http://blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="http://blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="http://blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="http://blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="http://blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="http://blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="http://blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="http://blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="http://blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="http://blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="http://blog.jverkamp.com/category/archives/2014">2014</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="http://blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="http://blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="http://blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="http://blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="http://blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="http://blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li></ul></li></ul>

      <!--
      <form class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input type="text" class="form-control" placeholder="Search">
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
      </form>
      -->
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">PyMint - A Python Multi-Interpreter</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2007-10-20"><span class="year">2007</span> <span class="month">Oct</span> <span class="day">20</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="http://blog.jverkamp.com/category/programming/by-language/python">Python</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p>During the computer architecture class I took at <a title="Rose-Hulman Institute of Technology" href="http://www.rose-hulman.edu/">Rose-Hulman</a>, we were working with a simple assembly language that we had to compile by hand down to <a href="https://en.wikipedia.org/wiki/MIPS_bytecode">MIPS architecture</a>Â and that's no fun (also there's nothing not worth over doing :)). So I decided to write a program that would allow for modular XML definitions of a language or translation and run it on pretty much any given code.</p>
<!--more-->
<p>Basically, the XML files have a specific structure to run before, during, and after seeing a specifically structured line in the input (the parser is pretty dump, parsing something like Java would be well beyond it at this point) and run some Python code on that output, transforming it in a number of ways.</p>
<p>At the moment, I have definitions that can do any of the following:</p>
<ul>
        <li><a href="http://blog.jverkamp.com/2007/10/20/pymint-a-python-multi-interpreter/rhij-assemble.xml">assemble </a>the given code into bytecode</li>
        <li><a href="http://blog.jverkamp.com/2007/10/20/pymint-a-python-multi-interpreter/rhij-mif.xml">write out those bytes</a> in a structure we can load directly into the simulator</li>
        <li><a href="http://blog.jverkamp.com/2007/10/20/pymint-a-python-multi-interpreter/rhij-run.xml">even run a virtual machine</a> over the given code.</li>
</ul>
<p>As an example, consider the following implementation of a GCD algorithm in RHIJ:</p>
<pre class="asm"><code>BIPUSH 		10
BIPUSH 		5
INVOKEVIRTUAL 	gcd
OUTPUT
HALT

gcd 2 1

BIPUSH 		10
BIPUSH 		5
INVOKEVIRTUAL	mod
OUTPUT
HALT

gcd 2 1:

gcd_loop:
ILOAD		1
IFEQ		gcd_done
ILOAD		1
ISTORE		2
ILOAD		0
ILOAD		1
INVOKEVIRTUAL	mod
ISTORE		1
ILOAD		2
ISTORE		0
GOTO		gcd_loop

gcd_done:
ILOAD		0
IRETURN

mod 2 0

mod_loop:
ILOAD		0
IFLT		mod_done
ILOAD		0
ILOAD		1
ISUB
ISTORE		0
GOTO		mod_loop

mod_done:
ILOAD		0
ILOAD		1
IADD
IRETURN</code></pre>
<p>If we were to the assembly over it, we would get something like this:</p>
<pre class="asm"><code>Assembled code:
0x40 0x0a
0x40 0x05
0x80 0x00 0x01
0x31
0xFF
0x00 0x02 0x00 0x01
0x40 0x0a
0x40 0x05
0x80 0x00 0x01
0x31
0xFF
0x00 0x02 0x00 0x01
0x60 0x01
0x51 0x00 0x17
0x60 0x01
0x61 0x02
0x60 0x00
0x60 0x01
0x80 0x00 0x01
0x61 0x01
0x60 0x02
0x61 0x00
0x58 0xff 0xea
0x60 0x00
0x20
0x00 0x02 0x00 0x00
0x60 0x00
0x50 0x00 0x0d
0x60 0x00
0x60 0x01
0x01
0x61 0x00
0x58 0xff 0xf4
0x60 0x00
0x60 0x01
0x00
0x20

Constant pool:
0x00 0x16
0x00 0x36</code></pre>
<p>If we were to turn that into the actual bytes we could put in the simulator, we'd get this lovely mess:</p>
<pre class="asm"><code>00000116000001367777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
77777777777777777777777777777777
05400a4031010080000200FF400a4001
010080050200FF310160010060170051
60026101800160000161010000610260
60eaff580200200000600000600d0050
01016000ff580061600060f4FF200001</code></pre>
<p>(That big old block of 7s is the constant pool. Since we only have two constants (used for jump targets), most of it is set to 7s. I'm sure there's a reason. :))</p>
<p>And then finally, if we were to run it on the virtual machine:</p>
<pre class="asm"><code>0x40 0x0a
0x40 0x05
0x80 {{{INVOKEVIRTUAL|GCD}}}
0x31
0xFF
0x00 0x02 0x00 0x01
0x40 0x0a
0x40 0x05
0x80 {{{INVOKEVIRTUAL|MOD}}}
0x31
0xFF
0x00 0x02 0x00 0x01
0x60 0x01
0x51 {{{GOTO|28|GCD_DONE}}}
0x60 0x01
0x61 0x02
0x60 0x00
0x60 0x01
0x80 {{{INVOKEVIRTUAL|MOD}}}
0x61 0x01
0x60 0x02
0x61 0x00
0x58 {{{GOTO|48|GCD_LOOP}}}
0x60 0x00
0x20
0x00 0x02 0x00 0x00
0x60 0x00
0x50 {{{GOTO|60|MOD_DONE}}}
0x60 0x00
0x60 0x01
0x01
0x61 0x00
0x58 {{{GOTO|70|MOD_LOOP}}}
0x60 0x00
0x60 0x01
0x00
0x20</code></pre>
<p>(Yes, that is exactly what it's supposed to output.)</p>
<p>I'm not sure if there's anyone out there that this would actually be useful for, but it was definitely an interesting experiment to write. That and it gave me a taste for just how deep the rabbit hole of compilers goes. Perhaps I'll look a bit deeper in the future.</p>
<p>Anyways, if you'd like to download and run the code, you can find a link below. You'll need <a title="Python" href="http://www.python.org/">Python </a>and <a title="wxPython" href="http://wxpython.org/">wxPython</a> for the GUI (side note: working with wxPython? Very straight forward.)</p>
<p><strong>Download</strong>: <a href="http://blog.jverkamp.com/2007/10/20/pymint-a-python-multi-interpreter/PyMint.zip">PyMint.zip</a></p>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "PyMint - A Python Multi-Interpreter";
var disqus_url = "http://blog.jverkamp.com/2007/10/20/pymint-a-python-multi-interpreter/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2007/10/19/name-that-artist-iii">â Name That Artist III</a></li><li><a href="http://blog.jverkamp.com/category/archives">Archives</a></li><li><a href="http://blog.jverkamp.com/2007/10/26/name-that-artist-iv">Name That Artist IV â</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2007/09/26/pyballworlds">â PyBallWorlds</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/2008/10/01/aigs-2008-overview">AIGS 2008 Overview â</a></li></ul></nav>

                <div class="legal">
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="http://directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>
</body>
</html>