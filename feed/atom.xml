<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>jverkamp.com</title><link href="//blog.jverkamp.com" /><link rel="self" href="//blog.jverkamp.com/feed/" /><updated>2016-06-22T00:00:00Z</updated><author><name>JP Verkamp</name></author><id>urn:uuid:b26bbc31-d1d1-3557-055d-3c47073ed3bd</id><entry><title>Mirror iTunes playlists to Spotify</title><link href="//blog.jverkamp.com/2016/06/22/mirror-itunes-playlists-to-spotify" /><id>urn:uuid:728d449b-f26f-3dc7-9a72-a5e203174850</id><updated>2016-06-22T00:00:00Z</updated><summary type="html"><![CDATA[<p>At the moment, I have an Apple Music subscription. It's great to be able to listen to more or less whatever music I want to. I switched from Spotify because they were missing a few artists that I actually did want to listen to. Unfortunately, there are a few things that Apple Music doesn't do that I would like to have--chief among them the ability to play on a Roku.</p>
<p>One nice thing that Spotify does have though is a fairly powerful API: <a href="https://developer.spotify.com/web-api/">Spotify Web API</a>. Inspired by a post on <a href="http://aguo.us/writings/spotify-billboard.html">Spotify and billboard.py</a> which automatically creates Spotify playlists from the Billboard music ranking charts, I decided to write up a script that can sync my playlists from iTunes to Spotify.</p>
]]></summary><content type="html"><![CDATA[<p>At the moment, I have an Apple Music subscription. It's great to be able to listen to more or less whatever music I want to. I switched from Spotify because they were missing a few artists that I actually did want to listen to. Unfortunately, there are a few things that Apple Music doesn't do that I would like to have--chief among them the ability to play on a Roku.</p>
<p>One nice thing that Spotify does have though is a fairly powerful API: <a href="https://developer.spotify.com/web-api/">Spotify Web API</a>. Inspired by a post on <a href="http://aguo.us/writings/spotify-billboard.html">Spotify and billboard.py</a> which automatically creates Spotify playlists from the Billboard music ranking charts, I decided to write up a script that can sync my playlists from iTunes to Spotify.</p>
<!--more-->
<p>First, let's write a method that uses the Spotify web API to search for tracks (or actually any <code>type</code>, such as an artist):</p>
<pre class="python"><code>@memory.cache
def spotify_search(type, retries = 3, **params):
    '''Search for an item on the spotify API.'''

    logging.debug('spotify_search({}, {})'.format(type, params))

    url = 'https://api.spotify.com/v1/search'
    query = ' '.join(
        '{key}:{value}'.format(key = key, value = params[key])
        for key in params
    )

    response = requests.get(url, {'type': type, 'q': query})

    if response.status_code == 419:
        timeout = int(response.headers['Retry-After'])
        sys.stderr.write('Rate limited, waiting {} seconds...\n'.format(timeout))
        time.sleep(timeout)
        return spotify_search(type, retries = 3, **params)

    if response.status_code != 200:
        if retries:
            logging.warning('Non-200 status code for {}, retrying in 1 second...\n'.format(query))
            time.sleep(1)
            return spotify_search(type, retries = retries - 1, **params)
        else:
            logging.critical('Non-200 status code for {}, no more retries'.format(query))
            raise Exception('Error in spotify api for {}'.format(query))

    type_plural = type + 's'

    if response.json()[type_plural]['total'] &gt; 0:
        return response.json()[type_plural]['items'][0]
    else:
        return None</code></pre>
<p>Essentially, it's just a call to the API endpoint <code>/v1/search</code>. The only two odd parts are how the query string is formatted (it looks something like this: <code>Artist:Arist Name Song:Song Name</code>) and the <code>memory.cache</code> decorator.</p>
<p>The decorator comes from <a href="https://pypi.python.org/pypi/joblib">joblib</a> and is basically an easy way to make sure that I don't fetch this information more than once per song no matter how many times I call this method. It will save the results and return them directly for any future calls. To initialize it, all I have to do is run <code>memory = joblib.Memory(cachedir = 'cache', verbose = 0)</code> at the top of my code.</p>
<p>Now that we have a way of looking up songs, lets write a few more helper methods to read from the iTunes library. The first thing that you have to do is check the Advanced setting to 'Share iTunes Library XML with other applications':</p>
<p><a href="//blog.jverkamp.com/2016/06/22/mirror-itunes-playlists-to-spotify/itunes-settings.png" data-toggle="lightbox"><img src="//blog.jverkamp.com/2016/06/22/mirror-itunes-playlists-to-spotify/itunes-settings.png" /></a></p>
<p>This will make the file <code>iTunes Library.xml</code> / <code>iTunes Music Library.xml</code> (it changed between Yosemite and El Capitan) available in your iTunes folder. This is a <a href="https://en.wikipedia.org/wiki/plist">plist</a> file which means the built in <a href="https://docs.python.org/2/library/plistlib.html">plistlib</a> can read it directly:</p>
<pre class="python"><code>path = os.path.expanduser('~/Music/iTunes/iTunes Music Library.xml')
with open(path, 'rb') as fin:
    ITUNES_LIBRARY = plistlib.load(fin)</code></pre>
<p>We can then use this directly to read in information about any given track that we have in our library.</p>
<pre class="python"><code>@memory.cache
def get_track(track_id):
    '''Get a track by ID.'''

    logging.debug('get_track({})'.format(track_id))

    track = ITUNES_LIBRARY['Tracks'].get(str(track_id), None)
    if not track:
        return None

    def remove_parentheticals(s):
        return re.sub(r'\s+[\(\[].*[\)\]]', '', s)

    spotify_data = spotify_search('track',
        artist = remove_parentheticals(track['Artist']),
        track = remove_parentheticals(track['Name']),
    )

    if spotify_data:
        track.update(spotify_data)

    return track</code></pre>
<p>Essentially, we pull the <code>Tracks</code> object out of the iTunes library which is indexed by a <code>track_id</code>. There's one kind of weird part here in that the <code>Tracks</code> object uses numeric strings as keys while the <code>Playlists</code> tracks (see below) are returned as <code>int</code>s. Thus the cast. We take the information from iTunes and then try to look up the song in Spotify. If the search returns, we shove the two objects together. If not, we return just the iTunes information and deal with that later.</p>
<p>Next, we want to look up playlists:</p>
<pre class="python"><code>def get_playlists():
    '''
    Return all playlists for the current user.

    Each will be of the form:
    {'name': '{playlist_name}', 'tracks': [...]}
    '''

    for playlist in ITUNES_LIBRARY['Playlists']:
        if any(key in playlist and playlist[key] for key in ['Master', 'Movies', 'TV Shows', 'Podcasts', 'iTunesU', 'Audiobooks']):
            continue

        yield {
            'name': playlist['Name'],
            'tracks': [
                get_track(track['Track ID'])
                for track in playlist['Playlist Items']
                if get_track(track['Track ID'])
            ]
        }</code></pre>
<p>This is a bit odd, since there are many different kinds of playlists in the iTunes library, not all of which have the same keys. With a bit of experimentation, I found that the list of keys above are the ones we want to avoid. Other than that, we will <code>yield</code> each playlist along with a list of track objects from <code>get_track</code>. This is why I cached those results, since a track can (and often will be) in multiple playlists and we don't want to re-fetch the track information if that's the case.</p>
<p>That's actually the lion's share of what I need. All that's left is the code to create / find Spotify playlists and then add the songs to them. For that, I'm going to use the <a href="https://github.com/plamere/spotipy">spotipy</a> library rather than directly dealing with the endpoints. For the most part, it really helps with the OAuth tokens. All we have to do to create a Spotipy client is this:</p>
<pre class="python"><code>token = spotipy.util.prompt_for_user_token(
    os.env['SPOTIFY_USERNAME'],
    client_id = os.env['SPOTIFY_CLIENT_ID'],
    client_secret = os.env['SPOTIFY_CLIENT_SECRET'],
    redirect_uri = os.env['SPOTIFY_REDIRECT_URI'],
    scope = os.env['SPOTIFY_SCOPE'],
)

sp = spotipy.Spotify(auth = token)</code></pre>
<p>You have to <a href="https://developer.spotify.com/my-applications/#!/applications">create a Spotify App</a>, but that's straight forward enough and free. The first time this is run, you will have to okay the permissions in your web browser, but after that it will keep track of your Spotify API token and will run transparently.</p>
<p>I'm going to use that to write one more helper method:</p>
<pre class="python"><code>def get_spotify_playlist(title):
    '''Get either an existing or new playlist by title.'''

    playlists = sp.user_playlists(sp.me()['id'])['items']
    for playlist in playlists:
        if title == playlist['name']:
            return playlist

    return sp.user_playlist_create(sp.me()['id'], title)</code></pre>
<p><a href="http://aguo.us/writings/spotify-billboard.html">The article</a> that inspired this code only used the <code>user_playlist_create</code> method, but that will create a new playlist on each run. Instead, we want to check if there's already a playlist matching the name that we're trying to create. If so, return that playlist. If not, create a new one to return.</p>
<p>Now we have everything we need. We can write a script that will loop through any iTunes playlists specified on the command line (or all of them if none are specified) and sync them to Spotify:</p>
<pre class="python"><code>for playlist in get_playlists():
    if len(sys.argv) &gt; 1 and playlist['name'] not in sys.argv:
        continue

    spotify_playlist = get_spotify_playlist('iTunes - {}'.format(playlist['name']))

    uris = [
        track['uri'] for
        track in playlist['tracks']
        if 'uri' in track
    ]

    def chunks(items, size):
        for start in range(0, len(items), size):
            yield items[start : start + size]

    for uri_chunk in chunks(uris, 100):
        sp.user_playlist_add_tracks(sp.me()['id'], spotify_playlist['id'], uri_chunk)</code></pre>
<p>I did hit one interesting temporary roadblock in that the Spotify API cannot accept more than 100 URIs at a time, but the <code>chunk</code> method took care of that. One thing that is nice is that the list of songs in a playlist form a set. So it doesn't matter if we add the same song to a playlist more than once, it will still only exist a single time. That's pretty cool!</p>
<p>And that's it. A quick run (it took a few minutes to get all of the information for the 500 songs I have in my iTunes library) and I now have a Spotify playlist for each of my iTunes ones. It's not perfect. There are still a few artists that are on Apple Music but not Spotify. But for a stopgap and when I'm on computers that don't have my iTunes library, it works pretty well. I'll probably set this up to run periodically, just so I always have my playlists relatively up to date.</p>]]></content></entry><entry><title>Imperial Radch</title><link href="//blog.jverkamp.com/2016/06/21/imperial-radch" /><id>urn:uuid:353a7211-73f9-92ae-8dcc-002852cf4063</id><updated>2016-06-21T00:00:00Z</updated><summary type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/17333324-ancillary-justice"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/1-ancillary-justice.jpg" /></a> <a href="https://www.goodreads.com/book/show/20706284-ancillary-sword"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/2-ancillary-sword.jpg" /></a> <a href="https://www.goodreads.com/book/show/23533039-ancillary-mercy"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/3-ancillary-mercy.jpg" /></a></p>
<p>The Imperial Radch trilogy (<a href="https://www.goodreads.com/book/show/17333324-ancillary-justice">Ancillary Justice</a>, <a href="https://www.goodreads.com/book/show/20706284-ancillary-sword">Ancillary Sword</a>, and <a href="https://www.goodreads.com/book/show/23533039-ancillary-mercy">Ancillary Mercy</a>) does a good job at what sci fi does best: takes an idea and explores it.</p>
<p>There are roughly three such related ideas in the Imperial Radch that are interesting:</p>
<ul>
    <li>Ancillaries - Basically, ships and space stations have their own AI cores. In order to do what they need done, they would have dozens--if not hundreds--of former human bodies that had been essentially slaved to the AI core. This leads to a sort of distributed intelligence, where the ancillaries <i>are</i> the same as the ship, although they can also function independently if the need arises. It's a fascinating concept--especially one to give to a point of view character.</li>

    <li>Anaander Mianaai - The Lord of the Radch. Essentially an immortal leader of human space, ruling from a <a href="https://en.wikipedia.org/wiki/Dyson_Sphere">Dyson Sphere</a> (that we never actually see), using the same technology as the ancillaries to have a distributed consciousness of her own among thousands of clone bodies throughout known space. It's interesting enough to have AIs doing this, but to have a former human (it's arguable if Mianaai remains human, is akin to the AI cores, or is something else entirely) take on the same mantle? It's enough to drive one mad... which of course is exactly what happens. And then you have (at least) two supreme rulers with rather different ideas on how the universe should be run.</li>

    <li>Gender roles - The Radchaai don't really see gender. This is mentioned frequently in the first book, where the main character cannot always tell what gender pronouns to use for non-Radchaai. The book uses she/her for all of the Radchaai characters, although the implication is that it's a translation from Radchaai where the more accurate term would be neither specifically masculine nor feminine. It's an interesting concept, although I feel it's over emphasized at first. By Ancillary Mercy, it's faded to something of a background detail, which is honestly even more interesting.</li>
</ul>
<p>On top of that, you have a relatively straight forward plot, following the conflict between a former ancillary and the Lord of the Radch (who has unfortunately gone to war with themself). My main complaint is how the focus shifts from a huge feeling, space and time spanning first novel to a relatively restrained second and third. I wish the sequels had maintained the same scope. They're good books on their own merits, I just feel they didn't measure up to the first. So it goes.</p>
<p>It's a fascinating world and the books are well written. The first is particularly worth a read and the sequels are at least worth a try.</p>
<p>I just hope you like tea.</p>
]]></summary><content type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/17333324-ancillary-justice"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/1-ancillary-justice.jpg" /></a> <a href="https://www.goodreads.com/book/show/20706284-ancillary-sword"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/2-ancillary-sword.jpg" /></a> <a href="https://www.goodreads.com/book/show/23533039-ancillary-mercy"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/3-ancillary-mercy.jpg" /></a></p>
<p>The Imperial Radch trilogy (<a href="https://www.goodreads.com/book/show/17333324-ancillary-justice">Ancillary Justice</a>, <a href="https://www.goodreads.com/book/show/20706284-ancillary-sword">Ancillary Sword</a>, and <a href="https://www.goodreads.com/book/show/23533039-ancillary-mercy">Ancillary Mercy</a>) does a good job at what sci fi does best: takes an idea and explores it.</p>
<p>There are roughly three such related ideas in the Imperial Radch that are interesting:</p>
<ul>
    <li>Ancillaries - Basically, ships and space stations have their own AI cores. In order to do what they need done, they would have dozens--if not hundreds--of former human bodies that had been essentially slaved to the AI core. This leads to a sort of distributed intelligence, where the ancillaries <i>are</i> the same as the ship, although they can also function independently if the need arises. It's a fascinating concept--especially one to give to a point of view character.</li>

    <li>Anaander Mianaai - The Lord of the Radch. Essentially an immortal leader of human space, ruling from a <a href="https://en.wikipedia.org/wiki/Dyson_Sphere">Dyson Sphere</a> (that we never actually see), using the same technology as the ancillaries to have a distributed consciousness of her own among thousands of clone bodies throughout known space. It's interesting enough to have AIs doing this, but to have a former human (it's arguable if Mianaai remains human, is akin to the AI cores, or is something else entirely) take on the same mantle? It's enough to drive one mad... which of course is exactly what happens. And then you have (at least) two supreme rulers with rather different ideas on how the universe should be run.</li>

    <li>Gender roles - The Radchaai don't really see gender. This is mentioned frequently in the first book, where the main character cannot always tell what gender pronouns to use for non-Radchaai. The book uses she/her for all of the Radchaai characters, although the implication is that it's a translation from Radchaai where the more accurate term would be neither specifically masculine nor feminine. It's an interesting concept, although I feel it's over emphasized at first. By Ancillary Mercy, it's faded to something of a background detail, which is honestly even more interesting.</li>
</ul>
<p>On top of that, you have a relatively straight forward plot, following the conflict between a former ancillary and the Lord of the Radch (who has unfortunately gone to war with themself). My main complaint is how the focus shifts from a huge feeling, space and time spanning first novel to a relatively restrained second and third. I wish the sequels had maintained the same scope. They're good books on their own merits, I just feel they didn't measure up to the first. So it goes.</p>
<p>It's a fascinating world and the books are well written. The first is particularly worth a read and the sequels are at least worth a try.</p>
<p>I just hope you like tea.</p>
<!--more-->
<hr />
<p><a href="https://www.goodreads.com/book/show/17333324-ancillary-justice"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/1-ancillary-justice.jpg" /></a></p>
<p>High concept: In the future, starships are run by AIs which also control dozens or more previously human bodies known as ancillaries. Occasionally, the ancillaries get ... detached. Ancillary Justice follows the story of one such.</p>
<p>It's a really neat concept and does a good job of carrying the story on its own. It does make it a bit confusing at times to figure out who exactly is talking; a situation that is compounded by the fact that the story line jumps between a few different timelines and characters (or at least versions of the same character). Ever few chapters I found myself taking a moment to figure out what's going on.</p>
<p>It also doesn't help understanding in that the characters have odd names, many of which are very similar. It's hard at times to remember who is who. On top of that, the various ancillaries of a ship sometimes go by the ship's name (either to themselves or to others), so they literally have the same name.</p>
<p>On top of that, the plot takes a bit to get going. Things are already happening from the very first part of the book, but you (in my case at least) only realize what's going on about halfway through the book. Once you do though... the repercussions are intense. Galaxy changing.</p>
<p>All together though, it does what sci fi does best: takes a crazy concept and builds out the possibilities there from. I look forward to seeing where it goes next in the sequels.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/20706284-ancillary-sword"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/2-ancillary-sword.jpg" /></a></p>
<p>This book was a bit odd so far as sequels go, shrinking the scope of the story significantly from the first book.</p>
<p>In the first, we have several different points of view, timelines, and locations. In the second, we're almost completely following the former Justice of Toren in a single timeline immediately following the events of the first book in a single system.</p>
<p>Honestly it makes for a much stronger book. I got to know the characters a lot better even without the back story that was explicitly stated in the first book. Before long, I grew to really like and care about them. It was just a bit odd to come to this after the first one.</p>
<p>I still really like the main character. It's interesting to see a point of view character that is perfectly used to controlling and paying attention to multiple bodies, even if they no longer can. It's one of the main reasons I love science fiction: take an idea and build a story all around it.</p>
<p>The story and world building are pretty good too. Most of it is dealing with the small scale (for a galaxy) problems of a single system. You have people living in a section where they shouldn't officially be and oppressed agricultural labor. There are hints of the much larger world which I assume will come back in the third book. It'll be interesting to see where that goes.</p>
<p>Overall, a good sequel. I probably would have enjoyed it more if the first two had been switched.</p>
<p>Amusing side note: I accidentally started reading the third book instead of this one. It's a testament to how much the scope shifted in this book that I didn't actually notice for a chapter or three.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/23533039-ancillary-mercy"><img src="//blog.jverkamp.com/2016/06/21/imperial-radch/3-ancillary-mercy.jpg" /></a></p>
<p>Ancillary Mercy does a good job blending the larger overarching story and style of Ancillary Justice and the much closer to home sequel Ancillary Sword. The universe is still relatively limited to a pair of star systems plus the planet and station of Athoek.</p>
<p>For the most part, it's a good mix and a much better sequel to Ancillary Justice than Ancillary Sword was. On the other hand, we still don't get to really deal with any of the overarching story telling that we got at first. We meet a few new ancillaries, but they never really <i>act</i> as ancillaries. One of Anaander Mianaai shows up, but she's almost comically out classed. There's no real threat there. We meet a new Presger translator who is delightfully odd... to an extent that pushes past surreal all the way to unbelievable.</p>
<p>And then there's the finale. It's a fascinating argument. One that I should have seen coming. It's actually a really neat idea, forcing the Presger to deal with the AIs as well the humans. But it just seems to wrap up things entirely too neatly and then end. We don't get to see any of the fallout (perhaps another sequel?). Things just end.</p>
<p>The interesting way of dealing with gender continues through this book. It's no longer a point that's brought up every few pages (or at all really), just everyone uses the Radch pronouns. It was an interesting thought at first and it's interesting to see it fade into normalcy so seamlessly.</p>
<p>Also, this book / author is obsessed with tea. It's an interesting world building choice, but I still haven't decided it it was a way to show that this isn't our world or overdone. I'm leaning towards the latter though... I want to go make some tea now though, so I guess that's a thing?</p>
<p>Overall, it's not as strong as Ancillary Justice but better than Ancillary Sword. I'm not sure if it's supposed to be the last book of the series, but Goodreads doesn't have a potential fourth on its list, so possibly? If there's another, I will read it. If not, I guess this serves as an adequate ending.</p>
<hr />
<p>Up next, back to fantasy for a bit: <a href="https://www.goodreads.com/book/show/19161852-the-fifth-season">The Fifth Season</a> by <a href="https://www.goodreads.com/author/show/2917917.N_K_Jemisin">N.K. Jemisin</a>. It looks like there's a sequel planned for this year, but it's not out yet. That will be odd.</p>]]></content></entry><entry><title>Parsing Motorola Surfboard stats</title><link href="//blog.jverkamp.com/2016/06/04/parsing-motorola-surfboard-stats" /><id>urn:uuid:91b517e2-ff8e-5c7a-e9f5-67526c7c4209</id><updated>2016-06-04T00:00:00Z</updated><summary type="html"><![CDATA[<p>A few weeks ago, I was having some pretty bad problems with my internet randomly hanging. Given that I'm now working from home, that wasn't exactly the most optimal of situations to find myself in, so I decided to dig a bit deeper. After a bit of looking, I found myself at my cable modem's built in web page:</p>
<p><a href="//blog.jverkamp.com/2016/06/04/parsing-motorola-surfboard-stats/downstream.png" data-toggle="lightbox"><img src="//blog.jverkamp.com/2016/06/04/parsing-motorola-surfboard-stats/downstream.png" /></a></p>
<p>(This is after I fixed my problem. The values aren't perfect but they're much better.)</p>
]]></summary><content type="html"><![CDATA[<p>A few weeks ago, I was having some pretty bad problems with my internet randomly hanging. Given that I'm now working from home, that wasn't exactly the most optimal of situations to find myself in, so I decided to dig a bit deeper. After a bit of looking, I found myself at my cable modem's built in web page:</p>
<p><a href="//blog.jverkamp.com/2016/06/04/parsing-motorola-surfboard-stats/downstream.png" data-toggle="lightbox"><img src="//blog.jverkamp.com/2016/06/04/parsing-motorola-surfboard-stats/downstream.png" /></a></p>
<p>(This is after I fixed my problem. The values aren't perfect but they're much better.)</p>
<!--more-->
<p>There are three numbers here that are particularly interesting:</p>
<ul>
    <li><code>Signal to Noise Ratio</code> - >30 dB, although theoretically it can work as low as 25 dB at times; this one is fine</li>
    <li><code>Downstream Power Level</code> - ±15 dbmV is supposed to be acceptable, but you really want no more than ±8 dbmV (that's why I said it's not great at the moment); I was getting -15 dbmV or worse consistently</li>
    <li><code>Upstream Power Level</code> (not shown) - 37-55 dbmV, lower is generally better; I'm getting 47 dbmV, so once again fine</li>
</ul>
<p>The nice thing about all of these numbers is that they are relatively easy to parse. All of the pages are a series of HTML tables, so I should be able to parse them relatively quickly with a combination of <a href="http://docs.python-requests.org/en/master/">Requests</a> to pull down the pages and <a href="https://www.crummy.com/software/BeautifulSoup/">Beautiful Soup</a> to parse them.</p>
<p>First, let's write a helper that can parse an table into a Python list of lists:</p>
<pre class="python"><code>def parse_table(table):
    '''Given soup &lt;table&gt;, extract the rows'''

    rows = []

    for tr in table.find_all('tr'):
        if not tr.find_all('td'):
            continue

        rows.append([
            td.text.strip()
            for td in tr.find_all('td')
            if td.text.strip()
        ])

    return rows</code></pre>
<p>Then furthermore, let's assume the first row is a header row and turn them into a list of dictionaries:</p>
<pre class="python"><code>def lol_to_lod(table, transpose = False):
    '''Convert a list of lists with headers into a list of dicts.'''

    if transpose:
        table = list(zip(*table))

    headers = table[0]

    return [
        dict(zip(headers, row))
        for row in table[1:]
    ]</code></pre>
<p>There's some magic going on there, <code>zip</code>ping the <code>headers</code> and <code>row</code> together to make a <code>dict</code> and transposing arrays via <code>list(zip(*table))</code>. It's perhaps not the most readable code ever, but it's amusing and compact.</p>
<p>After that, it's just a matter of downloading each of the pages and doing a little bit of massaging the data to get it into a consistent form:</p>
<pre class="python"><code>def tables_for(endpoint):
    response = requests.get('http://192.168.100.1' + endpoint)
    soup = bs4.BeautifulSoup(response.text, 'lxml')
    return [parse_table(table) for table in soup.find_all('table')]

def status_page():
    tables = tables_for('/indexData.htm')

    result = {}
    result.update(lol_to_lod(tables[0], transpose = True)[0])
    result.update(lol_to_lod(tables[1], transpose = True)[0])
    return result

def signal_page():
    tables = tables_for('/cmSignalData.htm')
    tables[0][4][0] = 'Power Level'
    del tables[0][-1]
    del tables[0][-1][1]

    return {
        'downstream': lol_to_lod(tables[0], transpose = True),
        'upstream': lol_to_lod(tables[2], transpose = True),
        'codewords': lol_to_lod(tables[3], transpose = True),
    }

def addresses_page():
    tables = tables_for('/cmAddressData.htm')
    tables[1].insert(0, ['Index', 'MAC Address', 'Status'])

    result = lol_to_lod(tables[0], transpose = True)[0]
    result['clients'] = lol_to_lod(tables[1])

    return result

def configuration_page():
    tables = tables_for('/cmConfigData.htm')
    return lol_to_lod(tables[0][:-1], transpose = True)

def logs_page():
    tables = tables_for('/cmLogsData.htm')
    tables[0].insert(0, ['Time', 'Priority', 'Code', 'Message'])
    return lol_to_lod(tables[0])</code></pre>
<p>It's a bit odd since each of the pages is actually one page containing another as an <code>iframe</code>, but a quick look into the source gets me all of the names. It's far more data than you probably actually need (and a good bit of it never changes), but you can always filter it after or compress the heck out of it (lines of mostly the same JSON compress very well; 90%+)</p>
<p>Combine everything into one more layer of Python <code>dict</code> and dump the whole thing as a JSON object.</p>
<pre class="python"><code>results = {
    'status': status_page(),
    'signal': signal_page(),
    'addresses': addresses_page(),
    'configuration': configuration_page(),
    'logs': logs_page(),
}

print(json.dumps(results))</code></pre>
<p>Combined with the excellent <a href="https://stedolan.github.io/jq/">jq</a> to make it pretty:</p>
<pre class="bash"><code>$ modem-stats | jq '.'

{
  "signal": {
    "upstream": [
      {
        "Upstream Modulation": "[3] QPSK\n[3] 64QAM",
        "Ranging Status": "Success",
        "Channel ID": "79",
        "Symbol Rate": "5.120 Msym/sec",
        "Frequency": "21000000 Hz",
        "Ranging Service ID": "15160",
        "Power Level": "47 dBmV"
      },
      ...
    ],
    "codewords": [
      {
        "Total Unerrored Codewords": "9570874877",
        "Channel ID": "10",
        "Total Uncorrectable Codewords": "19826",
        "Total Correctable Codewords": "4667"
      },
      ...
    ],
    "downstream": [
      {
        "Signal to Noise Ratio": "36 dB",
        "Downstream Modulation": "QAM256",
        "Frequency": "663000000 Hz",
        "Power Level": "-9 dBmV",
        "Channel ID": "10"
      },
      ...
    ]
  },
  "addresses": {
    "Serial Number": "{redacted}",
    "clients": [
      {
        "Index": "1",
        "MAC Address": "{redacted}",
        "Status": "Dynamic"
      }
    ],
    "Ethernet MAC Address": "{redacted}",
    "HFC MAC Address": "{redacted}",
    "Ethernet IP Address": "192.168.100.1"
  },
  "status": {
    "Current Time and Date": "Jun 03 2016 23:25:32",
    "System Up Time": "2 days 10h:30m:54s",
    "DOCSIS Downstream Channel Acquisition": "Done",
    "Establish IP Connectivity using DHCP": "Done",
    "Initialize Baseline Privacy": "Done",
    "DOCSIS Ranging": "Done",
    "Register Connection": "Done",
    "Establish Time Of Day": "Done",
    "Transfer Operational Parameters through TFTP": "Done",
    "Cable Modem Status": "Operational"
  },
  "configuration": [
    {
      "Frequency Plan:": "North American Standard/HRC/IRC",
      "Upstream Channel ID:": "79",
      "Favorite Frequency (Hz)": "663000000",
      "Modem's IP Mode": "IPv6 Only",
      "Custom Frequency Ordering:": "Default",
      "DOCSIS MIMO": "Honor MDD IP Mode"
    }
  ],
  "logs": [
    ...
  ]
}</code></pre>
<p>You can also use a bit of shell-fu to combine everything to get an average downstream power level at any given point in time:</p>
<pre class="bash"><code>$ modem-stats \
    | jq '.signal.downstream[]."Power Level"' \
    | tr -d '"' \
    | awk '{ sum += $1; count += 1 } END { print sum/count }'

-8.25</code></pre>
<p>Combine that with a minutely cronjob and you can even detect when certain stats get particularly bad.</p>
<p>In the end, it was mostly a hardware issue. The coaxial cable I was using between the wall and my modem had a few kinks in it. I replaced with a newer, slightly shorter cable and all was well.</p>
<p>But still, it's interesting to have such statistics.</p>
<p>If you'd like to download the entire script, it's in my <a href="https://github.com/jpverkamp/dotfiles/">dotfiles</a>: <a href="https://github.com/jpverkamp/dotfiles/blob/master/bin/modem-stats">modem-stats</a>.</p>]]></content></entry><entry><title>Automatically uploading files</title><link href="//blog.jverkamp.com/2016/06/03/automatically-uploading-files" /><id>urn:uuid:90df3103-501b-d352-df53-c06dfd486fbd</id><updated>2016-06-03T00:00:00Z</updated><summary type="html"><![CDATA[<p>Quick post today. I was working on a website where I have a live server running the code on another machine. I wanted to write a quick script that would copy any files I changed to the remote machine. This is something you can do automatically in most IDEs, but I wanted something both a bit lighter weight and to have the excuse to write something myself.</p>
]]></summary><content type="html"><![CDATA[<p>Quick post today. I was working on a website where I have a live server running the code on another machine. I wanted to write a quick script that would copy any files I changed to the remote machine. This is something you can do automatically in most IDEs, but I wanted something both a bit lighter weight and to have the excuse to write something myself.</p>
<!--more-->
<p>Basically, I'm going to wrap <a href="https://fsnotify.org/">fsnotify</a> with a quick queue that can keep track of files as they're changed and upload them in order.</p>
<p>First, the functionality that can run an arbitrary command (at least one that returns a list of filenames) and put any files found into a queue (we'll see why in a moment):</p>
<pre class="python"><code>sync_queue = queue.Queue()

def sync_command(command):
    process = subprocess.Popen(command, shell = True, stdout = subprocess.PIPE)
    for line in process.stdout:
        for file in line.decode().strip().split():
            sync_queue.put(file)</code></pre>
<p>And then the other half--a thread that can take those files off the queue and automatically upload them to a remote server:</p>
<pre class="python"><code>def do_sync():
    while True:
        path = sync_queue.get()
        local_path = path.replace(local_directory, '').lstrip('/')
        remote_path = remote_directory.rstrip('/') + '/' + local_path

        print('[{} remaining] {} ... '.format(sync_queue.qsize(), local_path), end = '')
        sys.stdout.flush()

        subprocess.check_call('scp "{local_path}" "{remote_host}:{remote_path}"'.format(
            local_path = local_path,
            remote_host = remote_host,
            remote_path = remote_path
        ), shell = True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT)

        print('done')

# Start up the sync thread
sync_thread = threading.Thread(target = do_sync)
sync_thread.daemon = True
sync_thread.start()</code></pre>
<p>And that's all we need. We can run a trio of commands to automatically sync any changes that we've made on a <code>git</code> branch plus any we make going forward:</p>
<pre class="python"><code># Sync any differences on the current branch (first changed, then new files)
sync_command('git diff --name-only master')
sync_command('git ls-files --others --exclude-standard')

# Sync any changes to files as they happen
sync_command('fswatch -r -e ".git" .')</code></pre>
<p>And that's it. <code>fswatch</code> really does most of the work, but it's a nice wrapper that will continually sync files until you tell it to quit.</p>
<p>It's useful enough that I already put it in my <code>dotfiles</code> repo: <a href="https://github.com/jpverkamp/dotfiles/blob/master/bin/sync">sync</a>.</p>]]></content></entry><entry><title>Warbreaker</title><link href="//blog.jverkamp.com/2016/05/09/warbreaker" /><id>urn:uuid:3dba7ec7-9d49-8fe6-1c42-4cda2c7dde4b</id><updated>2016-05-09T00:00:00Z</updated><summary type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/1268479.Warbreaker"><img src="//blog.jverkamp.com/2016/05/09/warbreaker/warbreaker.jpg" /></a></p>
<p>I wish it hadn't taken quite so long to get to <a href="https://www.goodreads.com/book/show/1268479.Warbreaker">Warbreaker</a>. It's really quite a good book, right up there with pretty much all of the rest of <a href="https://www.goodreads.com/author/show/38550.Brandon_Sanderson">Sanderson's</a> works.</p>
]]></summary><content type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/1268479.Warbreaker"><img src="//blog.jverkamp.com/2016/05/09/warbreaker/warbreaker.jpg" /></a></p>
<p>I wish it hadn't taken quite so long to get to <a href="https://www.goodreads.com/book/show/1268479.Warbreaker">Warbreaker</a>. It's really quite a good book, right up there with pretty much all of the rest of <a href="https://www.goodreads.com/author/show/38550.Brandon_Sanderson">Sanderson's</a> works.</p>
<!--more-->
<p>There's a neat magic system (as there always is)--although this time around it felt a bit less detailed than Sanderson usually is. Usually even when as a reader doesn't know all of the rules, you get the idea that there <i>are</i> rules. This time, it just felt a bit more vague. I'm still unsure what exactly the color has to do with it, although the idea of magical automatons powered by souls (Breaths, whatever) is neat, if not quite as original as Sanderson often is. (It doesn't help that I'm also reading Mistborn at the moment.)</p>
<p>The really interesting part though is that of the Returned: those that come back after dying, but will only stick around if they're fed another soul once a week. It doesn't kill those they feed upon, but it will leave them without some sort of inherent spark.</p>
<p>Oh, and the hair thing? That's kind of strange. I'm not sure what the point of that is. I kept expecting being able to grow bright colored hair to save the day (since to use Breath, you have to drain colors), but it never came up. Perhaps in the eventual planned sequel?</p>
<p>Characterwise, I really enjoyed Siri's point of view and her interactions with the God King. Up until the last chunk of the book, he really felt like someone who had been through the exactly what he'd been through. There's an amusing note in the introduction in that this is the book Sanderson was writing when he got married and that his wife had a lot of input into the process. Given the nature of Siri and the God King's wedding night and early interactions... It's amusing to imagine a pair of newlyweds talking through those sections.</p>
<p>My favorite character though had to have been Lightsong. He had one of the craziest character arcs that I've seen in a novel. At first, he's a mix of unlikable and amusing, but I really grew to care for him by the end. And then... Just read it. You'll see.</p>
<p>Plotwise, it's straightforward enough, albeit with a couple of larger twists towards the end. My only real complaint is that the ending just sort of fell together entirely too quickly. Add to that that I really didn't feel like the character of Vasher fit with the rest of the world (although his sword is neat), and I wasn't overly thrilled with how things turned out. I wanted so much more... and then it was over.</p>
<p>Overall, it's not the strongest of Sanderson's works, but so far as I'm concerned that still leaves it a wide margin ahead of much of the rest of fantasy literature out there. I've heard there will be a sequel some day. I look forward to it.</p>
<p>And then there was Hoid. I'm pretty sure the object he was playing with had relations to at least White Sand (the first book Sanderson wrote), Elantris (the first he published), and Mistborn (which he'd finished just before Warbreaker). It's a neat Easter Egg for those paying entirely too much attention (or those who've read the Coppermind Wiki). One of these days I really want to see a book from his point of view though. Hard to pull off, but I'm confident Sanderson could / will do it.</p>
<hr />
<p>Next up, back to scifi. I'll be reading <a href="https://www.goodreads.com/book/show/17333324-ancillary-justice">Ancillary Justice</a> (and the rest of the <a href="https://www.goodreads.com/series/113751-imperial-radch">Imperial Radch</a> trilogy) by <a href="https://www.goodreads.com/author/show/3365457.Ann_Leckie">Ann Leckie</a>. I've heard good things.</p>]]></content></entry><entry><title>Nexus</title><link href="//blog.jverkamp.com/2016/05/07/nexus" /><id>urn:uuid:d95f712e-4100-ca3c-29b8-d564da4e03a9</id><updated>2016-05-07T00:00:00Z</updated><summary type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/13642710-nexus"><img src="//blog.jverkamp.com/2016/05/07/nexus/1-nexus.jpg" /></a> <a href="https://www.goodreads.com/book/show/15997527-crux"><img src="//blog.jverkamp.com/2016/05/07/nexus/2-crux.jpg" /></a> <a href="https://www.goodreads.com/book/show/20424928-apex"><img src="//blog.jverkamp.com/2016/05/07/nexus/3-apex.jpg" /></a></p>
<p>It's been a while, but I've finally finished the <a href="https://www.goodreads.com/series/86731-nexus">Nexus</a> series by <a href="https://www.goodreads.com/author/show/160069.Ramez_Naam">Ramez Naam</a>. Near future sci-fi / thriller, they're great reads with some interesting technology and social/psychological repercussions therefrom. It's also combined with rather a lot of action, especially in the first two books.</p>
<p>Overall, they're a bit long and start to drag at time (too much action, who would have thought?). They're still worth reading.</p>
]]></summary><content type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/13642710-nexus"><img src="//blog.jverkamp.com/2016/05/07/nexus/1-nexus.jpg" /></a> <a href="https://www.goodreads.com/book/show/15997527-crux"><img src="//blog.jverkamp.com/2016/05/07/nexus/2-crux.jpg" /></a> <a href="https://www.goodreads.com/book/show/20424928-apex"><img src="//blog.jverkamp.com/2016/05/07/nexus/3-apex.jpg" /></a></p>
<p>It's been a while, but I've finally finished the <a href="https://www.goodreads.com/series/86731-nexus">Nexus</a> series by <a href="https://www.goodreads.com/author/show/160069.Ramez_Naam">Ramez Naam</a>. Near future sci-fi / thriller, they're great reads with some interesting technology and social/psychological repercussions therefrom. It's also combined with rather a lot of action, especially in the first two books.</p>
<p>Overall, they're a bit long and start to drag at time (too much action, who would have thought?). They're still worth reading.</p>
<!--more-->
<hr />
<p><a href="https://www.goodreads.com/book/show/13642710-nexus"><img src="//blog.jverkamp.com/2016/05/07/nexus/1-nexus.jpg" /></a></p>
<p>It's been a while since I've read near future science fiction that wasn't overly apocalyptic. This was a good re-introduction thereto.</p>
<p>Basically, we're a few decades in the future. Genemods and other biotechnology are known and not entirely uncommon. I'm not sure such technology will actually be available in only 25 years, but it would be interesting to live in a world where such things have come to be.</p>
<p>The technology at the core of the story is Nexus: a nanotech drug that allows brain to brain communication. Even further, the main character has figured out how to run an OS on it. You're basically installing a new OS and code directly on your brain. That sounds at once really cool and terrifying to me. Especially since I do believe that this is in our future, whether or not it comes about via something like Nexus. It's only a matter of time.</p>
<p>Beyond that, I found the characters in general interesting. Seeing Kaden Lane's thought process as he came up against radically different government philosophies and ended up in situations well out of his depth was interesting. <spoiler>Su-Yong Shu as an early posthuman seemed at once just human and alien enough to be believable.</spoiler></p>
<p>As both a positive and negative, there are a lot of frantic action scenes, particularly in the latter half of the book. They're well written and driving but got right on the edge of action fatigue by the end.</p>
<p>Overall, great book. Among the best cyberpunkish / near future sci fi I've ever read. Big world building cliff hanger right at the end. Definitely going to read the sequel(s).</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/15997527-crux"><img src="//blog.jverkamp.com/2016/05/07/nexus/2-crux.jpg" /></a></p>
<p>Crux basically picks up where Nexus let off.</p>
<p>Nexus is a force in the world, with more than a million people using it, growing every day. One particularly interesting use is giving Nexus to children with autism to allow them to communicate directly mind to mind. Another is the children that were born to parents using Nexus. Interesting in both cases.</p>
<p>On the negative side, there have already been cases of people using Nexus for more nefarious purposes. Rape. Blackmail. Assassination. Like any new technology, there is the potential for much to go wrong. Something this big? Of course it does.</p>
<p>But where it really starts getting terrifying is when you consider the parallels with what Snowden revealed a few years ago and the current election cycle. The United States government (among others) in the world of Nexus has made such transhuman technology a crime. They are detaining those same children born with Nexus. One of the main storylines of Crux is just how deep such a hidden agenda might go. It's well written.</p>
<p>One note from a structural standpoint is that there is quite a lot of action in this book. It gets to the point where the action itself starts to drag. It could really use a few more breathers. It's certainly not a dealbreaker, but I think Nexus did it better.</p>
<p>All together, an excellent book. I look forward to the conclusion.</p>
<p>Final note: Feng is my favorite. He's hilarious.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/20424928-apex"><img src="//blog.jverkamp.com/2016/05/07/nexus/3-apex.jpg" /></a></p>
<p>A solid conclusion to the Nexus trilogy. Some things go exactly as I expected them to, but there are still a fair few surprises thrown in for good measure. For the most part, a lot of loose ends are tied up, making it a good way to end a series.</p>
<p>The stakes go up with most of the world in turmoil, the US and China in particular. The Chinese part was interesting (particularly since I've spent some time studying how the Chinese censorship systems work in the modern day), but felt tonally rather different from the previous books. It vaguely fits, but it felt almost like half a sequel and half something entirely new.</p>
<p>Speaking of a different focus, this book does turn a bit of the focus away from Nexus towards the post-human thoughts. Shu in particular. That particular storyline had already come about in the second book, but it really comes to the fore here. Again, it feels like the general story was drifting a bit, even if the drifting was interesting.</p>
<p>Overall, I think this Apex is weaker than Nexus and about as strong as the middle book. Apex is crazy huge and drags at time, but by this point I've invested enough time that I really want to see it through. I'm glad I did.</p>
<p>Random side note: The blurb says "<i>They call them the Apex - humanity's replacement.</i>". Did they actually mention this term at all in this book? I don't remember that overmuch.</p>
<hr />
<p>Solid sci fi. Next up I have a nice standalone novel<span class="footnote"><sup><a href="#footnote-1">[1]</a></sup></span>: <a href="https://www.goodreads.com/author/show/38550.Brandon_Sanderson">Brandon Sanderson's</a> <a href="https://www.goodreads.com/book/show/1268479.Warbreaker">Warbreaker</a>. It'll be interesting reading this intermixed with listening to Sanderson's Mistborn. So far, I think they're different enough that it shouldn't be a problem. We'll see.</p>]]></content></entry><entry><title>Dresden Files</title><link href="//blog.jverkamp.com/2016/04/22/dresden-files" /><id>urn:uuid:ce4ed653-cd1f-0850-d9af-8a6143fa7b7f</id><updated>2016-04-22T00:00:00Z</updated><summary type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/47212.Storm_Front"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/1-storm-front.jpg" /></a> <a href="https://www.goodreads.com/book/show/91477.Fool_Moon"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/2-fool-moon.jpg" /></a> <a href="https://www.goodreads.com/book/show/91476.Grave_Peril"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/3-grave-peril.jpg" /></a> <a href="https://www.goodreads.com/book/show/91478.Summer_Knight"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/4-summer-knight.jpg" /></a> <a href="https://www.goodreads.com/book/show/91479.Death_Masks"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/5-death-masks.jpg" /></a> <a href="https://www.goodreads.com/book/show/99383.Blood_Rites"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/6-blood-rites.jpg" /></a> <a href="https://www.goodreads.com/book/show/17683.Dead_Beat"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/7-dead-beat.jpg" /></a> <a href="https://www.goodreads.com/book/show/91474.Proven_Guilty"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/8-proven-guilty.jpg" /></a> <a href="https://www.goodreads.com/book/show/91475.White_Night"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/9-white-night.jpg" /></a> <a href="https://www.goodreads.com/book/show/927979.Small_Favor"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/10-small-favor.jpg" /></a> <a href="https://www.goodreads.com/book/show/3475161-turn-coat"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/11-turn-coat.jpg" /></a> <a href="https://www.goodreads.com/book/show/6585201-changes"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/12-changes.jpg" /></a> <a href="https://www.goodreads.com/book/show/8058301-ghost-story"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/13-ghost-story.jpg" /></a> <a href="https://www.goodreads.com/book/show/12216302-cold-days"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/14-cold-days.jpg" /></a> <a href="https://www.goodreads.com/book/show/19486421-skin-game"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/15-skin-game.jpg" /></a></p>
<p>Well. That's a lot of books.</p>
<p>I've read the <a href="https://www.goodreads.com/series/40346-the-dresden-files">Dresden Files</a> by <a href="https://www.goodreads.com/author/show/10746.Jim_Butcher">Jim Butcher</a> a half dozen times already. Always room for once more!</p>
<p>More specifically this time around, I've been looking for audio books I can listen to while either commuting to and from work or during the slower times of work itself. The Dresden Files has the advantage there in that I've already read them so many times I can miss small sections without actually losing much in terms of overall plot. It also has the advantage of being narrated by the excellent <a href="https://www.goodreads.com/author/show/169487.James_Marsters">James Marsters</a>. Well worth it.</p>
<p>My thoughts on my n+1'th time through the series? Just as good as before. The first books are rough, but they just keep getting better. It's by a fair margin my favorite urban fantasy series. I'd probably go so far as to say my favorite series, full stop.</p>
<p>Individual reviews follow. There are a few spoilers for individual books and even more in later books for the earlier ones. You have been warned. <img alt="smile" class="emoji" src="/emoji/smile.svg" /></p>
]]></summary><content type="html"><![CDATA[<p><a href="https://www.goodreads.com/book/show/47212.Storm_Front"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/1-storm-front.jpg" /></a> <a href="https://www.goodreads.com/book/show/91477.Fool_Moon"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/2-fool-moon.jpg" /></a> <a href="https://www.goodreads.com/book/show/91476.Grave_Peril"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/3-grave-peril.jpg" /></a> <a href="https://www.goodreads.com/book/show/91478.Summer_Knight"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/4-summer-knight.jpg" /></a> <a href="https://www.goodreads.com/book/show/91479.Death_Masks"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/5-death-masks.jpg" /></a> <a href="https://www.goodreads.com/book/show/99383.Blood_Rites"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/6-blood-rites.jpg" /></a> <a href="https://www.goodreads.com/book/show/17683.Dead_Beat"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/7-dead-beat.jpg" /></a> <a href="https://www.goodreads.com/book/show/91474.Proven_Guilty"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/8-proven-guilty.jpg" /></a> <a href="https://www.goodreads.com/book/show/91475.White_Night"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/9-white-night.jpg" /></a> <a href="https://www.goodreads.com/book/show/927979.Small_Favor"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/10-small-favor.jpg" /></a> <a href="https://www.goodreads.com/book/show/3475161-turn-coat"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/11-turn-coat.jpg" /></a> <a href="https://www.goodreads.com/book/show/6585201-changes"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/12-changes.jpg" /></a> <a href="https://www.goodreads.com/book/show/8058301-ghost-story"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/13-ghost-story.jpg" /></a> <a href="https://www.goodreads.com/book/show/12216302-cold-days"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/14-cold-days.jpg" /></a> <a href="https://www.goodreads.com/book/show/19486421-skin-game"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/15-skin-game.jpg" /></a></p>
<p>Well. That's a lot of books.</p>
<p>I've read the <a href="https://www.goodreads.com/series/40346-the-dresden-files">Dresden Files</a> by <a href="https://www.goodreads.com/author/show/10746.Jim_Butcher">Jim Butcher</a> a half dozen times already. Always room for once more!</p>
<p>More specifically this time around, I've been looking for audio books I can listen to while either commuting to and from work or during the slower times of work itself. The Dresden Files has the advantage there in that I've already read them so many times I can miss small sections without actually losing much in terms of overall plot. It also has the advantage of being narrated by the excellent <a href="https://www.goodreads.com/author/show/169487.James_Marsters">James Marsters</a>. Well worth it.</p>
<p>My thoughts on my n+1'th time through the series? Just as good as before. The first books are rough, but they just keep getting better. It's by a fair margin my favorite urban fantasy series. I'd probably go so far as to say my favorite series, full stop.</p>
<p>Individual reviews follow. There are a few spoilers for individual books and even more in later books for the earlier ones. You have been warned. <img alt="smile" class="emoji" src="/emoji/smile.svg" /></p>
<!--more-->
<hr />
<p><a href="https://www.goodreads.com/book/show/47212.Storm_Front"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/1-storm-front.jpg" /></a></p>
<p>And so it begins.</p>
<p>I've probably read this series roughly half a dozen times. This time I'm listening to them on audiobook. It certainly goes by quick.</p>
<p>Storm Front has a direct and mostly guessable plot, mixed in with hints at a much larger world to come. Although the story is straight forward, that doesn't mean it's boring. In fact, it helps to keep driving the story on page after page (minute after minute)?</p>
<p>The magic system isn't particularly well defined yet, which I'm not sure what I think about. I like magic systems with rules, even if I don't know them and I'm not sure that this world fits that. There are hints of a much much larger world to come though, so that's cool.</p>
<p>Characterwise, Dresden is a 'good guy' to a fault. Despite (or perhaps because of) the fact that he seems himself as an old-fashioned kind of chivalrous, he tends towards the sexist. I'd forgotten how blatant that is, especially in the early books. Part of it, I think is that we're entirely in Dresden's headspace and he still has a lot of growing up to do.</p>
<p>I know a fair few people that won't read the Dresden Files because of this. To each their own.</p>
<p>Other than that, Muphy has potential as a tough cop, but she isn't quite there yet. Macrone has the core of a 'mob boss who cares'. The bad guy(s) are fairly one dimensional, although there are hints of something more beyond them even this early.</p>
<p>Overall, Storm Front is the first book in a series and not nearly as strong as some of the later entries in the series, but it's a good start.</p>
<p>Onwards!</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/91477.Fool_Moon"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/2-fool-moon.jpg" /></a></p>
<p>Two down.</p>
<p>This time around, we're dealing with werewolves. And not just stereotypical werewolves, but a small pile of different forms. People that turn into wolves, people turned into wolves against their will, magic item based wolves... It's a lot. It's getting close (if not outright blowing past) the 'kitchen sink' world building that's rather common in urban fantasy. On the other hand, it's neat to see a few different takes on werewolves.</p>
<p>Another neat beat of world building comes in the form of Chauncy, a civilized (seeming) demon with a British accent who apparently knows far more about the larger world and Dresden's part in it than anyone else we've seen. It'll be interesting to see how/if that comes back in the future.</p>
<p>After that, we get a bit of growth for Dresden. Although he certainly respects some women's abilities (Murphy for example), he'll turn right on and go on about wanting to protect them. There's also the sexual descriptions of just about every single female character we meet (with several of them ending up naked at various times, because werewolf).</p>
<p>As a counterpart, the only male character that we get described is Marcone, who always has eyes like dollar bills. This is mentioned oddly often. He's still one of my favorite characters in the series. We know that he's not a 'good' man by just about anyone's definition, but at the same time, he does have his own code that he will stick to. He could be a very powerful enemy--or ally.</p>
<p>Plotwise, there are a few more twists this time, partially coming from the number of different parties involved and partially because we're tied to Dresden's (flawed) point of view. It's a nice change from Storm Front.</p>
<p>Overall, it's a stronger story than Storm Front and an excellent sequel.</p>
<p>Onwards!</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/91476.Grave_Peril"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/3-grave-peril.jpg" /></a></p>
<p>First there was a sorcerer. Then werewolves. Next up, ghosts and vampires. The Dresden Files certainly get around.</p>
<p>I already said it last time, but it applies again: Grave Peril is a much better book (in my opinion) than Fool Moon, which in turn is much better than Storm Front. I'm sure this won't be the same pattern forever, but it's impressive enough to carry through three books.</p>
<p>Next thought: Michael. Dresden is what many boys / young men want to be. He's a powerful loner who's out to save the day (more or less). Slightly older and wiser though (for some definitions there of), I really admire Michael. He has a rock solid faith in God (granted, it's a different sort of faith when God is quite obviously a force in the world)--even when doubting himself. He <b>will</b> protect those that need protecting and he <b>will</b> do the right thing.</p>
<p>There are a few other very cool scenes in this book: A showdown in a cemetery (it was a dark and stormy night). A vampire-hosted masquerade. A trip through the Fae realm. Dresden's mind. Dresden really letting loose and blowing things up. I enjoy both the worldbuilding that underlies each of these scenes combined with the descriptions to make them come to life in my head.</p>
<p>Here, we also see the world expanding. There are at least three different kinds of vampires with all of the politics that entails. Dresden has dealings with a powerful Fae. There's a very cool scene with a dragon (with the oomph to casually smack Dresden across the room). This is part of what makes me keep reading these books. It's a huge world that somehow manages to avoid (for the most part) feeling 'kitchen sink'y' (although I'm still not sure how).</p>
<p>There's also more of the same when it comes to a surprising number of characters ending up naked or at least mostly so. Less than Fool Moon (I think), but still. Add to that the seductive powers of the White Court...</p>
<p>On the weirder end, this is the first introduction we get to Dresden's subconscious. I'm not really sure what to think about it. It feels like there's more to it than just a hallucination, but it's hard to tell for certain.</p>
<p>Overall, as I said, a great read.</p>
<p>Onward!</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/91478.Summer_Knight"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/4-summer-knight.jpg" /></a></p>
<p>Sorcerers, werewolves, vampires... And now the Fae. We already had hints of it from the previous books, particularly in the guise of Lea--Harry's literal Fairy Godmother.</p>
<p>Overall, it's a very cool bit of worldbuilding. The Fae aren't particularly uncommon in Urban Fantasy and I really like the Dresden Files version thereof. They've even gotten to the point where they act as background knowledge when reading other series. If something isn't mentioned, I'll fall back to the Dresden Files as ground truth. It's just that solid.</p>
<p>Another nice bit is to finally see the White Council that we've heard about for several books. They're more or less what I imagined they would be in this world. A whole pile of different people and cultures brought together by a shared magic. And just like any other large group of people, there is politics.</p>
<p>Of course Dresden ends up smack dab between the two.</p>
<p>The plot is neat, with a few twists and a good number of players muddying the waters. It's interesting to see how even beings as elemental and unchanging as Fae can be twisted against themselves.</p>
<p>Cool scenes:</p>
<p>Dresden and Murphy fighting a giant plant monster at a Home Depot equivalent.</p>
<p>Meeting the crazy powerful (crazy and powerful) Fairy Mothers, the eldest of the queens.</p>
<p>That final battle in the sky.</p>
<p>The scope of the world keeps growing, revealing more and more of the things that go bump in the night (and that could tear Dresden limb from limb without breaking a sweat).</p>
<p>Also, Dresden finally told Murphy just about everything. About freaking time.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/91479.Death_Masks"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/5-death-masks.jpg" /></a></p>
<p>Dang. New favorite Dresden File. More of Michael and the introduction of my favorite baddies in the Dresdenverse.</p>
<p>What really makes Death Masks shine is the the characters:</p>
<p>First: The Archive. That's just a very cool (yet sad) idea all at the same time. The idea that there could be a being with the sum total of all human knowledge ... and that it's a little girl? Dang. I want to know more. How did the first Archive come to be? What exactly capabilities does she have?</p>
<p>Next, two more Knights: an atheist and an accidental Baptist. Both are interesting characters, especially in contrast to the much more stereotypical Knight of God Michael. I like both how Butcher gave them different voices and how Marsters (in the audiobooks) brought those voices to life. There's also an interesting contrast near the end of the book between Dresden and the Knights. It turns out that Dresden is not a 'good' person, at least not in terms of how the Knights see good. After all, payphones cost more than a quarter now.  ..</p>
<p>Then there's the Denarians. Fallen angels bound to the thirty silver given to Judas Iscariot? Dang. They have literal millennia of experience to bring to bear along with a human host, making them yet another upping on the danger scale. We only really get personality from their leader Nicodemus, but man is he an excellent villain. I do wonder if he's supposed to be the same member of the Jewish ruling council mentioned in the Gospel of John. I don't think that's been confirmed either way...</p>
<p>Finally we learn a fair bit more about Marcone. He remains the epitome of Lawful Evil: He has a strong code of ethics for what he will and will not do, but at the same time that code doesn't always (often?) align with what is legally or generally considered moral. He's a fascinating individual that way and honestly a lot more similar to Dresden than I think either of them would care to admit.</p>
<p>One thing that we haven't seen before in this book is a relatively explicit sex scene between Dresden and Susan. It's a definite step away from the fade to black and hints of the previous books, but I don't think it was over done. The most amusing part about it: the original idea for how to do it safely came from Michael's 14 year old daughter. I'd missed that the first few times reading this book.</p>
<p>My favorite scene in the books though? Dresden creates a tracking spell using a plastic duck that walks towards whatever it is tracking. He then later uses said duck as a fake gun to threaten someone. I love it.</p>
<p>Finally: random quotes of awesomeness:</p>
<p>"Better safe than exsanguinated"</p>
<p>"Sod works in mysterious ways."</p>
<p>"My faith protects me. Kevlar helps."</p>
<p><img alt="smile" class="emoji" src="/emoji/smile.svg" /></p>
<hr />
<p><a href="https://www.goodreads.com/book/show/99383.Blood_Rites"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/6-blood-rites.jpg" /></a></p>
<p>I still like Death Masks better, but Blood Rites is still quite good. We're back to big magical rituals (a five book cycle?) but also a bit of goodly hint of vampiric mayhem (the Black and White Courts this time around).</p>
<p>Of course, since it's the White Court, the entire plot this time has to revolve around a ritual curse targetting an adult film director. All righty then.</p>
<p>As I'd mentioned before, the best part of Death Masks was the characters. This time around, it had to be have been just random scenes.</p>
<p>Awesome scenes:</p>
<p>A fight with monkey demons whose primary weapon is... flaming monkey poo. Dresden has a quite literal fight with a literal monkey on his back.</p>
<p>An entropy curse that kills via whatever bizarre means it can access. Including... death via frozen turkey.</p>
<p>A big basement showdown with Mavra (she's back!)... And that wasn't even the climax of the book.</p>
<p>A big fight in a cave system while a bad ass demon summoning is going on.</p>
<p>That's not to say that there weren't a few neat character moments. We learn a lot more about Thomas, Murphy, and Kincaid. Oh, and Dresden has a magic dog now.</p>
<p>One interesting thing that we really haven't seen <em>that</em> much of prior to this is lasting consequences, other than the war with the Red Court. Things are changing in the Dresdenverse. The big example: Dresden's hand. Smaller examples that I'm sure will mean more later: Dresden learns a lot more about his mother/family and about some of the more troublesome parts of the White Council (the Blackstaff). Slightly terrifying example: He Who Walks Behind.</p>
<p>My other favorite part of the Dresden Files in general and this book in particular:</p>
<p>"I put the ick in magic."</p>
<p>"I the hell am Harry."</p>
<p>"Proof is something you use with rational people. Right now you aren't."</p>
<p>Love it.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/17683.Dead_Beat"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/7-dead-beat.jpg" /></a></p>
<p>Ooh fun. A big bad necromancer (in this world, the driving force behind World War I) got taken out by the White Council decades ago. Unfortunately, he left behind a small pile of minions, who of course came calling on Dresden's home turf.</p>
<p>This is right in the running with Death Masks for my favorite thus far. There's a reason it has the highest Goodreads ranking among the first ten Dresden books...</p>
<p>There are a whole pile of awesome baddies, united in their necromantic powers but each with their own twists. Butters gets a serious boost and a lot more importance. We see a bit more of Thomas and Dresden's growing relationship as brothers.</p>
<p>Another awesome part is the whole new twist to come about from Lasciel's coin from the ending of Death Masks. We saw it building a bit in the last book, but things are coming to a head hear. I'll just say that I missed the twist the first time around and it blew me away. On re-reads, I can see just how carefully the hints are planted. It's lovely.</p>
<p>But really? The thing that puts this book right up there with the best of them? The final battle scene. A one-man polka band powered Tyrannosaurus rex brought back on a stormy Halloween night for one last hunt through the streets of Chicago. So cool.</p>
<p>One interesting note that I hadn't noticed before, but there's a part around the middle of this book where Dresden talks with Morty. He drops a line about how Murphy's dad was good people... And then corrects that to <i>is</i> good people. Coming from an ectomancer, that's an interesting line. Each re-read is fascinating to see how Butcher weaves his world together, both planting seeds well in advance or re-using minor plot points in major ways. We'll just leave it at that.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/91474.Proven_Guilty"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/8-proven-guilty.jpg" /></a></p>
<p>Another very solid entry.</p>
<p>Basically, there's black magic afoot. Fear monsters from the Nevernever are attacking a horror movie convention and it's up to Dresden to find out why. Add to that complications with Michael's now almost adult daughter Molly. The interactions between Molly and Dresden are weird and uncomfortable at times, but on the other hand they seem for the most part disturbingly realistic.</p>
<p>I like a lot of the characterization here. We get more on the Carpenters, in particular Molly and Charity. I really love that entire family. Charity shines in this book in particular. We learn a bit more about why she dislikes Dresden so much and how much of a badass she is when the need is right. Molly is in and out of the spotlight quite a bit, but it's obvious she'll be central to future books.</p>
<p>We also get a bit of a hint about how other wizards bend the rules. It's heavily implied that the Gatekeeper has a warning from the future that he passed on to Dresden. It's not time travel strictly speaking... but still.</p>
<p>Then, there's the ending. While there is still a monster-of-the-book thing going on, we're really seeing more of the larger implication of the Dresdenverse. There are a few questions raised here (who is the person behind the person behind the curtain) which we don't even get an answer to... Yet. It's annoying in the first book or two of a series, but this many along, it's something that can really make a series.</p>
<p>Amusing aside: Thus far there are baddies with the same name as my wife and my daughter in this series. It's a bit jarring each time I come across them.</p>
<p>Fun quote of the day: "It is far easier to avoid inappropriate amorous desires if one runs screaming from the room every time a pretty girl comes in."</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/91475.White_Night"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/9-white-night.jpg" /></a></p>
<p>I think this is one of the first of the Dresden Files books that really feels like a more traditional mystery. (Or at least my idea thereof; I don't read much traditional mystery).  Mysterious shadowy figures and murders abound and throughout it's unclear exactly who/what is responsible. There are a few clues for the reader that Dresden otherwise misses, but for the most part, we learn about happenings as they happen.</p>
<p>One really cool scene: Dresden takes advantage of the fact that you can draw energy from the surrounding environment in order to power a spell. He proceed to shoot off a pillar of fire 2-3 feet wide and 20 stories high into the night sky. Can you imagine being a mortal living in Chicago and seeing that? The best part: He didn't even need the fire. He just needed to freeze a chunk of Lake Michigan. Love it.</p>
<p>Another great part about this book in the continued characterization. We learn more about Mouse's magical nature (A real temple dog!). We get another cool scene of Marcone saving the day (he's really starting to make a habit about that). And we get a much better look at House Raith in general and Thomas in specific. For the most 'human' of the vampires, they're still kind of terrifying when they want to be.</p>
<p>So far as larger world building, the stage doesn't change overly much. There are more details about what exactly happened in Dresden's past with He Who Walks Behind.</p>
<p>Oh and that scene at the end with Lash. I really liked her. I liked seeing how Dresden dealt with the power he had and the power he could stand to gain. It was neat to see how just as she changed him, he changed her in turn. It will be interesting to see what fall out there will be from that (if any) in future books.</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/927979.Small_Favor"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/10-small-favor.jpg" /></a></p>
<p>Small Favor combines my favorite parts of the Dresden Files: the Denarians and Knights of the Cross, Marcone, and the Fae in varying degrees. On top of that, where White Night tended towards mystery, Small Favor is straight up actions. The story hits the ground running and never really stops, right through several big set piece battles and one of the bigger finales we've seen (albeit not quite up to the level of Sue...).</p>
<p>On top of that, we get another of Butcher's lovely twists which just drop the bottom out of a story. You think you know what's going on... turns out you've missed the same huge clue that Dresden has. I'm always impressed with those.</p>
<p>There was one particular interesting thought that stuck with me even after I finished the book. Neither the Knights nor the Denarians believed that it was possible Dresden could be rid of Lash without taking up the coin. Everyone has their blind spots. It makes you think about where your own blind spots might be. And back in the Dresdenverse, given how tightly tied the Dresden Files are to Dresden's point of view, what is <i>he</i> missing?</p>
<p>We're also starting to see more and more power creep. Dresden may have lost the ability to sling Hellfire with Lash's demise, but he's got a new trick up his sleeve curtesy of a new heavy hitter on the supernatural scene. If all of the big guns show up in the promised finale to the Dresden Files another ten books down the line... It's going to be an interesting day.</p>
<p>Fun quotes:</p>
<p>"We're ostriches and the whole world is sand."</p>
<p>"That's the problem with you immortal types. You wouldn't get a pop culture reference if it skittered up your neck and implanted an embryo down your esophagus."</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/3475161-turn-coat"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/11-turn-coat.jpg" /></a></p>
<p>Morgan shows up on Dresden's doorstep and asks for his help. Things degrade pretty much exactly as you might expect from there.</p>
<p>We do get a third part in the trifeta of styles from the previous two books: mystery to action to political thriller. There is still plenty of the first two, but now we're dealing primarily with the fallout of a politically motivated murder.</p>
<p>Two things that we learn quite a bit more about in this book are the home of the White Council in (under) Edinburgh and more about that island in the middle of Lake Michigan.</p>
<p>For the former, it's interesting to get a bit more of an insight into just how powerful the senior council can be--while at the same time showing how they're all still human.</p>
<p>In the case of the latter, we get just about as many new questions as we get answers, with a number of characters surprised at just how crazy Dresden is and with hints coming from all over the place about how that island is more interesting/important than we know even now.</p>
<p>We also finally get the start of answers about the Black Council. We're still nowhere near to finding out who is in the core of that particular conspiracy, but it's starting to come to the fore. I do hope that it doesn't take until the planned series finales in a dozen books for more large parts to come out into the open...</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/6585201-changes"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/12-changes.jpg" /></a></p>
<p>Damn.</p>
<p>In the first chapter of Changes, Dresden learns he has a daughter. Throughout the book, he loses everything (his car, his office, his home...). He makes deals he promised he would never make.</p>
<p>He takes on archangel-tier baddies--and wins. He takes on the Red Court and kills them all.</p>
<p>And in the last chapter, he's shot. Presumably fatally. (Although given that this is book 12 out of a planned more than 20...</p>
<p>I remember the first time I read this book. Ghost Story wasn't out yet. That was a long wait. Time time around, I can start immediately (and know what actually happened). That's doesn't make this stories impact and less.</p>
<p>Another thing that has changed since I last read Ghost Story? I have a daughter now. Younger than Maggie, but still. If I were in the same situation; if I had to make the choices Dresden made?</p>
<p>The best Dresden Files thus far, by a decent margin. Where can it even go from here?</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/8058301-ghost-story"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/13-ghost-story.jpg" /></a></p>
<p>And then he was dead. Ish..</p>
<p>Of course the ending of Changes couldn't be the end of Dresden. And after Ghost Story, I think I can forgive Butcher for that cliff hanger. Mostly. <img alt="smile" class="emoji" src="/emoji/smile.svg" /></p>
<p>Thematically, it's a different sort of story, with Dresden mostly without any of his usual tools of the trade and having to learn a whole new set of rules for how the rules work. After the crazy power spike he got throughout Changes, it's something that needed to happen and I think it was done well.</p>
<p>On top of that, we get all of the fall out. Turns out, when you operate on Dresden's scale and when you take out an entire race of bad guys, you create something of a massive void. And now his friends have to deal with it.</p>
<p>Among the developments of Ghost Story is bringing Mortimer Lindquist (it's funny because 'mort' or something similar means death in many Romance languages) to the forefront. Just trying to stay alive makes sense in the darkness that is the Dresdenverse and yet in the end, he still comes through for the good guys. He had a nice character arc, particularly for what was previously a minor, annoying character.</p>
<p>We also get a previous bad guy back again. No spoilers, but given the subject matter (dead things), it's guessable. It was nice to see the fallout of previous problems like that come up again. I have a feeling we'll be feeling that throughout the rest of the series.</p>
<p>All together, it wasn't my favorite book in the series--it's just too different. On the other hand, it's a good way to hit the reset button on a fair bit of power creep and shift the Dresden Files to a new normal. It'll be interesting to see where it goes next...</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/12216302-cold-days"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/14-cold-days.jpg" /></a></p>
<p>Dresden is remarkably good at weaseling his way out of deals he should never have gotten himself into in the first place. This time around though? His number is up. He has to work for Mab.</p>
<p>Mab first job for her new Knight? Kill Maeve.</p>
<p>All righty then.</p>
<p>Crazy scene: Mab throws Dresden a birthday party. In a huge scale model of his old apartment, made of ice. One thing you can say for the Fae, when they go all in, they really go all in.</p>
<p>Crazy scene: Dresden floats a boat off the bottom of Lake Chicago by freezing a large chunk of ice. He comes out of it coated with frost. He's got some serious new oomph going on and it's kind of terrifying.</p>
<p>Crazy scene: Dresden learns about the 'gate' part of the Gatekeeper's job. He learns more about the outsiders than he ever wanted to know. He learns more about Winter's role in all this (and thus his own). He learns exactly what it means to have claimed Demonreach. He starts to learn about how it's all related. He starts to learn who the real enemy is... The Dresdenverse is getting bigger.</p>
<p>And then the ending. Well that was intense. We have new Summer and Winter Ladies. The latter of which is Molly...</p>
<p>The next few books are going to be even more interesting.</p>
<p>(I feel like I say that a lot with Dresden...)</p>
<hr />
<p><a href="https://www.goodreads.com/book/show/19486421-skin-game"><img src="//blog.jverkamp.com/2016/04/22/dresden-files/15-skin-game.jpg" /></a></p>
<p>And then there was a heist.</p>
<p>Book 15, so the Denarians are due. In they came, and not in a way that anyone would have expected. Turns out, Mab owes Nicodemus a favor. She wants Dresden to carry it out.</p>
<p>What's the job? Oh, not that complicated. Steal the Holy Grail from Hades. Yes, that Hades.</p>
<p>Dresden is voluntold that he'll be working with Binder--who Dresden threatened to kill the next time he saw him; Hanna Ascher--a warlock with a serious gift for fire magic; Anna Valmont--who's team was previously killed by the people she's now working for; and Goodman Gray--a seriously creepy shapeshifter with a fascinating background and work ethic.</p>
<p>It's kind of awesome to get the handful of new characters along with fleshing out some old favorites. Combined with the twist in genre and we have a story that manages to at once grow the Dresdenverse yet more while at the same time pulling back the scope as a bit of a breather. Based on the ending, it's going to get interesting again.</p>
<p>On another cool side, we learn a bit more about Uriel and his archangelic powers and get a small chance to see Michael back in the action. Michael remains among my favorite characters in the books, so it's good that he yet has a part to play. Oh, and he has the power to destroy a galaxy. Just so you know that.</p>
<p>Random note: There's a kind of crazy explicit sex scene roughly half way through the book. It's a bit of a surprise, especially when you're listening to the book on a car ride with someone who's never listened to any of the other Dresden books before. So it goes.</p>
<p>Awesome scene: Butters goes full Jedi Knight. And then there was a Jewish Knight of the Cross. It's actually getting kind of ridiculous how only 1 of the 4 we've seen (2 of 5 if you count Murphy) has been particularly devout.</p>
<hr />
<p>So... that's a thing. I cannot wait for Peace Talks... But I guess I'll have to. Hey, if it takes long enough to come out, I might just read the entire series yet again before then. <img alt="smile" class="emoji" src="/emoji/smile.svg" /></p>
<p>Up next on my audiobook lineup I'll be re-listening to the <a href="https://www.goodreads.com/series/40910-mistborn">Mistborn series</a> by <a href="https://www.goodreads.com/author/show/38550.Brandon_Sanderson">Brandon Sanderson</a> in preparation for the two new ones that have just come out. I previously listened to The <a href="https://www.goodreads.com/book/show/10803121-the-alloy-of-law">Alloy of Law</a> (see my <a href="//blog.jverkamp.com/2015/12/31/2015-reading-list-retrospective">2015 Reading List Retrospective</a>), so I already know that they translate well to audio. I'm looking forward to it.</p>]]></content></entry><entry><title>Ensuring docker-machine is running</title><link href="//blog.jverkamp.com/2016/04/19/ensuring-docker-machine-is-running" /><id>urn:uuid:0e62eb30-f56c-7441-a014-2f509ef5d9d5</id><updated>2016-04-19T00:00:00Z</updated><summary type="html"><![CDATA[<p>When developing using <a href="https://www.docker.com/">docker</a> on OS X, you'll currently<span class="footnote"><sup><a href="#footnote-1">[1]</a></sup></span> have to use <a href="https://docs.docker.com/machine/">docker-machine</a> to spin up a virtual machine that is actually running the docker containers. Running a virtual machine takes up a bit more in the way of resources than just the docker containers, so if you're not actually developing at the moment, it's helpful to be able to start up the virtual machine only when you need it.</p>
<p>The current way I have to do that:</p>
<pre class="bash"><code>$ docker-machine start default
$ eval $(docker-machine env default)</code></pre>
<p>What's worse, the latter command has to be run for every shell that you start up. It's by no means a hard pair of commands and you could easily wrap them in an alias or put them in your <code>.profile</code> equivalent (which is what I used to do). But unfortunately, I found a completely unrelated bug in <a href="https://github.com/tony/tmuxp"><code>tmuxp</code></a>: if the shell takes too long to start up, <code>tmuxp</code> essentially won't work. The above <code>eval</code> command took long enough to hit this limit.</p>
]]></summary><content type="html"><![CDATA[<p>When developing using <a href="https://www.docker.com/">docker</a> on OS X, you'll currently<span class="footnote"><sup><a href="#footnote-1">[1]</a></sup></span> have to use <a href="https://docs.docker.com/machine/">docker-machine</a> to spin up a virtual machine that is actually running the docker containers. Running a virtual machine takes up a bit more in the way of resources than just the docker containers, so if you're not actually developing at the moment, it's helpful to be able to start up the virtual machine only when you need it.</p>
<p>The current way I have to do that:</p>
<pre class="bash"><code>$ docker-machine start default
$ eval $(docker-machine env default)</code></pre>
<p>What's worse, the latter command has to be run for every shell that you start up. It's by no means a hard pair of commands and you could easily wrap them in an alias or put them in your <code>.profile</code> equivalent (which is what I used to do). But unfortunately, I found a completely unrelated bug in <a href="https://github.com/tony/tmuxp"><code>tmuxp</code></a>: if the shell takes too long to start up, <code>tmuxp</code> essentially won't work. The above <code>eval</code> command took long enough to hit this limit.</p>
<!--more-->
<p>So how do we fix it? Essentially (using <a href="http://www.zsh.org/">zsh</a>, my current shell of choice, although others should be similar):</p>
<pre class="zsh"><code>assert-docker() {
    command docker ps 2&gt; /dev/null &gt; /dev/null
    if [ $? -ne 0 ]; then
        echo "Starting docker..."
        docker-machine start default
        eval $(docker-machine env default)
        echo
    fi
}

docker () { assert-docker && command docker $@ }
docker-compose () { assert-docker && command docker-compose $@ }</code></pre>
<p>The basic idea is that <code>assert-docker</code> first checks if <code>docker</code> is running by trying to run <code>docker ps</code>. <code>$?</code> contains the status code, which will be non-zero if <code>docker ps</code> failed, so check that. If that's the case, assume <code>docker ps</code> failed because <code>docker-machine</code> wasn't running, so start it up. This will run <code>docker-machine start default</code> more often than needed, but it turns out it's a <code><a href="https://en.wikipedia.org/wiki/NOP">NOP</a></code> if it's already running.</p>
<p>The only interesting part here is the use of the keyword <code>command</code> that prefixes <code>docker</code> or <code>docker-machine</code> within the functions. Basically, this tells ZSH to use the system version of <code>docker</code> or <code>docker-compose</code> rather than the one that I defined, thus preventing an infinite loop. Whee!</p>
<p>How's it work?</p>
<pre class="bash"><code>$ docker ps

Starting docker...
(dev) OUT | Starting VM...
Started machines may have new IP addresses. You may need to re-run the &lt;code&gt;docker-machine env&lt;/code&gt; command.

CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

$ docker ps

CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</code></pre>
<p>Switching to another terminal:</p>
<pre class="bash"><code>$ docker ps

Starting docker...
Machine "default" is already running.

CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

$ docker ps

CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</code></pre>
<p>Neat. That should <a href="https://xkcd.com/1205/">eventually save me a fraction of the time</a> it took to get it right. :)</p>]]></content></entry><entry><title>Raindrops Etc</title><link href="//blog.jverkamp.com/2016/04/10/raindrops-etc" /><id>urn:uuid:adae5824-6f08-ecd4-8091-e8a1bf311896</id><updated>2016-04-10T00:00:00Z</updated><summary type="html"><![CDATA[<p>Another rainy day. I love taking pictures on such days.</p>
<div><div class="flickr-gallery" data-set-id="72157664723193864" data-per-page="30"></div><p><a href="https://flickr.com/photos/jpverkamp/sets/72157664723193864">View on Flickr</a></p></div>]]></summary><content type="html"><![CDATA[<p>Another rainy day. I love taking pictures on such days.</p>
<div><div class="flickr-gallery" data-set-id="72157664723193864" data-per-page="30"></div><p><a href="https://flickr.com/photos/jpverkamp/sets/72157664723193864">View on Flickr</a></p></div>]]></content></entry><entry><title>Mission Basilica San Diego de Alcalá</title><link href="//blog.jverkamp.com/2016/04/04/mission-basilica-san-diego-de-alcala" /><id>urn:uuid:9c28e0c4-8ebf-6e26-0cd8-7af52c3fb763</id><updated>2016-04-04T00:05:00Z</updated><summary type="html"><![CDATA[<p>California's first mission. Quite the history. Very pretty.</p>
<div><div class="flickr-gallery" data-set-id="72157666293836000" data-per-page="30"></div><p><a href="https://flickr.com/photos/jpverkamp/sets/72157666293836000">View on Flickr</a></p></div>]]></summary><content type="html"><![CDATA[<p>California's first mission. Quite the history. Very pretty.</p>
<div><div class="flickr-gallery" data-set-id="72157666293836000" data-per-page="30"></div><p><a href="https://flickr.com/photos/jpverkamp/sets/72157666293836000">View on Flickr</a></p></div>]]></content></entry></feed>