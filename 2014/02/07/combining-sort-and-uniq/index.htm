<!DOCTYPE html>
<html>
<head>
        
        

        <title>Combining sort and uniq | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" defer></script>
        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js" defer></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" defer />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" defer />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js" defer></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" defer />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js" defer></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js" defer></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" defer />
        <script src="/highlight/highlight.pack.js" defer></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" defer></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" defer />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js" defer ></script>

        <!-- Pretty pretty fonts -->
        <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Calligraffitti" defer />

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" defer />
        <script src="/custom.js" defer></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="//blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="//blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="//blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="//blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="//blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="//blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="//blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="//blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="//blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="//blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="//blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="//blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="//blog.jverkamp.com/category/archives/2014">2014</a></li><li><a href="//blog.jverkamp.com/category/archives/2015">2015</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="//blog.jverkamp.com/category/other/book-reviews">Book Reviews</a></li><li><a href="//blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="//blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="//blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="//blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="//blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="//blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="//blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="//blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="//blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="//blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="//blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="//blog.jverkamp.com/category/writing/ideas">Ideas</a></li><li><a href="//blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="//blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="//blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="//blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li><li><a href="//blog.jverkamp.com/category/writing/writing-excuses">Writing Excuses</a></li></ul></li></ul>

      <form action="//www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">Combining sort and uniq</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2014-02-07"><span class="year">2014</span> <span class="month">Feb</span> <span class="day">7</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="//blog.jverkamp.com/category/programming/by-topic/dotfiles">Dotfiles</a></li><li><a href="//blog.jverkamp.com/category/programming/by-topic/open-source">Open Source</a></li><li><a href="//blog.jverkamp.com/category/programming">Programming</a></li><li><a href="//blog.jverkamp.com/category/programming/by-language/python">Python</a></li><li><a href="//blog.jverkamp.com/category/programming/by-topic/unix">Unix</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p>A fairly common set of command line tools (at least for me) is to combine <code>sort</code> and <code>uniq</code> to get a count of unique items in a list of unsorted data. Something like this:</p>
<pre class="bash"><code>$ find . -type 'f' | rev | cut -d "." -f "1" | rev | sort | uniq -c | sort -nr | head

2649 htm
1458 png
 993 cache
 612 jpg
 135 css
 102 zip
  99 svg
  60 gif
  45 js
  27 pdf</code></pre>
<!--more-->
<p>To break that down a little bit:</p>
<pre class="bash"><code> find . -type 'f' </code></pre>
<p>Returns a list of all <code>f</code>iles in the current directory (<code>.</code>).</p>
<pre class="bash"><code> rev | cut -d "." -f "1" | rev </code></pre>
<p>Pulls of the extension by <code>rev</code>ersing the line, then cut off the first <code>.</code> <code>d</code>elimted field <code>f</code>ield (previously the last), and <code>rev</code>ersing it again.</p>
<pre class="bash"><code> sort </code></pre>
<p>Sorts the lines so that <code>uniq</code> will work correctly.</p>
<pre class="bash"><code> uniq -c </code></pre>
<p>Collapse adjacent equalivalent lines, outputing a <code>c</code>ount with each. This is why we had to <code>sort</code> first, otherwise something like <code>a b a a</code> would collapse to <code>a b a</code> rather than <code>a b</code>.</p>
<pre class="bash"><code> sort -nr </code></pre>
<p>Sort again, this time taking into account that the first field is <code>n</code>umeric (the count from <code>uniq</code>) and <code>r</code>eversing the result so that the highest values are first.</p>
<pre class="bash"><code> head </code></pre>
<p>Returning only the first <code>n</code> (default is 10) lines.</p>
<p>Running it on my blog directory, we see that it shows a whole pile of various kinds of files (the <code>cache</code> files are partially generated content unique to my blog generator).</p>
<p>But there's a bit of a problem with using <code>sort</code> and <code>uniq</code> together that way: they aren't aware of one another. So to sort the document, you have to hold the entire thing in memory. If you're running what I was above (~5k lines), that's not much. But if you try to do the same thing with several gigabytes of text...</p>
<p>Let's write a quick script that can do that all at once:</p>
<pre class="python"><code>parser = argparse.ArgumentParser()
parser.add_argument('-k', '--key-sort',   dest='keySort', action='store_true')
parser.add_argument('-v', '--value-sort', dest='valSort', action='store_true')
parser.add_argument('-r', '--reverse',    dest='reverse', action='store_true')
parser.add_argument('-n', '--numeric',    dest='numeric', action='store_true')

args = parser.parse_args()

if args.keySort and args.valSort:
    print('Cannot sort by both key and value')
    exit()

counts = collections.defaultdict(lambda : 0)
for line in sys.stdin:
    counts[line.strip()] += 1

f = int if args.numeric else lambda x : x

values = counts.items()
if args.keySort: values = sorted(values, key = lambda el: f(el[0]))
if args.valSort: values = sorted(values, key = lambda el: f(el[1]))
if args.reverse: values = reversed(values)

for k, v in values:
    print('{0}\t{1}'.format(v, k))</code></pre>
<p>Even better, it combines several flags from both <code>uniq</code> and the second <code>sort</code>. You can sort by either the key or value (value being the count). You can reverse and you can do a numeric sort. So if you want to do the same thing as above:</p>
<pre class="bash"><code>$ find . -type 'f' | rev | cut -d "." -f "1" | rev | count -vnr | head

2649    htm
1458    png
993     cache
612     jpg
135     css
102     zip
99      svg
60      gif
45      js
27      pdf</code></pre>
<p>Much shorter! Granted, if you really wanted to, you can do this just as easily with <code>awk</code>:</p>
<pre class="bash"><code>$ find . -type 'f' | \
  awk -F. '{ exts[$(NF)]++; } END { for (ext in exts) print exts[ext] "\t" ext }' | \
  sort -nr | head

2649    htm
1458    png
993     cache
612     jpg
135     css
102     zip
99      svg
60      gif
45      js
27      pdf</code></pre>
<p>Basically, <code>awk</code> is splitting the string on the <code>F</code>ield <code>.</code>, then running this script on each line:</p>
<pre class="awk"><code> exts[$(NF)]++; </code></pre>
<p><code>NF</code> is the number of fields, so <code>$(NF)</code> refers to the last field. <code>exts[$(NF)]++</code> adds on to a dictionary keyed on the extension (<code>$(NF)</code>). Through the magic of default values, this works, defaulting any missing keys to 0 the first time around.</p>
<p>Then, after all of the lines are done, the <code>END</code> segment runs:</p>
<pre class="awk"><code> for (ext in exts) print exts[ext] "\t" ext </code></pre>
<p>This loops over each extension, printing first the count then the extension.</p>
<p>The downsides? It's a lot longer (although you could alias it) and you have to manually sort. Still, it worth manually knowing some <code>awk</code>, especially for the cases where you're on a remote system and don't have custom dotfiles installed.</p>
<p>As before, this script is available in my <a href="//blog.jverkamp.com/category/programming/by-topic/dotfiles">dotfiles</a> repository: <a href="https://github.com/jpverkamp/dotfiles/blob/master/bin/count">count</a>.</p>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "Combining sort and uniq";
var disqus_url = "http://blog.jverkamp.com/2014/02/07/combining-sort-and-uniq/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="//blog.jverkamp.com/2014/01/27/factoring-factorials">← Factoring factorials</a></li><li><a href="//blog.jverkamp.com/category/archives">Archives</a></li><li><a href="//blog.jverkamp.com/2014/02/07/command-line-user-agent-parsing">Command line user agent parsing →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="//blog.jverkamp.com/2014/01/27/factoring-factorials">← Factoring factorials</a></li><li><a href="//blog.jverkamp.com/category/programming">Programming</a></li><li><a href="//blog.jverkamp.com/2014/02/07/command-line-user-agent-parsing">Command line user agent parsing →</a></li></ul></nav>

                <div class="legal">
                        <a href="//blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="//blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="//creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="//i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="//directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.defer=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>