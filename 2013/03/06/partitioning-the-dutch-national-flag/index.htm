<!DOCTYPE html>
<html>
<head>
        
        

        <title>Partitioning the Dutch national flag | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js"></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" />
        <script src="/highlight/highlight.pack.js"></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js"></script>

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" />
        <script src="/custom.js"></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="http://blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="http://blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="http://blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="http://blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="http://blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="http://blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="http://blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="http://blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="http://blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="http://blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="http://blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="http://blog.jverkamp.com/category/archives/2014">2014</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="http://blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="http://blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="http://blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="http://blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="http://blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="http://blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li></ul></li></ul>

      <form action="http://www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">Partitioning the Dutch national flag</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2013-03-06"><span class="year">2013</span> <span class="month">Mar</span> <span class="day">6</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="http://blog.jverkamp.com/category/programming/by-language/html">HTML</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/javascript">JavaScript</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source/programming-praxis">Programming Praxis</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/racket">Racket</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/scheme">Scheme</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic/algorithms/sorting">Sorting</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic/web-development">Web Development</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p><a title="Dutch National Flag" href="http://programmingpraxis.com/2013/03/05/dutch-national-flag/">Yesterday's post</a> from Programming Praxis asks us to solve a problem known as the Dutch National Flag problem (attributed to <a href="https://en.wikipedia.org/wiki/Edsgar_Dijkstra">Edsgar Dijkstra</a>): <em>sort an array of red, white and blue symbols so that all reds come together, followed by all whites, followed finally by all blues</em>.</p>
<!--more-->
<p>For once, the first algorithm to come to mind was actually the correct one. This doesn't always happen quite so nicely, but it is pleasant when it does. The basic idea is similar to the in-place partition often used with quicksorts ((This is actually more of a partitioning problem than a sorting one)): Start with labels at the beginning and end of the array; advance the labels towards each other, swapping elements on the wrong side of the pivot.</p>
<p>In this case, there are three labels (one for each color), but that doesn't actually change the algorithm much at all. Here are the basic steps:</p>
<ol>
<li>Start with three labels L<sub>r</sub> = 0, L<sub>w</sub> = 0, L<sub>b</sub> = |data| - 1</li>
<li>While L<sub>w</sub> < L<sub>b</sub>, check the element at L<sub>w</sub>:
  <ul>
  <li>Red: Swap L<sub>r</sub> and L<sub>r</sub> and increment L<sub>r</sub> and L<sub>w</sub></li>
  <li>White: Increment L<sub>w</sub></li>
  <li>Blue: Swap L<sub>w</sub> and L<sub>b</sub> and decrement L<sub>b</sub></li>
  </ul>
</ol>
<p>That's all there is to it. Here's how you might translate that into Racket:</p>
<pre class="scheme"><code>(define (vector-swap! v i j)
  (define temp (vector-ref v i))
  (vector-set! v i (vector-ref v j))
  (vector-set! v j temp))

(define (partition-flag! flag)
  (let loop ([r 0] [w 0] [b (- (vector-length flag) 1)])
    (cond
      [(&gt; w b) flag]
      [(eq? (vector-ref flag w) 'red)
       (vector-swap! flag r w)
       (loop (+ r 1) (+ w 1) b)]
      [(eq? (vector-ref flag w) 'white)
       (loop r (+ w 1) b)]
      [(eq? (vector-ref flag w) 'blue)
       (vector-swap! flag w b)
       (loop r w (- b 1))])))</code></pre>
<p>Since the code is relative straight forward, I went ahead off the deep end and worked out a visualization that will run in your web browser. If everything works as it should, clicking 'Run Demo' below should show you exactly what happens when partitioning a 50-element vector.</p>
<script type="text/javascript">
jQuery(function($) {
        // Context to draw with
        var canvas = $('#canvas')[0];
        var context = canvas.getContext('2d');
        var progress = $('#progress');

        // Various constants
        var demo_size = 50;
        var demo_step = 250;
        var left_offset = canvas.width / 10;
        var top_offset = canvas.height / 6;
        var block_width = 4/5 * canvas.width / demo_size;
        var block_height = 1/3 * canvas.height;
        var label_width = 3;
        var label_height = block_height / 3;

        // Data for the simulation
        var styles = new Array('red', 'white', 'blue');
        var labels = new Array(0, 0, 0);
        var data = new Array();
        var tick = 0;
        var comparisons = 0;
        var swaps = 0;

        // Logging function
        function log(msg) {
                progress.html(
                        'Step ' + tick + ':<br />' +
                        msg + '<br /><br />' +
                        'So far:<br />' +
                        comparisons + ' comparisons<br />' +
                        swaps + ' swaps<br />' +
                        demo_size + ' elements'
                );
        }

        // Run the entire demo
        function showDemo() {
                // Generate a new set of data
                data = new Array(demo_size);
                for (var i = 0; i < data.length; i++) {
                        data[i] = Math.floor(Math.random() * 3);
                }

                // Reset the arrays to left, left, and right
                labels = new Array(0, 0, data.length - 1);

                // Clear progress and raw everything the first time
                progress.text('');
                draw();

                // Run the update functions
                comparisons = 0;
                swaps = 0;
                tick = 0;
                function simStep() {
                        tick += 1;

                        if (step())
                                setTimeout(simStep, demo_step);
                        else
                                log("finished");

                        draw();
                }
                setTimeout(simStep, demo_step);
        }

        // Swap two data points
        function swap(i, j) {
                swaps += 1;
                var temp = data[i];
                data[i] = data[j];
                data[j] = temp;
        }

        // Take a single step of the sorting function
        function step() {
                // Stop when the white and blue pointers cross
                if (labels[1] > labels[2]) {
                        return false;
                }

                // On red: swap to red and increment red and white
                else if (data[labels[1]] == 0) {
                        log('red, swap to red and increment red and white');
                        swap(labels[0], labels[1]);
                        labels[0] += 1;
                        labels[1] += 1;
                }

                // On white: increment white
                else if (data[labels[1]] == 1) {
                        log('white, increment white');
                        labels[1] += 1;
                }

                // On blue: swap to blue and decrement blue
                else if (data[labels[1]] == 2) {
                        log('blue, swap to blue and decrement blue');
                        swap(labels[1], labels[2]);
                        labels[2] -= 1;
                }

                // Done, signify that we took a step
                comparisons += 1;
                return true;
        }

        // Draw the blocks and labels
        function draw() {
                // Clear the screen
                context.clearRect(0, 0, canvas.width, canvas.height);

                // Draw blocks
                context.lineWidth = 1;
                context.strokeStyle = 'black';
                for (var i = 0; i < data.length; i++) {
                        context.beginPath();
                        context.rect(
                                left_offset + i * block_width,
                                top_offset,
                                block_width,
                                block_height
                        );
                        context.fillStyle = styles[data[i]];
                        context.fill();
                        context.stroke();
                }

                // Draw labels
                var center_x = 0, center_y = 0;
                for (var i = 0; i < labels.length; i++) {
                        center_x = left_offset + labels[i] * block_width + block_width / 3;
                        center_y = 2 * top_offset + block_height + i * label_height;
                        context.beginPath();
                        context.rect(
                                center_x - label_width / 2,
                                center_y - label_height / 2,
                                label_width,
                                label_height
                        );
                        context.fillStyle = styles[i];
                        context.fill();
                        context.stroke();
                }
        }

        $('#run').click(showDemo);

        $('#source').hide();
        $('#viewsource').click(function() {
                $('#progress').html('');
                $('#source').toggle();
        });
});
</script>
<h3>Demo</h3>
<canvas id="canvas" width="400" height="100" style="border: 1px solid black;">

</canvas>
<div><button id="run" type="button">Run demo</button></div>
<div><button id="viewsource" type="button">Show demo source</button></div>
<div id="progress">

</div>
<div id="source">

<pre class="javascript"><code>jQuery(function($) {
        // Context to draw with
        var canvas = $('#canvas')[0];
        var context = canvas.getContext('2d');
        var progress = $('#progress');

        // Various constants
        var demo_size = 50;
        var demo_step = 250;
        var left_offset = canvas.width / 10;
        var top_offset = canvas.height / 6;
        var block_width = 4/5 * canvas.width / demo_size;
        var block_height = 1/3 * canvas.height;
        var label_width = 3;
        var label_height = block_height / 3;

        // Data for the simulation
        var styles = new Array('red', 'white', 'blue');
        var labels = new Array(0, 0, 0);
        var data = new Array();
        var tick = 0;
        var comparisons = 0;
        var swaps = 0;

        // Logging function
        function log(msg) {
                progress.html(
                        'Step ' + tick + ':&lt;br /&gt;' +
                        msg + '&lt;br /&gt;&lt;br /&gt;' +
                        'So far:&lt;br /&gt;' +
                        comparisons + ' comparisons&lt;br /&gt;' +
                        swaps + ' swaps&lt;br /&gt;' +
                        demo_size + ' elements'
                );
        }

        // Run the entire demo
        function showDemo() {
                // Generate a new set of data
                data = new Array(demo_size);
                for (var i = 0; i &lt; data.length; i++) {
                        data[i] = Math.floor(Math.random() * 3);
                }

                // Reset the arrays to left, left, and right
                labels = new Array(0, 0, data.length - 1);

                // Clear progress and raw everything the first time
                progress.text('');
                draw();

                // Run the update functions
                comparisons = 0;
                swaps = 0;
                tick = 0;
                function simStep() {
                        tick += 1;

                        if (step())
                                setTimeout(simStep, demo_step);
                        else
                                log("finished");

                        draw();
                }
                setTimeout(simStep, demo_step);
        }

        // Swap two data points
        function swap(i, j) {
                swaps += 1;
                var temp = data[i];
                data[i] = data[j];
                data[j] = temp;
        }

        // Take a single step of the sorting function
        function step() {
                // Stop when the white and blue pointers cross
                if (labels[1] &gt; labels[2]) {
                        return false;
                }

                // On red: swap to red and increment red and white
                else if (data[labels[1]] == 0) {
                        log('red, swap to red and increment red and white');
                        swap(labels[0], labels[1]);
                        labels[0] += 1;
                        labels[1] += 1;
                }

                // On white: increment white
                else if (data[labels[1]] == 1) {
                        log('white, increment white');
                        labels[1] += 1;
                }

                // On blue: swap to blue and decrement blue
                else if (data[labels[1]] == 2) {
                        log('blue, swap to blue and decrement blue');
                        swap(labels[1], labels[2]);
                        labels[2] -= 1;
                }

                // Done, signify that we took a step
                comparisons += 1;
                return true;
        }

        // Draw the blocks and labels
        function draw() {
                // Clear the screen
                context.clearRect(0, 0, canvas.width, canvas.height);

                // Draw blocks
                context.lineWidth = 1;
                context.strokeStyle = 'black';
                for (var i = 0; i &lt; data.length; i++) {
                        context.beginPath();
                        context.rect(
                                left_offset + i * block_width,
                                top_offset,
                                block_width,
                                block_height
                        );
                        context.fillStyle = styles[data[i]];
                        context.fill();
                        context.stroke();
                }

                // Draw labels
                var center_x = 0, center_y = 0;
                for (var i = 0; i &lt; labels.length; i++) {
                        center_x = left_offset + labels[i] * block_width + block_width / 3;
                        center_y = 2 * top_offset + block_height + i * label_height;
                        context.beginPath();
                        context.rect(
                                center_x - label_width / 2,
                                center_y - label_height / 2,
                                label_width,
                                label_height
                        );
                        context.fillStyle = styles[i];
                        context.fill();
                        context.stroke();
                }
        }

        $('#run').click(showDemo);
});</code></pre>

</div>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "Partitioning the Dutch national flag";
var disqus_url = "http://blog.jverkamp.com/2013/03/06/partitioning-the-dutch-national-flag/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/03/03/cheesy-chicken-a-la-slow-cooker">← Cheesy chicken a la slow cooker</a></li><li><a href="http://blog.jverkamp.com/category/archives">Archives</a></li><li><a href="http://blog.jverkamp.com/2013/03/06/my-personal-nanowrimo-march-madness">My personal (NaNoWriMo) March Madness →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/03/01/february-1gam-post-mortem">← February #1GAM post-mortem</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/2013/03/11/knight-moves">Knight moves →</a></li></ul></nav>

                <div class="legal">
                        <a href="http://blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="http://blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="http://directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>