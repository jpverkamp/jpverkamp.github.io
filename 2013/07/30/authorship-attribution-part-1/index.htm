<!DOCTYPE html>
<html>
<head>
        
        

        <title>Authorship attribution: Part 1 | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js"></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" />
        <script src="/highlight/highlight.pack.js"></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js"></script>

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" />
        <script src="/custom.js"></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="http://blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="http://blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="http://blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="http://blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="http://blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="http://blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="http://blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="http://blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="http://blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="http://blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="http://blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="http://blog.jverkamp.com/category/archives/2014">2014</a></li><li><a href="http://blog.jverkamp.com/category/archives/2015">2015</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="http://blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="http://blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="http://blog.jverkamp.com/category/writing/ideas">Ideas</a></li><li><a href="http://blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="http://blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="http://blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="http://blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li><li><a href="http://blog.jverkamp.com/category/writing/writing-excuses">Writing Excuses</a></li></ul></li></ul>

      <form action="http://www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">Authorship attribution: Part 1</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2013-07-30"><span class="year">2013</span> <span class="month">July</span> <span class="day">30</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="http://blog.jverkamp.com/category/research/by-topic/computational-linguistics">Computational Linguistics</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic/mathematics">Mathematics</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/racket">Racket</a></li><li><a href="http://blog.jverkamp.com/category/research">Research</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/scheme">Scheme</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic/data-structures/vectors">Vectors</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p>About two weeks ago, the new crime fiction novel <a href="http://www.amazon.com/gp/product/0316206849/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0316206849&amp;linkCode=as2&amp;tag=jverkampcom-20">Cuckoo's Calling</a> was revealed to have actually been written by J.K. Rowling under the pseudonym Robert Galbraith. What's interesting is exactly how they came to that conclusion. Here's a quote from <a title="J.K. Rowling’s Secret: A Forensic Linguist Explains How He Figured It Out" href="http://entertainment.time.com/2013/07/15/j-k-rowlings-secret-a-forensic-linguist-explains-how-he-figured-it-out/">Time</a> magazine (via <a title="J K Rowling" href="http://programmingpraxis.com/2013/07/19/j-k-rowling/">Programming Praxis</a>):</p>
<!--more-->
<blockquote>As one part of his work, Juola uses a program to pull out the hundred most frequent words across an author’s vocabulary. This step eliminates rare words, character names and plot points, leaving him with words like of and but, ranked by usage. Those words might seem inconsequential, but they leave an authorial fingerprint on any work.

“Propositions and articles and similar little function words are actually very individual,” Juola says. “It’s actually very, very hard to change them because they’re so subconscious.”</blockquote>
<p>It's actually pretty similar to what I did a few years ago for my undergraduate thesis: <a title="AnnGram" href="http://blog.jverkamp.com/category/programming/anngram/">AnnGram</a>. In that case, I used a similar technique to what they described above, <a href="https://en.wikipedia.org/wiki/n-grams">n-grams</a>, and <a href="https://en.wikipedia.org/wiki/self_organizing maps">Self organizing map</a> to classify works by author. It's been awhile, but let's take a crack at re-implementing some of these techniques.</p>
<p>(If you'd like to follow along, you can see the full code here: <a href="https://github.com/jpverkamp/small-projects/tree/master/authorship">authorship attribution on github</a>)</p>
<p>First, we'll use the technique described above. The idea is to take the most common words throughout a book and rank them. Theoretically, this will give us a unique fingerprint for each author that should be able to identify them even under a pseudonym.</p>
<p>Let's start by cleaning up the words. For the time being, we want only alphabetic characters and only in lowercase. That way we should avoid position in sentences and the like. This should be an easy enough way to do that:</p>
<pre class="scheme"><code>; Remove non word characters
(define (fix-word word)
  (list-&gt;string
   (for/list ([c (in-string word)]
              #:when (char-alphabetic? c))
     (char-downcase c))))</code></pre>
<p>Easy enough. So let's actually count the words. To start, we'll keep a hash of counts. They're easy enough to work with in Racket, albeit not quite so easy as say Python. With that, we only need to loop through the words in the text:</p>
<pre class="scheme"><code>; Store the word counts
(define counts (make-hash))

; Count all of the base words in the text
(for* ([line (in-lines in)]
       [word (in-list (string-split line))])
  (define fixed (fix-word word))
  (hash-set! counts fixed (add1 (hash-ref counts fixed 0))))</code></pre>
<p>Using the three argument form of <code>hash-ref</code> allows us to specify a default. That way the <code>hash</code> is effectively acting like Python's <code>defaultdict</code> (a particular favorite data structure of mine).</p>
<p>After we've done that, we can find the <code>top-n</code> most common words:</p>
<pre class="scheme"><code>; Extract the top limit words
(define top-n
  (map first
       (take
        (sort
         (for/list ([(word count) (in-hash counts)])
           (list word count))
         (lambda (a b) (&gt; (second a) (second b))))
        limit)))</code></pre>
<p>Finally, we want to replace the count with the ordering. Later, we'll try using the relative frequencies but at the moment the ordering will do well enough. Since we're going to later use a default value of 0 which should be near to a low rank, we'll count down.</p>
<pre class="scheme"><code>; Add an order to each, descending
(for/hash ([i (in-range limit 0 -1)]
           [word (in-list top-n)])
  (values word i)))</code></pre>
<p>All together, this can take a text file (as input port) and return the most common words. For example, using Cuckoo's Calling:</p>
<pre class="scheme"><code>&gt; (with-input-from-file "Cuckoo's Calling.txt" word-rank)
'#hash(("the" . 10)  ("to" . 9)   ("and" . 8)
       ("a" . 7)     ("of" . 6)   ("he" . 5)
       ("was" . 4)   ("she" . 3)  ("in" . 2)
       ("her" . 1))</code></pre>
<p>If the post was correct (and they did identify JK Rowling after all), then this should be a similar ordering for any book written by her while other authors will be slightly different. Let's take for example the text of the 7th Harry Potter book:</p>
<pre class="scheme"><code>&gt; (with-input-from-file "Deathly Hallows.txt" word-rank)
'#hash(("the" . 10)  ("and" . 9)    ("" . 8)
       ("to" . 7)    ("of" . 6)     ("he" . 5)
       ("a" . 4)     ("harry" . 3)  ("was" . 2)
       ("it" . 1))</code></pre>
<p>It seems that <i>and</i> has moved up, <i>a</i> and <i>she</i> have swapped, and <i>harry</i> is there--It's pretty impressive that's the 7th most common word in the entire book but rather unlikely to appear in Cuckoo's Calling. But overall, it's pretty similar. So let's try to compare it to a few more books.</p>
<p>We do need one more peace first though. We need to be able to tell how similar two books are. In this case, we'll use the idea of <a href="https://en.wikipedia.org/wiki/cosine_similarity">cosine similarity</a>. Essentially, given two vectors we can calculate the angle between them. The more similar two vectors are, the closer to zero the result will be.</p>
<p>One problem is that we have hashes instead of vectors. We can't even guarantee that the same words will appear in two different lists. So first, we'll unify the keys. Add zeros for missing words, put them in the same order, and we have vectors we can measure:</p>
<pre class="scheme"><code>; Calculate the similarity between two vectors
; If inputs are hashes, merge them before calculating similarity
(define (cosine-similarity a b)
  (cond
    [(and (hash? a) (hash? b))
     (define keys
       (set-&gt;list (set-union (list-&gt;set (hash-keys a))
                             (list-&gt;set (hash-keys b)))))
     (cosine-similarity
      (for/vector ([k (in-list keys)]) (hash-ref a k 0))
      (for/vector ([k (in-list keys)]) (hash-ref b k 0)))]
    [else
     (define cossim (acos (/ (dot-product a b) (* (magnitude a) (magnitude b)))))
     (- 1.0 (/ (abs cossim) (/ pi 2)))]))</code></pre>
<p>The last line normalizes it to the range [0, 1.0] where the higher the number, the better match. This isn't strictly necessary, but I think it looks nicer. :)</p>
<p>Finally, we can calculate the similarity between two books. So how similar are Cuckoo's Calling and the Deathly Hallows?</p>
<pre class="scheme"><code>&gt; (let ([a (with-input-from-file "Cuckoo's Calling.txt" word-rank)]
        [b (with-input-from-file "Deathly Hallows.txt" word-rank)])
    (cosine-similarity a b))
0.6965</code></pre>
<p>About 70% (not that the numbers mean particularly much). So let's try a few more.</p>
<p>Unfortunately, I don't have much in the way of crime fiction--I'm more interested in science fiction and fantasy. But that should work well enough. Using a bit of framework (<a href="https://github.com/jpverkamp/small-projects/blob/master/authorship/main.rkt">linky</a>), we can measure this easily enough.</p>
<p>So, who among the author I have could have written Cuckoo's Calling? Here are the most similar books:</p>
<table class="table table-striped">
<tr><td>1</td><td>0.740</td><td>Butcher, Jim</td><td>Storm Front</td></tr>
<tr><td>2</td><td>0.739</td><td>Butcher, Jim</td><td>Side Jobs</td></tr>
<tr><td>3</td><td>0.738</td><td>Butcher, Jim</td><td>Turn Coat</td></tr>
<tr><td>4</td><td>0.736</td><td>Butcher, Jim</td><td>Small Favor</td></tr>
<tr><td>5</td><td>0.735</td><td>Butcher, Jim</td><td>White Night</td></tr>
<tr><td>6</td><td>0.734</td><td>Butcher, Jim</td><td>Cold Days</td></tr>
<tr><td>7</td><td>0.731</td><td>Butcher, Jim</td><td>Proven Guilty</td></tr>
<tr><td>8</td><td>0.729</td><td>Butcher, Jim</td><td>Ghost Story</td></tr>
<tr><td>9</td><td>0.728</td><td>Stirling, S. M. & Meier, Shirley</td><td>Shadow's Son</td></tr>
<tr><td>10</td><td>0.728</td><td>Stephen, King</td><td>Wizard and Glass</td></tr>
<tr><td>11</td><td>0.728</td><td>Lovegrove, James</td><td>The Age of Zeus</td></tr>
<tr><td>12</td><td>0.726</td><td>Butcher, Jim</td><td>Dead Beat</td></tr>
<tr><td>13</td><td>0.726</td><td>Duncan, Glen</td><td>Last Werewolf, The</td></tr>
<tr><td>14</td><td>0.724</td><td>Butcher, Jim</td><td>Fool Moon</td></tr>
<tr><td>15</td><td>0.723</td><td>Stephen, King</td><td>The Drawing of the Three</td></tr>
<tr><td>16</td><td>0.723</td><td>Adams, Douglas</td><td>So Long, and Thanks for All the Fish</td></tr>
<tr><td>17</td><td>0.722</td><td>Stephen, King</td><td>The Dark Tower</td></tr>
<tr><td>18</td><td>0.718</td><td>Lovegrove, James</td><td>The Age of Odin</td></tr>
<tr><td>19</td><td>0.718</td><td>Butcher, Jim</td><td>Changes</td></tr>
<tr><td>20</td><td>0.715</td><td>Chima, Cinda Williams</td><td>The Wizard Heir</td></tr>
</table>
<p>Perhaps it's not surprising that Jim Butcher's books are at the top of the list. After all, it's about the closest thing that I have to crime fiction. Still, it doesn't look good that absolutely none of JK Rowling's books are in the top 20. In fact, we have to go all of the way down to 43 to find Harry Potter and the Half-Blood Prince, with a score of 0.704.</p>
<p>What if we average each author's books? Perhaps JK Rowling is more consistently matched against Cuckoo's Calling?</p>
<table class="table table-striped">
<tr><td>1</td><td>0.714</td><td>Stephen, King</td></tr>
<tr><td>2</td><td>0.709</td><td>Butcher, Jim</td></tr>
<tr><td>3</td><td>0.704</td><td>Briggs, Patricia</td></tr>
<tr><td>4</td><td>0.704</td><td>Benson, Amber</td></tr>
<tr><td>5</td><td>0.698</td><td>Robinson, Kim Stanley</td></tr>
<tr><td>6</td><td>0.694</td><td>Colfer, Eoin</td></tr>
<tr><td>7</td><td>0.693</td><td>Jordan, Robert</td></tr>
<tr><td>8</td><td>0.692</td><td>Rowling, J.K.</td></tr>
<tr><td>9</td><td>0.687</td><td>Steele, Allen</td></tr>
<tr><td>10</td><td>0.687</td><td>Orwell, George</td></tr>
<tr><td>11</td><td>0.682</td><td>Croggon, Alison</td></tr>
<tr><td>12</td><td>0.681</td><td>Adams, Douglas</td></tr>
<tr><td>13</td><td>0.680</td><td>Riordan, Rick</td></tr>
<tr><td>14</td><td>0.679</td><td>Card, Orson Scott</td></tr>
<tr><td>15</td><td>0.671</td><td>Brin, David</td></tr>
<table class="table table-striped">

Not so much better, that. I have a few ideas though. Perhaps in a few days, we'll see what we can do.

If you'd like to see the full source, you can do so here: <a href="https://github.com/jpverkamp/small-projects/tree/master/authorship">authorship attribution on github</a>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "Authorship attribution: Part 1";
var disqus_url = "http://blog.jverkamp.com/2013/07/30/authorship-attribution-part-1/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/07/30/the-wolverine">← The Wolverine</a></li><li><a href="http://blog.jverkamp.com/category/archives">Archives</a></li><li><a href="http://blog.jverkamp.com/2013/08/02/authorship-attribution-part-2">Authorship attribution: Part 2 →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/07/19/racket-roguelike-post-mortem">← Racket Roguelike: Post-mortem</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/2013/08/02/authorship-attribution-part-2">Authorship attribution: Part 2 →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/02/09/isma-2013-aims-5-dns-based-censorship">← ISMA 2013 AIMS-5 -- DNS Based Censorship</a></li><li><a href="http://blog.jverkamp.com/category/research">Research</a></li><li><a href="http://blog.jverkamp.com/2013/08/02/authorship-attribution-part-2">Authorship attribution: Part 2 →</a></li></ul></nav>

                <div class="legal">
                        <a href="http://blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="http://blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="http://directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>