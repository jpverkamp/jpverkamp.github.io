<!DOCTYPE html>
<html>
<head>
        
        

        <title>Racket Roguelike 4: Slightly smarter critters! | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js"></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" />
        <script src="/highlight/highlight.pack.js"></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js"></script>

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" />
        <script src="/custom.js"></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="http://blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="http://blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="http://blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="http://blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="http://blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="http://blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="http://blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="http://blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="http://blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="http://blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="http://blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="http://blog.jverkamp.com/category/archives/2014">2014</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="http://blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="http://blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="http://blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="http://blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="http://blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="http://blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li></ul></li></ul>

      <form action="http://www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">Racket Roguelike 4: Slightly smarter critters!</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2013-04-25"><span class="year">2013</span> <span class="month">Apr</span> <span class="day">25</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="http://blog.jverkamp.com/category/programming/by-topic/games">Games</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic/games/roguelikes">Roguelikes</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project/games/racket-roguelike">Racket Roguelike</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source/7drl">7DRL</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/racket">Racket</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p>A very minimal update today, since the many, many early May conference deadlines are fast approaching. But despite there only being a few lines of changes, already we are starting to get a bit more character to the game. Essentially, today we want to make the enemies smarter and add a bit more <em>explosive</em> sort of attacks.</p>
<!--more-->
<p>If you'd like to start at the beginning, click here: <a href="http://blog.jverkamp.com/2013/04/04/racket-roguelike-1-a-gui-screens-io-and-you">Racket Roguelike 1: A GUI, screens, I/O, and you!</a></p>
<p>First, we want a smarter type of enemy. Since we already have a unit hierarchy, all we have to do is extend wandering enemy. What we want is something that can figure out which direction the player is in and move towards them.</p>
<p>To do that, our points need to be a little smarter:</p>
<pre class="scheme"><code>; point.rkt

; Calculate the distance between two points
(define (distance p1 p2)
  (define (sqr n) (* n n))
  (sqrt (+ (sqr (- (pt-x p2) (pt-x p1)))
           (sqr (- (pt-y p2) (pt-y p1))))))

; Convert a point to a unit point (distance is one for origin)
(define (unit p)
  (define d (distance 0 p))
  (pt (/ (pt-x p) d)
      (/ (pt-y p) d)))</code></pre>
<p>Essentially, we can use <code>unit</code> to take a vector (such as the one between an enemy and a player) and normalize it to a single unit. We can then round that to get a direction for movement from any of the eight directions. Something like this:</p>
<pre class="scheme"><code>; entities.rkt

; A seeking enemy runs towards the player (heedless of walls) 50% of the time
; The other 50% of the time they are identical to a wandering enemy
(define-thing seeking-enemy wandering-enemy
  [(act me world)
   (cond
     ; 50/50 of a seeking move
     [(= 0 (random 2))
      (define player-pt (thing-get (send world get-player) 'location))
      (define me-pt (thing-get me 'location))
      (define dir (unit (- player-pt me-pt)))
      (send world try-move
            me
            (+ me-pt
               (inexact-&gt;exact (round (pt-x dir)))
               (inexact-&gt;exact (round (pt-y dir)))))]
     ; Otherwise, wander
     [else
      (thing-call wandering-enemy 'act me world)])])</code></pre>
<p>I could make it so that the enemy always seeks the player, but these seekers are pretty dumb. Given a single tile of walk on the shortest path between them, it will be stuck forever. But one thing that I've found with any sort of movement code is that a touch of pure randomness does a world of good. It tends to make things look a good deal smarter than they actually are. :)</p>
<p>On the flip side, we can use almost the exact same code to implement a <code>fleeing-enemy</code> just in the last part of the first <code>cond</code> block, subtract the direction from <code>me-pt</code> instead of adding it.</p>
<p>So how do these work in practice? Well, lets make the rats scared and a new class of enemies (goblins) that will run towards the player:</p>
<pre class="scheme"><code>; entities.rkt

; A list of random enemies that we can generate
(define random-enemies
  (vector
   (make-thing fleeing-enemy
     [name "rat"]
     [character #\r])
   (make-thing seeking-enemy
     [name "goblin"]
     [character #\g]
     [color "orange"]
     [attack 15]
     [defense 5])))</code></pre>
<p>Sounds about time for a few screenshots.</p>
<p>First, here we have the original state of the game, with a few randomly generated rats and goblins all around.</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/1-initial-state.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/1-initial-state.png" /></a></p>
<p>Give it a few ticks and the goblins are already coming for us. How long do you think it will take them to cause some trouble?</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/2-closer.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/2-closer.png" /></a></p>
<p>Not so long... This is exactly the behavior that I was talking about. There's nothing in the code base right now to get the goblins to flank the player, but nevertheless they went right to it.</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/3-ganging-up.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/3-ganging-up.png" /></a></p>
<p>And now, no more goblins. :) They're not so tough.</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/4-no-more-goblins.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/4-no-more-goblins.png" /></a></p>
<p>Although I guess I am down to 60% of my original health...</p>
<p>So what about other enemies? Well, I did mention more interesting attacks. What would it take to make an enemy that explodes?</p>
<p>To really make it work, we need one more method in the <code>world%</code> class:</p>
<pre class="scheme"><code>; world.rkt

; Get a list of all entities by location
(define/public (get-entities p)
  (for/list ([entity (cons player npcs)]
             #:when (= p (thing-get entity 'location)))
    entity))</code></pre>
<p>With that, we can write an <code>act</code> method which will calculate the distance to the player. If it's less than 1.5 (so technically we want <span>\( sqrt(2) \)</span>, but 1.5 is close enough), explode. Anything within 1 tile will be attacked. Something like this:</p>
<pre class="scheme"><code>; entities.rkt

; An exploding enemy blows up whenever the player gets close to them
; Otherwise, they cannot move or attack (by default)
(define-thing exploding-enemy enemy
  [(act me world)
   (define distance-to-player
     (distance (thing-get (send world get-player) 'location)
               (thing-get me 'location)))
   (when (&lt;= distance-to-player 1.5)
     ; Log message
     (send world log (format "~a explodes violently" (thing-get me 'name)))

     ; Damage neighbors
     (for* ([xd (in-range -1 2)]
            [yd (in-range -1 2)])
       (for ([other (send world get-entities
                           (+ (thing-get me 'location)
                              (pt xd yd)))])
         (unless (eqv? me other)
           (send world attack me other))))

     ; Destroy self
     (thing-set! me 'health -1))])</code></pre>
<p>Use this to implement a bomb:</p>
<pre class="scheme"><code>; entities.rkt

(make-thing exploding-enemy
  [name "bomb"]
  [color "white"]
  [character #\O]
  [attack 50])</code></pre>
<p>How does it look in practice?</p>
<p>Start by finding and approaching a bomb:</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/5-on-approach.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/5-on-approach.png" /></a></p>
<p><strong>BOOM!</strong></p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/6-boom.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/6-boom.png" /></a></p>
<p>Ouch. Those things back a heck of a punch. (An attack of 50 will do that to do you.) Luckily, they don't chase after you. But what if they did?</p>
<pre class="scheme"><code>; entities.rkt

(make-thing seeking-enemy
  [name "bomber"]
  [character #\b]
  [color "orange"]
  [attack 25]
  [defense 5]
  [(act me world)
   (thing-call seeking-enemy 'act me world)
   (thing-call exploding-enemy 'act me world)])</code></pre>
<p>The trick here is half-goblin, half-bomb. It will run right up to you and then explode. Looks like a lot of fun, doesn't it? It doesn't pack quite the same bunch, but it's still kind of terrifying. Particularly when you get something like this:</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/7-incoming.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/7-incoming.png" /></a></p>
<p>A few rounds later:</p>
<p><a data-toggle="lightbox" href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/8-ouch.png"><img src="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/8-ouch.png" /></a></p>
<p>Boom! We'll still need to do a fair bit of balancing, these just don't do quite enough damage to really be scary. But it's certainly a start.</p>
<p>Well, that's all that I have for today. A bit of a short update, but we should have more next week as we get into the summer.</p>
<p>As always, if you'd like to see all of the code for this project, you can do so on GitHub: - <a href="https://github.com/jpverkamp/racket-roguelike/tree/day-4" title="Racket Roguelike on GitHub">Racket Roguelike - Day 4</a> - <a href="https://github.com/jpverkamp/racket-roguelike" title="Racket Roguelike on GitHub">Racket Roguelike - Up to date</a></p>
<p>If you'd like to try it yourself, you'll need to have both <a href="http://git-scm.com/">Git</a> and <a href="http://racket-lang.org/">Racket</a> and run the following series of commands:</p>
<pre class="bash"><code>git clone git://github.com/jpverkamp/racket-roguelike.git
cd racket-roguelike
git checkout day-4
git submodule init
git submodule update
racket main.rkt</code></pre>
<p><strong>Edit:</strong></p>
<p>It seems that the submodules wondered off at some point. Instead, you can install the three libraries this uses directly using <code><a href="http://docs.racket-lang.org/search/index.html?q=pkg">pkg</a></code>, and then run the code:</p>
<pre class="bash"><code>raco pkg install github://github.com:jpverkamp/ascii-canvas/master
raco pkg install github://github.com:jpverkamp/noise/master
raco pkg install github://github.com:jpverkamp/thing/master
git clone git://github.com/jpverkamp/racket-roguelike.git
cd racket-roguelike
git checkout day-4
racket main.rkt</code></pre>
<p>For part 5, click here: <a href="http://blog.jverkamp.com/2013/05/02/racket-roguelike-5-armors-and-weapons-and-potions-oh-my">Racket Roguelike 5: Armors and weapons and potions, oh my!</a></p>
<div><h3 class="ranking-title">Racket Roguelike</h3><ol><li><a href="http://blog.jverkamp.com/2013/04/04/racket-roguelike-1-a-gui-screens-io-and-you">Racket Roguelike 1: A GUI, screens, I/O, and you!</a></li><li><a href="http://blog.jverkamp.com/2013/04/11/racket-roguelike-2-infinite-caves">Racket Roguelike 2: Infinite caves!</a></li><li><a href="http://blog.jverkamp.com/2013/04/18/racket-roguelike-3-rats-rats-everywhere">Racket Roguelike 3: Rats, rats, everywhere!</a></li><li><a href="http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters">Racket Roguelike 4: Slightly smarter critters!</a></li></ol></div>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "Racket Roguelike 4: Slightly smarter critters!";
var disqus_url = "http://blog.jverkamp.com/2013/04/25/racket-roguelike-4-slightly-smarter-critters/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/04/25/oblivion">← Oblivion</a></li><li><a href="http://blog.jverkamp.com/category/archives">Archives</a></li><li><a href="http://blog.jverkamp.com/2013/04/29/vtanks-for-ludum-dare-26">VTanks for Ludum Dare 26 →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2013/04/23/user-space-continuation-based-thread-pool">← User space continuation-based thread pool</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/2013/04/29/vtanks-for-ludum-dare-26">VTanks for Ludum Dare 26 →</a></li></ul></nav>

                <div class="legal">
                        <a href="http://blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="http://blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="http://directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>