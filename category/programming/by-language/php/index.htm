<!DOCTYPE html>
<html>
<head>
        
        

        <title>PHP | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js"></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" />
        <script src="/highlight/highlight.pack.js"></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js"></script>

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" />
        <script src="/custom.js"></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="http://blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="http://blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="http://blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="http://blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="http://blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="http://blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="http://blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="http://blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="http://blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="http://blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="http://blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="http://blog.jverkamp.com/category/archives/2014">2014</a></li><li><a href="http://blog.jverkamp.com/category/archives/2015">2015</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="http://blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="http://blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="http://blog.jverkamp.com/category/writing/ideas">Ideas</a></li><li><a href="http://blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="http://blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="http://blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="http://blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li><li><a href="http://blog.jverkamp.com/category/writing/writing-excuses">Writing Excuses</a></li></ul></li></ul>

      <form action="http://www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">PHP</h1>

                        <div class="entry-meta">
                                
                                
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <ul class="list-inline"><li>[â†‘ <a href="..">By Language</a>]</li><li>[<a href="zend">Zend</a>]</li></ul>
<h2>Posts</h2>
<ul class="list-unstyled"><li class="post-preview"><header><h2 class="entry-title"><a href="http://blog.jverkamp.com/2014/01/13/csrf-protection-injection-with-jquery-and-zend">CSRF protection injection with jQuery and Zend</a></h2><div class="entry-meta"><time class="entry-date" datetime="2014-01-13"><span class="year">2014</span> <span class="month">Jan</span> <span class="day">13</span></time></div></header><div class="preview"><p><a href="https://en.wikipedia.org/wiki/Cross-site_request forgery">Csrf</a> attacks are among the most common vulnerabilities against websites, listed as <a href="https://www.owasp.org/index.php/Top_10_2013-A8-Cross-Site_Request_Forgery_(CSRF)">number 8</a> on <a href="https://www.owasp.org/index.php/Top_10_2013-Top_10">OWASP's 2013 Top 10 list</a>.</p>
<a href="http://blog.jverkamp.com/2014/01/13/csrf-protection-injection-with-jquery-and-zend">read more...</a></div><hr /></li><li class="post-preview"><header><h2 class="entry-title"><a href="http://blog.jverkamp.com/2012/07/20/openid-part-2">OpenID - Part 2</a></h2><div class="entry-meta"><time class="entry-date" datetime="2012-07-20"><span class="year">2012</span> <span class="month">July</span> <span class="day">20</span></time></div></header><div class="preview"><p>I <a href="http://blog.jverkamp.com/2012/07/19/adventures-in-openid-land">wrote yesterday </a>about getting OpenID up and running, but when I played with the code a bit more today, I realized that something funny was going on. Yahoo worked exactly as I expected, when I clicked on the link for the first time, it would take me to the Yahoo login page and then to a page to grant the proper permissions. All well and good. The same with Google.</p>
<p>But when I logged out of the app and tried to log back in, Google would show the same authentication screen each time. Granted, it was working so far as getting the authentication that I wanted from it, but it was still a little frustrating having to go through that step each time. And if it was frustrating for me, I could only imagine how bad it would be for any users down the line. The strangest part was that it worked fine when I was just getting the identity, but not when I also requested the email.</p>
<p>I ended up spending about two hours (twice as long as getting everything set up in the first place) fruitlessly searching for something that would tell me what was going on, but I kept bouncing around on the same few StackOverflow <a title="LightOpenID forbidden when redirecting back" href="http://stackoverflow.com/questions/4696234/lightopenid-forbidden-when-redirecting-back">[1]</a> <a title="Log-in the user with LightOpenID" href="http://stackoverflow.com/questions/3995011/log-in-the-user-with-lightopenid">[2]</a> and Google App Engine <a title="Using Federated Authentication via OpenID in Google App Engine" href="https://developers.google.com/appengine/articles/openid">[1]</a>Â pages, none of which were particularly helpful to my particular case.</p>
<p>Finally, the query '<a title="Google Query for 'openid &quot;remember this approval&quot; not working'" href="http://www.google.com/search?q=openid+&quot;remember+this+approval&quot;+not+working">openid "remember this approval" not working</a>' led me to <a title="&quot;Remember this approval&quot; being asked every auth " href="https://groups.google.com/forum/?fromgroups#!topic/google-federated-login-api/yvJ2tmdtr00">this 2009 discussion</a> on Google Groups (with almost that exact same subject line). The final response, which was only sent to the entire list "because the answer may have general interest", has this little gem in it:</p>
<p>I think the problem here is that you are not setting any value for "openid.realm". As such, we are inferring the realm as the "openid.return_to" (as we should, per the OpenID spec). The problem is that your return_to includes some random number, so it is unique to each request. So basically, there is no fixed handle that allow us to use in storing the user's preferences.</p>
<p>Interesting.</p>
<p>After a few more minutes search and <a title="What should I set REALM to, using LightOpenID, for Google url's to remain consistent, for storage in my database?" href="http://stackoverflow.com/questions/5453156/what-should-i-set-realm-to-using-lightopenid-for-google-urls-to-remain-consis">another relevant StackOverflow post</a> (I really should get more involved with that site, it's an amazing resource for programmers), I realize that I had to set the LightOpenID realm to something consistent and relevant:</p>
<pre class="php"><code>
$openid-&gt;realm = 'http://example.com/';
</code></pre>
<p>Bam. Now it works. It's always amazing when you spend hours working on a one line fix. Hopefully if anyone has this particular problem in the future, there's now one more post on the Internet about how to fix it.</p>
<p>For anyone interested, here is the complete code that I'm using for OpenID now:</p>
<pre class="php"><code>
session_start();

$openid = new LightOpenID('http://example.com/');
$openid-&gt;realm = 'http://example.com/';
$openid-&gt;required = array('contact/email');
$openid-&gt;returnURL = 'http://example.com/';

// Login via google
if(isset($_POST['login-google'])) {
        $_SESSION['provider'] = 'Google';
        $openid-&gt;identity = 'https://www.google.com/accounts/o8/id';
        header('Location: ' . $openid-&gt;authUrl());
}

// We're returning from a login attempt
elseif ($openid-&gt;validate()) {
        $attrs = $openid-&gt;getAttributes();
        $_SESSION['id'] = $attrs['contact/email'];
        $_SESSION['openid'] = $openid-&gt;identity;
}
</code></pre><a href="http://blog.jverkamp.com/2012/07/20/openid-part-2">read more...</a></div><hr /></li><li class="post-preview"><header><h2 class="entry-title"><a href="http://blog.jverkamp.com/2012/07/19/adventures-in-openid-land">Adventures in OpenID land</a></h2><div class="entry-meta"><time class="entry-date" datetime="2012-07-19"><span class="year">2012</span> <span class="month">July</span> <span class="day">19</span></time></div></header><div class="preview"><p>Today I started working on a little webapp. It's mostly to get me back in practice writing website code, but it does hopefully have the side effect of being useful. More on that later though, perhaps when it's actually working.</p>
<p>In any case, the first thing that I wanted to do for this app was to set up some sort of authentication system. Since I don't have HTTPS set up at the moment with my webhost (<a title="Dreamhost Homepage" href="http://dreamhost.com/">Dreamhost</a>; they really are pretty good to work with and far better than my previous host) and it doesn't really make as much sense to send passwords in plaintext over the network, I decided to go ahead and give OpenID a try. Granted, it's still sending the authentication information in plaintext for at least part of the trip, but it's still something that I think is worth learning.</p>
<p>Since the backend of the website is written in PHP (I generally use Python for prototyping, but I have to admit that it's easier to just hammer out webpages Â in PHP) so the first place that a simple web search landed me was <a title="Getting Started with OpenID and PHP" href="http://devzone.zend.com/1254/getting-started-with-openid-and-php/">this article</a> on DevZone, using <a title="Janrain's OpenID Library" href="http://janrain.com/openid-enabled/">Janrain's OpenID library</a>. I downloaded everything... and immediately ran into a roadblock. Turns out inÂ hindsight, I wasn't actually sure how OpenID works, so just mashing the code into my own wasn't going as well as I'd hoped.</p>
<p>Off to <a href="https://en.wikipedia.org/wiki/Wikipedia">Openid</a>!</p>
<p>It turns out that OpenID basically works like this:</p>
<p><a href="http://blog.jverkamp.com/2012/07/19/adventures-in-openid-land/openid.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/07/19/adventures-in-openid-land/openid.png" /></a></p>
<p>(<a href="https://en.wikipedia.org/wiki/source">File:OpenIDvs.Pseudo-AuthenticationusingOAuth.svg</a>, <a title="CC0 1.0 Universal (CC0 1.0)  Public Domain Dedication" href="http://creativecommons.org/publicdomain/zero/1.0/deed.en">license: CC0 1.0</a>)</p>
<p>So basically there were a number of redirects going on behind the scenes that I was having issues setting up, partially due to the relative complexity of the library that I was using. Looking around on the Internet, I found that I wasn't alone in thinking that the library that I was using was particularly powerful, but also a bit more complicated to get started with. So I went in search of a new library and eventually came across <a title="LightOpenID on Google Code" href="http://code.google.com/p/lightopenid/">LightOpenID</a>, with the promise that I could "Â code a functional client in less than ten lines of code". So off I went!</p>
<p>And really, it was only a tiny bit more than ten lines of code, based on the response to <a title="StackOverflow: Log-in the user with LightOpenID" href="http://stackoverflow.com/questions/3995011/log-in-the-user-with-lightopenid">this StackOverflow question</a>:</p>
<pre class="php"><code>session_start();

$openid = new LightOpenID('http://example.com/');
$openid-&gt;returnURL = 'http://example.com/';

// Login via google
if(isset($_POST['login-google'])) {
        $_SESSION['provider'] = 'Google';
        $openid-&gt;identity = 'https://www.google.com/accounts/o8/id';
        header('Location: ' . $openid-&gt;authUrl());
}

// We're returning from a login attempt
elseif ($openid-&gt;validate()) {
        $_SESSION['openid'] = $openid-&gt;identity;
}</code></pre>
<p>That was easy. Next thing to get settled was what do I do with this information now that I have it? Well, the first problem is that the OpenID identifiers are kind of long winded. As an example, my OpenID from Google is 80 characters long, of which 39 are (as far as I can tell) the unique part of the ID. I could probably pull off just those 39 characters and that would be reasonable, but I wanted another solution.</p>
<p>Lo and behold, I can get the user's email address using only 3 more lines of code, one to add the request and two to process it when I get the response back:</p>
<pre class="php"><code>session_start();

$openid = new LightOpenID('http://example.com/');
$openid-&gt;required = array('contact/email');
$openid-&gt;returnURL = 'http://example.com/';

// Login via google
if(isset($_POST['login-google'])) {
        $_SESSION['provider'] = 'Google';
        $openid-&gt;identity = 'https://www.google.com/accounts/o8/id';
        header('Location: ' . $openid-&gt;authUrl());
}

// We're returning from a login attempt
elseif ($openid-&gt;validate()) {
        $attrs = $openid-&gt;getAttributes();
        $_SESSION['id'] = $attrs['contact/email'];
        $_SESSION['openid'] = $openid-&gt;identity;
}</code></pre>
<p>I think this will also be helpful in the future as I can use it for this particular project to send out reports to the user whenever they might want them and use it for a sort of sharing system where users can share information with others based on their email address.</p>
<p>So two problems solved and everything seems peachy. So far I have it working with both Google and Yahoo, although adding more should be pretty much trivial. Not too bad for only an hour or so of work.</p><a href="http://blog.jverkamp.com/2012/07/19/adventures-in-openid-land">read more...</a></div><hr /></li></ul>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                
        </article>

        <footer class="container" role="contentinfo">
                

                <div class="legal">
                        <a href="http://blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="http://blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="http://directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>