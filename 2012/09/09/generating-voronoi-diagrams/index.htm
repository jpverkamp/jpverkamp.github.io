<!DOCTYPE html>
<html>
<head>
        
        

        <title>Generating Voronoi diagrams | jverkamp.com | John-Paul Verkamp</title>

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

        <script src="//code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-theme.min.css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/3.0.3a/ekko-lightbox.min.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery.transit/0.9.9/jquery.transit.min.js"></script>

        <!-- Highlight.js for syntax highlighting -->
        <link rel="stylesheet" href="/highlight/styles/obsidian.css" />
        <script src="/highlight/highlight.pack.js"></script>

        <!-- MathJax for LaTeX support -->
        <script src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

        <!-- nanoGallery for Flickr Galleries -->
        <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/css/themes/light/nanogallery_light.css" />
        <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/nanogallery/4.4.2/jquery.nanogallery.min.js"></script>

        <!-- Any custom CSS or JS that I've written; this should be kept minimal -->
        <link rel="stylesheet" href="/custom.css" />
        <script src="/custom.js"></script>

        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link rel="alternate" type="application/atom+xml" title="jverkamp.com (Atom 2.0)" href="http://blog.jverkamp.com/feed/" />
</head>
<body>
        <header class="container">
        <nav class="navbar navbar-default" role="navigation">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="http://blog.jverkamp.com"><span style="color: green;">jv</span>erkamp.com</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav"><li class="dropdown"><a href="http://blog.jverkamp.com/category/archives" class="dropdown-toggle">Archives<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/archives/2004">2004</a></li><li><a href="http://blog.jverkamp.com/category/archives/2005">2005</a></li><li><a href="http://blog.jverkamp.com/category/archives/2006">2006</a></li><li><a href="http://blog.jverkamp.com/category/archives/2007">2007</a></li><li><a href="http://blog.jverkamp.com/category/archives/2008">2008</a></li><li><a href="http://blog.jverkamp.com/category/archives/2009">2009</a></li><li><a href="http://blog.jverkamp.com/category/archives/2010">2010</a></li><li><a href="http://blog.jverkamp.com/category/archives/2011">2011</a></li><li><a href="http://blog.jverkamp.com/category/archives/2012">2012</a></li><li><a href="http://blog.jverkamp.com/category/archives/2013">2013</a></li><li><a href="http://blog.jverkamp.com/category/archives/2014">2014</a></li><li><a href="http://blog.jverkamp.com/category/archives/2015">2015</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/other" class="dropdown-toggle">Other<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/other/board-game-reviews">Board Game Reviews</a></li><li><a href="http://blog.jverkamp.com/category/other/cooking">Cooking</a></li><li><a href="http://blog.jverkamp.com/category/other/movie-reviews">Movie Reviews</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/photography" class="dropdown-toggle">Photography<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/photography/dp-challenge">DP Challenge</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosets">Photosets</a></li><li><a href="http://blog.jverkamp.com/category/photography/photosynth">Photosynth</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/programming" class="dropdown-toggle">Programming<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/programming/by-language">By Language</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project">By Project</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-source">By Source</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/programming/libraries">Libraries</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/research" class="dropdown-toggle">Research<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/research/by-topic">By Topic</a></li><li><a href="http://blog.jverkamp.com/category/research/publications">Publications</a></li></ul></li><li class="dropdown"><a href="http://blog.jverkamp.com/category/writing" class="dropdown-toggle">Writing<span class="caret"></span></a><ul class="dropdown-menu"><li><a href="http://blog.jverkamp.com/category/writing/by-genre">By Genre</a></li><li><a href="http://blog.jverkamp.com/category/writing/nanowrimo">NaNoWriMo</a></li><li><a href="http://blog.jverkamp.com/category/writing/novels">Novels</a></li><li><a href="http://blog.jverkamp.com/category/writing/other">Other</a></li><li><a href="http://blog.jverkamp.com/category/writing/short-stories">Short Stories</a></li></ul></li></ul>

      <form action="http://www.google.com/search" method="get" onSubmit="(function(obj){obj.q.value='site:blog.jverkamp.com '+obj.qfront.value;})(this)" class="navbar-form navbar-right" role="search">
        <div class="form-group">
          <input name="q" type="hidden" />
          <input name="qfront" type="text" class="form-control" placeholder="Search" />
          <button type="submit" class="btn btn-default" value="Search">Search</button>
        </p>
      </form>
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>
        </header>

        <article class="container">
                <header>
                        <h1 class="entry-title">Generating Voronoi diagrams</h1>

                        <div class="entry-meta">
                                <span class="posted-on"><time class="entry-date" datetime="2012-09-09"><span class="year">2012</span> <span class="month">Sept</span> <span class="day">9</span></time></span>
                                <span class="tags"><ul class="tag-list list-inline"><li><a href="http://blog.jverkamp.com/category/programming/by-language/java">Java</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-language/scheme">Scheme</a></li><li><a href="http://blog.jverkamp.com/category/programming/by-project/wombat-ide">Wombat IDE</a></li></ul></span>
                        </div>

                        <hr />
                </header>
                <div class="entry-content">
                        <p>I was playing with <a href="http://blog.jverkamp.com/2012/02/18/wombat-ide-updated-tree-and-image-libraries">image library</a> and started to think about more ways that I could generate images. One idea that came to mind was to generate a bunch of colored points on the image and then color every other pixel based on which seed point was closest. Turns out, that's exactly what a <a href="https://en.wikipedia.org/wiki/Voronoi_diagram">Voronoi diagram</a>is... The Wikipedia article at least says that Voronoi diagrams can be traced back at least to <a href="https://en.wikipedia.org/wiki/Descartes">Descartes</a>in 1644, so I guess at least I'm in good company. :)</p>
<!--more-->
<p>Anyways, the code is actually really simple, given the <code>(c211 image)</code> library's <code>make-image</code> function:</p>
<pre class="scheme"><code>; fill an rs x cs by coloring each point based on:
; the color in cls associated with the closest point in pts
; calculate all of the distances, sort for smallest, use that one
(define (fill dist rs cs pts cls)
  (make-image rs cs
    (lambda (r c)
      (cadar
        (sort
          (lambda (pc1 pc2) (&lt; (car pc1) (car pc2)))
          (map (lambda (pt cl)
                 (list
                       (dist (list r c) pt) cl)) pts cls))))))</code></pre>
<p>Yeah. That's it. It's a little more complicated as you need to give it a distance function. Here's the boring everyday distance function that you're probably familiar with:</p>
<pre class="scheme"><code>; distance function
(define (distance p1 p2)
  (expt (+ (expt (- (car p1) (car p2)) 2)
           (expt (- (cadr p1) (cadr p2)) 2))
    0.5))</code></pre>
<p>And if you generate a random collection of starting points and colors, you might a Voronoi diagram that looks an awful lot like this one:</p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-distance.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-distance.png" /></a></p>
<p>But what's really interesting (at least to me) is when you start using different distance functions. For example, if you instead use Manhattan / taxicab distance (with the same points), you get something more like this:</p>
<pre class="scheme"><code>; manhattan distance function
(define (manhattan p1 p2)
  (+ (abs (- (car p1) (car p2))) (abs (- (cadr p1) (cadr p2)))))</code></pre>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-manhattan.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-manhattan.png" /></a></p>
<p>Basically, you get a lot more straight lines at 45 and 90 intervals rather than the more varied angles in the original.</p>
<p>As another function, what if you take the standard distance function but rather than squaring and then taking the square root, you use fourth powers:</p>
<pre class="scheme"><code>; take a quartic instead of a square
(define (quartic p1 p2)
  (expt (+ (expt (- (car p1) (car p2)) 4)
           (expt (- (cadr p1) (cadr p2)) 4))
    0.25))</code></pre>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-quartic.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-quartic.png" /></a></p>
<p>Same sort of thing as the original distance function, but you get a little more bowing and curving than the straight distance allows. Mostly out of curiosity, I'll leave it as an exercise for why I jumped from 2nd powers to 4th. <span class="spoiler">It turns out that odd powers do strange things to signs. :)</span></p>
<p>Finally, what if you invert the distance function with a simple 1/n? Or perhaps you just negate the distance function, weighting points further rather than closer. You might get something like this (with the <code>/0</code> function designed to ignore dividing by 0):</p>
<pre class="scheme"><code>; a very special division that can divide by 0 :)
(define (/0 a b) (if (= b 0) 1e9 (/ a b)))

; use some strange negative power
(define (inverse p1 p2)
  (+ (/0 1 (abs (- (car p1) (car p2)))) (/0 1 (abs (- (cadr p1) (cadr p2))))))

; negative distance
(define (ndist p1 p2)
  (- (distance p1 p2)))</code></pre>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-inverse.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-inverse.png" /></a></p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-ndist.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-ndist.png" /></a></p>
<p>Now rather than choosing the closet point, you're essentially choosing the furthest. It gets a little more complicated if the fraction you're dealing with is under 1, but since we're dealing with whole numbers of pixels that really didn't come up.</p>
<p>Or what if you do something similar to Manhattan distance function, but instead of adding the two, you multiply them? What if you just take the bigger of the two? The smaller?</p>
<pre class="scheme"><code>; multiply the differences
(define (mul/min/max-xy p1 p2)
  (*/min/max (abs (- (car p1) (car p2))) (abs (- (cadr p1) (cadr p2)))))</code></pre>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-mul-xy.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-mul-xy.png" /></a></p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-max-xy.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-max-xy.png" /></a></p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-min-xy.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-min-xy.png" /></a></p>
<p>All sorts of interesting patterns there when the minimum (or the dominant factor in a multiplication) switches from one axis to the other. Neat stuff.</p>
<p>Anyways, does anyone have a different distance function that does something interesting? Feel free to leave a comment below. You can either generate the images yourself in Wombat or just leave the code and I'll run it for you.</p>
<p>If you'd like to download the source code, you can do so here: <a href="https://github.com/jpverkamp/small-projects/blob/master/blog/voronoi.ss" title="voronoi source">voronoi source</a></p>
<p><strong>Update:</strong> Here are the images reference in my comment below:</p>
<ul>
    <li>Using the original algorithm:<br />
        <a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-original.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-original.png" /></a></li>
    <li>Using normalized coordinates:<br />
        <a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-normalized.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-normalized.png" /></a></li>
</ul>
<p><strong>Update:</strong> For the second comment (working in degrees), I actually rewrote the code to work in Racket, since I'm far more familiar with that:</p>
<pre class="scheme"><code>(require images/flomap)

(struct pt (x y))
(struct cpt pt (c))

(define (voronoi width height distance seeds)
  (flomap-&gt;bitmap
   (build-flomap*
    3 width height
    (λ (x y)
      (call-with-values
       (thunk
        (for/fold ([min-distance +inf.0] [min-color #f])
                  ([seed (in-list seeds)])
          (define new-distance (distance (pt x y) seed))
          (if (&lt; new-distance min-distance)
              (values new-distance (cpt-c seed))
              (values min-distance min-color))))
       (λ (distance color) color))))))

(define (random-seeds width height count)
  (for/list ([i (in-range count)])
    (cpt (random width) (random height)
         (vector (random) (random) (random)))))</code></pre>
<p>That lets us translate your new function fairly easily (although the offsets are a little interesting):</p>
<pre class="scheme"><code>(voronoi
 160 40
 (λ (pt1 pt2)
   ; Unpack points
   (match-define (pt x1^ y1^) pt1)
   (match-define (pt x2^ y2^) pt2)

   ; Rescale to the range [20, 80] and [40, 80]
   (define x1 (+ x1^ 20))
   (define y1 (+ y1^ 40))
   (define x2 (+ x2^ 20))
   (define y2 (+ y2^ 40))

   (sqrt (+ (sqr (- (* x1 (cos (degrees-&gt;radians y1)))
                    (* x2 (cos (degrees-&gt;radians y2)))))
            (sqr (- y1 y2)))))

 (random-seeds 160 40 10))</code></pre>
<p>Here are a few examples:</p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-degree-1.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-degree-1.png" /></a></p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-degree-2.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-degree-2.png" /></a></p>
<p>That's really cool. They sort of look like scales!</p>
<p>If you relax the range and let it go a full circle (x and y both ranging from 0 to 360), you get this:</p>
<p><a href="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-degree-full.png" data-toggle="lightbox"><img src="http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/voronoi-comment-degree-full.png" /></a></p>
<p>Not quite scales any more, but there is a lot of neat structure in there.</p>
                </div>
                <div class="entry-footnotes">
                        <div id="footnotes"><ol></ol></div>
                </div>

                <div id="disqus_thread"></div>
<script type="text/javascript">
var disqus_shortname = "jverkamp";
var disqus_title = "Generating Voronoi diagrams";
var disqus_url = "http://blog.jverkamp.com/2012/09/09/generating-voronoi-diagrams/";
/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </article>

        <footer class="container" role="contentinfo">
                <nav class="navbar navbar-default" role="navigation"><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2012/09/08/the-first-two-problems">← The First Two Problems</a></li><li><a href="http://blog.jverkamp.com/category/archives">Archives</a></li><li><a href="http://blog.jverkamp.com/2012/09/10/fun-with-turtle-graphics-and-stars">Fun with turtle graphics and stars →</a></li></ul><ul class="nav navbar-nav nav-justified"><li><a href="http://blog.jverkamp.com/2012/09/08/the-first-two-problems">← The First Two Problems</a></li><li><a href="http://blog.jverkamp.com/category/programming">Programming</a></li><li><a href="http://blog.jverkamp.com/2012/09/10/fun-with-turtle-graphics-and-stars">Fun with turtle graphics and stars →</a></li></ul></nav>

                <div class="legal">
                        <a href="http://blog.jverkamp.com/feed/atom.xml">feed <img style="border: 0;" src="http://blog.jverkamp.com/rss.png" /></a><br />
                        All posts unless otherwise mentioned are licensed under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/80x15.png" /></a><br />
                        Any source code unless otherwise mentioned is licensed under the <a href="http://directory.fsf.org/wiki/License:BSD_3Clause">3 clause BSD license</a>
                </div>
        </footer>

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-53688146-1', 'auto');
ga('send', 'pageview');
</script>
</body>
</html>