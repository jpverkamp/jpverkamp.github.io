<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust Solvers on jverkamp.com</title><link>https://blog.jverkamp.com/series/rust-solvers/</link><description>Recent content in Rust Solvers on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 16 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/series/rust-solvers/atom.xml" rel="self" type="application/rss+xml"/><item><title>Stateful Solvers and Iterators</title><link>https://blog.jverkamp.com/2022/10/16/stateful-solvers-and-iterators/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2022/10/16/stateful-solvers-and-iterators/</guid><description>&lt;p>&lt;a href="programming/languages/rust/">Rust&lt;/a>, yet again! Let&amp;rsquo;s take what we did last time with &lt;a href="https://blog.jverkamp.com/2022/10/04/solving-sudoku-again/">Solving Sudoku (again)&lt;/a> and improve the code structure a bit more.&lt;/p>
&lt;p>Goals:&lt;/p>
&lt;ul>
&lt;li>Create a &amp;lsquo;Solver&amp;rsquo; struct that can maintain state (such as how many states we&amp;rsquo;ve visited, how much time we&amp;rsquo;ve spent)&lt;/li>
&lt;li>Track the above stats&lt;/li>
&lt;li>Turn the &amp;lsquo;Solver&amp;rsquo; into an iterator which will iterate through given solutions (a single call will give the first solution or you can run through the iterator to get all of them)&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;d like to follow along, I&amp;rsquo;ve started uploading the code here: &lt;a href="https://github.com/jpverkamp/rust-solvers" target="_blank" rel="noopener">https://github.com/jpverkamp/rust-solvers&lt;/a>&lt;/p></description></item><item><title>Solving Sudoku (again)</title><link>https://blog.jverkamp.com/2022/10/04/solving-sudoku-again/</link><pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2022/10/04/solving-sudoku-again/</guid><description>&lt;p>More &lt;a href="programming/languages/rust/">Rust&lt;/a>! This time, I want to go back to my post on &lt;a href="https://blog.jverkamp.com/2021/06/25/a-generic-brute-force-backtracking-solver/">A Generic Brute Force Backtracking Solver&lt;/a>. For one, because I&amp;rsquo;m learning Rust. For two, because there is a crate specifically for &lt;code>&lt;a href="https://docs.rs/im/latest/im/">im&lt;/a>&lt;/code>
mutable data structures. And for three, because I expect it will be much faster. We shall see!&lt;/p></description></item></channel></rss>