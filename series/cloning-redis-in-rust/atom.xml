<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloning Redis in Rust on jverkamp.com</title><link>https://blog.jverkamp.com/series/cloning-redis-in-rust/</link><description>Recent content in Cloning Redis in Rust on jverkamp.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 31 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/series/cloning-redis-in-rust/atom.xml" rel="self" type="application/rss+xml"/><item><title>Cloning Redis in Rust: RESP [Part 1]</title><link>https://blog.jverkamp.com/2023/01/31/cloning-redis-in-rust-resp-part-1/</link><pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/01/31/cloning-redis-in-rust-resp-part-1/</guid><description>&lt;p>Recently, I read through &lt;a href="https://blog.jverkamp.com/2023/01/31/build-your-own-redis-with-c/c-/">Build Your Own Redis with C/C++&lt;/a>. C/C++ are ugly, so let&amp;rsquo;s run through it in Rust!&lt;/p>
&lt;p>My goal: implement some large subset of &lt;a href="https://redis.io/">Redis&lt;/a> (both server and client) in Rust. For any features I implement, it should be compatible with Redis off the shelf. I should be able to use their client with my server and their server with my client and it should just work.&lt;/p>
&lt;p>No idea if this is going to work out, but it sounds like an interesting problem!&lt;/p>
&lt;p>First task: &lt;a href="https://redis.io/docs/reference/protocol-spec/">the REdis Serialization Protocol (RESP)&lt;/a>.&lt;/p></description></item></channel></rss>