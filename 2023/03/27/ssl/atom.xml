<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SSL on jverkamp.com</title><link>https://blog.jverkamp.com/2023/03/27/ssl/</link><description>Recent content in SSL on jverkamp.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 27 Mar 2023 00:02:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/2023/03/27/ssl/atom.xml" rel="self" type="application/rss+xml"/><item><title>Wildcard Let's Encrypt certificates with Nginx Proxy Manager and Cloudflare</title><link>https://blog.jverkamp.com/2023/03/27/wildcard-lets-encrypt-certificates-with-nginx-proxy-manager-and-cloudflare/</link><pubDate>Mon, 27 Mar 2023 00:02:00 +0000</pubDate><guid>https://blog.jverkamp.com/2023/03/27/wildcard-lets-encrypt-certificates-with-nginx-proxy-manager-and-cloudflare/</guid><description>&lt;p>Another quick snippet that I figured out this weekend. It&amp;rsquo;s not hard, but it&amp;rsquo;s something that I really wanted to do and had to look up where it was, so perhaps it will help you.&lt;/p>
&lt;p>Problem statement:&lt;/p>
&lt;p>I run a bunch of local services in my network. They aren&amp;rsquo;t exposed publicly (I use Wireguard to access them when out and about), so I really don&amp;rsquo;t &lt;em>need&lt;/em> HTTPS. But (rightfully) a number of services behave better when they&amp;rsquo;re behind HTTPS + if there&amp;rsquo;s ever a service that&amp;rsquo;s running amuck (Internet of Things devices?) that&amp;rsquo;s listening, I don&amp;rsquo;t want them to see anything.&lt;/p>
&lt;nav id="TableOfContents">
 &lt;ul>
 &lt;li>&lt;a href="#options">Options&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#start-adding-the-certificate">Start adding the certificate&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#generate-a-cloudflare-api-token">Generate a Cloudflare API token&lt;/a>&lt;/li>
 &lt;li>&lt;a href="#change-your-proxy-host-to-use-it">Change your proxy host to use it.&lt;/a>&lt;/li>
 &lt;/ul>
&lt;/nav>

&lt;h2 id="options">Options&lt;/h2>
&lt;p>Option 1: Use Nginx Proxy Manager to request certificates for each subdomain. It works quickly and well. Problem: All certificates are published to Certificate Transparency Logs. I don&amp;rsquo;t immediately mind exposing what I&amp;rsquo;m running&amp;hellip; but I&amp;rsquo;d still rather now.&lt;/p>
&lt;p>Option 2: Set up wildcard certificates. This requires integration with your DNS provider (since wildcards need a DNS challenge, not TCP).&lt;/p>
&lt;p>Of course (based on the title), we&amp;rsquo;re going with option 2. &amp;#x1f604;&lt;/p></description></item></channel></rss>