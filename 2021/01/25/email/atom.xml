<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Email on jverkamp.com</title><link>https://blog.jverkamp.com/2021/01/25/email/</link><description>Recent content in Email on jverkamp.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 25 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.jverkamp.com/2021/01/25/email/atom.xml" rel="self" type="application/rss+xml"/><item><title>GMail Oldest First</title><link>https://blog.jverkamp.com/2021/01/25/gmail-oldest-first/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2021/01/25/gmail-oldest-first/</guid><description>&lt;p>It&amp;rsquo;s been &lt;a href="https://blog.jverkamp.com/2016/01/02/inlining-plaintext-attachments-in-gmail/">rather a while&lt;/a> since I last worked on a userscript, but there&amp;rsquo;s been a problem I&amp;rsquo;ve been trying to solve for some time.&lt;/p>
&lt;p>I want to have my GMail in order from oldest to newest. While you can do this for all messages, you can&amp;rsquo;t do it within a single page.&lt;/p></description></item><item><title>An SPF DNS Server</title><link>https://blog.jverkamp.com/2020/07/16/an-spf-dns-server/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2020/07/16/an-spf-dns-server/</guid><description>&lt;p>The &lt;a href="https://en.wikipedia.org/wiki/Sender%20Policy%20Framework">Sender Policy Framework&lt;/a> is one of those things that&amp;rsquo;s really powerful and useful to help prevent phishing and email spam, but can be a royal pain to work with. Specifically, SPF is a series of DNS TXT records&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> with a specific format that can be looked up by any email service to verify that an email was sent by a server that should be authorized to send email on your behalf. For example&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;v=spf1 ip4:192.0.2.0/24 ip4:198.51.100.123 a -all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>v=spf1&lt;/code> - tells the client this is an SPF record and should always start the record&lt;/li>
&lt;li>&lt;code>{key}[:{value}]?&lt;/code> - one of many different key/value pairs that can define the record
&lt;ul>
&lt;li>in the case above a &lt;code>ip4&lt;/code> key species an &lt;a href="https://en.wikipedia.org/wiki/IPv4">IPv4&lt;/a> address range that can send emails on your behalf (the value can be optional)&lt;/li>
&lt;li>the &lt;code>a&lt;/code> above is another special case where if the sender domain (&lt;code>jp@example.com&lt;/code> would be &lt;code>example.com&lt;/code>) resolves via a &lt;code>DNS A&lt;/code> record to the server that sent the email, it&amp;rsquo;s allows&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-all&lt;/code> is a fallthrough case meaning &amp;lsquo;fail all that didn&amp;rsquo;t match a previous case&lt;/li>
&lt;/ul>
&lt;p>There are a number of other cases, but we&amp;rsquo;ll get to the other interesting ones in a bit.&lt;/p></description></item><item><title>Observation Server</title><link>https://blog.jverkamp.com/2020/06/10/observation-server/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2020/06/10/observation-server/</guid><description>&lt;p>For a number of years now, I&amp;rsquo;ve been writing down my &amp;lsquo;observations&amp;rsquo;. Essentially, it&amp;rsquo;s a semi-structured set of text files that I keep in Dropbox. One for each day, in a folder by month. I record interesting people I see, things I did worth doing, and things my children did which were adorable.&lt;/p>
&lt;p>After a while, I started wanting to look back, so first, I wrote a relatively simple script that would go back through my archives and send me everything I did 1/2/3/4/etc years ago. That worked well enough, but it ended up generating a lot of emails to go through some days. So the second generation is a server that can format those pages and display them as a nice webpage.&lt;/p>
&lt;p>The most interesting part perhaps was dealing with the tarballs that I keep the archives in (they&amp;rsquo;re plain text, so they compress very well). I wanted to keep them compressed, so I had to decompress them in memory on the fly.&lt;/p></description></item><item><title>Creating a temporary SMTP server to 'catch' domain validation emails</title><link>https://blog.jverkamp.com/2018/07/09/creating-a-temporary-smtp-server-to-catch-domain-validation-emails/</link><pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2018/07/09/creating-a-temporary-smtp-server-to-catch-domain-validation-emails/</guid><description>&lt;p>One problem that has come up a time or two is dealing with email-based domain validation (specifically in this case for the issuance of TLS certificates) on domains that aren&amp;rsquo;t actually configured to receive email. Yes, in a perfect world, it would be easier to switch to DNS-based validation (since we have to have control of the DNS for the domain, we need it later), but let&amp;rsquo;s just assume that&amp;rsquo;s not an option. So, how do we &amp;lsquo;catch&amp;rsquo; the activation email so we can prove we can receive email on that domain?&lt;/p></description></item><item><title>Inlining plaintext attachments in Gmail</title><link>https://blog.jverkamp.com/2016/01/02/inlining-plaintext-attachments-in-gmail/</link><pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2016/01/02/inlining-plaintext-attachments-in-gmail/</guid><description>&lt;p>When you send a text message to a Gmail email address (at least from an iPhone using AT&amp;amp;T), you get something like this:&lt;/p>
&lt;figure>&lt;img src="https://blog.jverkamp.com/embeds/2016/gpti-before.png">
&lt;/figure>

&lt;p>It&amp;rsquo;s vaguely annoying to have to click through every single time just to see what the message is, especially when various extensions (such as &lt;a href="https://github.com/gorhill/uMatrix">uMatrix&lt;/a>) break overlay rendering or when you have multiple attachments.&lt;/p>
&lt;p>Much better would be to just display the plaintext attachments inline:&lt;/p>
&lt;figure>&lt;img src="https://blog.jverkamp.com/embeds/2016/gpti-after.png">
&lt;/figure></description></item><item><title>Setting up Postfix and OpenDKIM</title><link>https://blog.jverkamp.com/2015/08/10/setting-up-postfix-and-opendkim/</link><pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate><guid>https://blog.jverkamp.com/2015/08/10/setting-up-postfix-and-opendkim/</guid><description>&lt;p>Last week, I was presented with a fairly interesting challenge: add DKIM (via &lt;a href="http://www.opendkim.org/">OpenDKIM&lt;/a>) support to our mail servers (running &lt;a href="http://www.postfix.org/">Postfix&lt;/a>). Given that I&amp;rsquo;ve never actually worked on a mail server before, it sounded fun. &amp;#x1f604;&lt;/p></description></item><item><title>Backing up Gmail</title><link>https://blog.jverkamp.com/2012/09/03/backing-up-gmail/</link><pubDate>Mon, 03 Sep 2012 14:00:03 +0000</pubDate><guid>https://blog.jverkamp.com/2012/09/03/backing-up-gmail/</guid><description>&lt;p>A little while ago, I decided to finally get around to backing up everything. I&amp;rsquo;m pulling all of my files from both my website and the servers on campus to my desktop at home, backing my desktop up to an external hard drive, and pushing those backups to an offsite location.&lt;/p>
&lt;p>The former two steps are using &lt;a href="https://github.com/jpverkamp/small-projects/blob/master/scripts/backup-gmail.txt" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>First, some basic setup. Of course, I&amp;rsquo;ve blanked out my own username and password. This definitely isn&amp;rsquo;t the best way to authenticate (storing the password in plain text? :(), but it works out well enough.&lt;/p></description></item></channel></rss>